cscope 15 $HOME/work/mtp/libmtp_android/libmtp               0000785338
	@src/Main.cpp

1 
	~<°dio.h
>

2 
	~<uni°d.h
>

3 
	~<f˙é.h
>

4 
	~<MçSîvî.h
>

6 
	#ALOGE
 
¥ötf


	)

8 
usög
 
«me•a˚
 
	g™droid
;

10 
MçSîvî
 * 
	$MçSîvî_£tup
(
MçD©aba£
 * 
myD©aba£
, 
boﬁ
 
u£Pç
)

12 
fd
 = 
	`›í
("/dev/mç_usb", 
O_RDWR
);

13 i‡(
fd
 >= 0) {

14 
MçSîvî
* 
£rvî
 = 
√w
 
	`MçSîvî
(
fd
, 
myD©aba£
,

15 
u£Pç
, 
AID_MEDIA_RW
, 0664, 0775);

16  
£rvî
;

18 
	`ALOGE
("couldÇŸ o≥¿MTP drivî,Éºno: %d", 
î∫o
);

20 
	}
}

22 
	$MçSîvî_run
(
MçSîvî
 * 
£rvî
)

24 i‡(
£rvî
)

25 
£rvî
->
	`run
();

27 
	`ALOGE
("server isÇull inÑun");

28 
	}
}

30 
	$MçSîvî_˛ónup
(
MçSîvî
 * 
£rvî
)

32 
Muãx
::
Autﬁock
 
	`autoLock
(
sMuãx
);

34 i‡(
£rvî
) {

35 
dñëe
 
£rvî
;

37 
	`ALOGE
("server isÇull in cleanup");

39 
	}
}

41 
	$MçSîvî_add_°‹age
(
MçSîvî
 * 
£rvî
, 
°‹ageId
)

43 
Muãx
::
Autﬁock
 
	`autoLock
(
sMuãx
);

45 i‡(
£rvî
) {

46 * 
∑th
 = "/root/home";

47 * 
des¸ùti⁄
 = "Hello MTP";

48 
ª£rveS∑˚
 = 1024;

49 
boﬁ
 
ªmovabÀ
 = 
åue
;

50 
maxFûeSize
 = 1024;

51 
MçSt‹age
* 
°‹age
 = 
√w
 
	`MçSt‹age
(
°‹ageId
, 
∑thSå
, 
des¸ùti⁄Så
,

52 
ª£rveS∑˚
, 
ªmovabÀ
, 
maxFûeSize
);

53 
£rvî
->
	`addSt‹age
(
°‹age
);

55 
	`ALOGE
("server isÇull inádd_storage");

57 
	}
}

59 
	$MçSîvî_ªmove_°‹age
(
MçSîvî
 * 
£rvî
, 
°‹ageId
)

61 
Muãx
::
Autﬁock
 
	`autoLock
(
sMuãx
);

63 i‡(
£rvî
) {

64 
MçSt‹age
* 
°‹age
 = 
£rvî
->
	`gëSt‹age
(
°‹ageId
);

65 i‡(
°‹age
) {

66 
£rvî
->
	`ªmoveSt‹age
(
°‹age
);

67 
dñëe
 
°‹age
;

70 
	`ALOGE
("server isÇull inÑemove_storage");

71 
	}
}

75 
	$maö
(
¨gc
, * 
¨gv
[])

77 
	`¥ötf
("Hello MTP\n");

79 
MTPSîvî
 * 
£rvî
 = 
	`MçSîvî_£tup
(
NULL
, 
Ál£
);

80 
	`MçSîvî_run
(
£rvî
);

81 
	`MçSîvî_add_°‹age
(
£rvî
, 0x10001);

83 
	}
}

	@src/MtpDataPacket.cpp

17 
	#LOG_TAG
 "MçD©aPackë"

	)

19 
	~<°dio.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<f˙é.h
>

22 
	~<uni°d.h
>

24 #ifde‡
MTP_HOST


25 
	~<usbho°/usbho°.h
>

27 
	~"MçD©aPackë.h
"

28 
	~"MçSåögBuf„r.h
"

30 
	#MTP_BUFFER_SIZE
 16384

	)

32 
«me•a˚
 
	g™droid
 {

34 
	gMçD©aPackë
::
MçD©aPackë
()

35 : 
MçPackë
(
MTP_BUFFER_SIZE
),

36 
mOff£t
(
MTP_CONTAINER_HEADER_SIZE
)

40 
	gMçD©aPackë
::~
MçD©aPackë
() {

43 
MçD©aPackë
::
ª£t
() {

44 
MçPackë
::
ª£t
();

45 
	gmOff£t
 = 
MTP_CONTAINER_HEADER_SIZE
;

48 
	gMçD©aPackë
::
£tO≥øti⁄Code
(
MçO≥øti⁄Code
 
code
) {

49 
MçPackë
::
putUI¡16
(
MTP_CONTAINER_CODE_OFFSET
, 
code
);

52 
	gMçD©aPackë
::
£tTønß˘i⁄ID
(
MçTønß˘i⁄ID
 
id
) {

53 
MçPackë
::
putUI¡32
(
MTP_CONTAINER_TRANSACTION_ID_OFFSET
, 
id
);

56 
uöt16_t
 
	gMçD©aPackë
::
gëUI¡16
() {

57 
off£t
 = 
mOff£t
;

58 
uöt16_t
 
	gªsu…
 = (uöt16_t)
mBuf„r
[
off£t
] | ((uint16_t)mBuffer[offset + 1] << 8);

59 
	gmOff£t
 += 2;

60  
	gªsu…
;

63 
uöt32_t
 
	gMçD©aPackë
::
gëUI¡32
() {

64 
off£t
 = 
mOff£t
;

65 
uöt32_t
 
	gªsu…
 = (uöt32_t)
mBuf„r
[
off£t
] | ((uint32_t)mBuffer[offset + 1] << 8) |

66 ((
uöt32_t
)
mBuf„r
[
off£t
 + 2] << 16) | ((uint32_t)mBuffer[offset + 3] << 24);

67 
	gmOff£t
 += 4;

68  
	gªsu…
;

71 
uöt64_t
 
	gMçD©aPackë
::
gëUI¡64
() {

72 
off£t
 = 
mOff£t
;

73 
uöt64_t
 
	gªsu…
 = (uöt64_t)
mBuf„r
[
off£t
] | ((uint64_t)mBuffer[offset + 1] << 8) |

74 ((
uöt64_t
)
mBuf„r
[
off£t
 + 2] << 16) | ((uint64_t)mBuffer[offset + 3] << 24) |

75 ((
uöt64_t
)
mBuf„r
[
off£t
 + 4] << 32) | ((uint64_t)mBuffer[offset + 5] << 40) |

76 ((
uöt64_t
)
mBuf„r
[
off£t
 + 6] << 48) | ((uint64_t)mBuffer[offset + 7] << 56);

77 
	gmOff£t
 += 8;

78  
	gªsu…
;

81 
	gMçD©aPackë
::
gëUI¡128
(
uöt128_t
& 
vÆue
) {

82 
vÆue
[0] = 
gëUI¡32
();

83 
	gvÆue
[1] = 
gëUI¡32
();

84 
	gvÆue
[2] = 
gëUI¡32
();

85 
	gvÆue
[3] = 
gëUI¡32
();

88 
	gMçD©aPackë
::
gëSåög
(
MçSåögBuf„r
& 
°rög
)

90 
°rög
.
ªadFromPackë
(
this
);

93 
I¡8Li°
* 
	gMçD©aPackë
::
gëAI¡8
() {

94 
I¡8Li°
* 
ªsu…
 = 
√w
 Int8List;

95 
	gcou¡
 = 
gëUI¡32
();

96 
	gi
 = 0; i < 
	gcou¡
; i++)

97 
	gªsu…
->
push
(
gëI¡8
());

98  
	gªsu…
;

101 
UI¡8Li°
* 
	gMçD©aPackë
::
gëAUI¡8
() {

102 
UI¡8Li°
* 
ªsu…
 = 
√w
 UInt8List;

103 
	gcou¡
 = 
gëUI¡32
();

104 
	gi
 = 0; i < 
	gcou¡
; i++)

105 
	gªsu…
->
push
(
gëUI¡8
());

106  
	gªsu…
;

109 
I¡16Li°
* 
	gMçD©aPackë
::
gëAI¡16
() {

110 
I¡16Li°
* 
ªsu…
 = 
√w
 Int16List;

111 
	gcou¡
 = 
gëUI¡32
();

112 
	gi
 = 0; i < 
	gcou¡
; i++)

113 
	gªsu…
->
push
(
gëI¡16
());

114  
	gªsu…
;

117 
UI¡16Li°
* 
	gMçD©aPackë
::
gëAUI¡16
() {

118 
UI¡16Li°
* 
ªsu…
 = 
√w
 UInt16List;

119 
	gcou¡
 = 
gëUI¡32
();

120 
	gi
 = 0; i < 
	gcou¡
; i++)

121 
	gªsu…
->
push
(
gëUI¡16
());

122  
	gªsu…
;

125 
I¡32Li°
* 
	gMçD©aPackë
::
gëAI¡32
() {

126 
I¡32Li°
* 
ªsu…
 = 
√w
 Int32List;

127 
	gcou¡
 = 
gëUI¡32
();

128 
	gi
 = 0; i < 
	gcou¡
; i++)

129 
	gªsu…
->
push
(
gëI¡32
());

130  
	gªsu…
;

133 
UI¡32Li°
* 
	gMçD©aPackë
::
gëAUI¡32
() {

134 
UI¡32Li°
* 
ªsu…
 = 
√w
 UInt32List;

135 
	gcou¡
 = 
gëUI¡32
();

136 
	gi
 = 0; i < 
	gcou¡
; i++)

137 
	gªsu…
->
push
(
gëUI¡32
());

138  
	gªsu…
;

141 
I¡64Li°
* 
	gMçD©aPackë
::
gëAI¡64
() {

142 
I¡64Li°
* 
ªsu…
 = 
√w
 Int64List;

143 
	gcou¡
 = 
gëUI¡32
();

144 
	gi
 = 0; i < 
	gcou¡
; i++)

145 
	gªsu…
->
push
(
gëI¡64
());

146  
	gªsu…
;

149 
UI¡64Li°
* 
	gMçD©aPackë
::
gëAUI¡64
() {

150 
UI¡64Li°
* 
ªsu…
 = 
√w
 UInt64List;

151 
	gcou¡
 = 
gëUI¡32
();

152 
	gi
 = 0; i < 
	gcou¡
; i++)

153 
	gªsu…
->
push
(
gëUI¡64
());

154  
	gªsu…
;

157 
	gMçD©aPackë
::
putI¡8
(
öt8_t
 
vÆue
) {

158 
Æloˇã
(
mOff£t
 + 1);

159 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)
vÆue
;

160 i‡(
	gmPackëSize
 < 
	gmOff£t
)

161 
	gmPackëSize
 = 
mOff£t
;

164 
	gMçD©aPackë
::
putUI¡8
(
uöt8_t
 
vÆue
) {

165 
Æloˇã
(
mOff£t
 + 1);

166 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)
vÆue
;

167 i‡(
	gmPackëSize
 < 
	gmOff£t
)

168 
	gmPackëSize
 = 
mOff£t
;

171 
	gMçD©aPackë
::
putI¡16
(
öt16_t
 
vÆue
) {

172 
Æloˇã
(
mOff£t
 + 2);

173 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)(
vÆue
 & 0xFF);

174 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 8) & 0xFF);

175 i‡(
	gmPackëSize
 < 
	gmOff£t
)

176 
	gmPackëSize
 = 
mOff£t
;

179 
	gMçD©aPackë
::
putUI¡16
(
uöt16_t
 
vÆue
) {

180 
Æloˇã
(
mOff£t
 + 2);

181 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)(
vÆue
 & 0xFF);

182 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 8) & 0xFF);

183 i‡(
	gmPackëSize
 < 
	gmOff£t
)

184 
	gmPackëSize
 = 
mOff£t
;

187 
	gMçD©aPackë
::
putI¡32
(
öt32_t
 
vÆue
) {

188 
Æloˇã
(
mOff£t
 + 4);

189 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)(
vÆue
 & 0xFF);

190 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 8) & 0xFF);

191 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 16) & 0xFF);

192 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 24) & 0xFF);

193 i‡(
	gmPackëSize
 < 
	gmOff£t
)

194 
	gmPackëSize
 = 
mOff£t
;

197 
	gMçD©aPackë
::
putUI¡32
(
uöt32_t
 
vÆue
) {

198 
Æloˇã
(
mOff£t
 + 4);

199 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)(
vÆue
 & 0xFF);

200 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 8) & 0xFF);

201 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 16) & 0xFF);

202 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 24) & 0xFF);

203 i‡(
	gmPackëSize
 < 
	gmOff£t
)

204 
	gmPackëSize
 = 
mOff£t
;

207 
	gMçD©aPackë
::
putI¡64
(
öt64_t
 
vÆue
) {

208 
Æloˇã
(
mOff£t
 + 8);

209 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)(
vÆue
 & 0xFF);

210 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 8) & 0xFF);

211 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 16) & 0xFF);

212 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 24) & 0xFF);

213 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 32) & 0xFF);

214 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 40) & 0xFF);

215 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 48) & 0xFF);

216 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 56) & 0xFF);

217 i‡(
	gmPackëSize
 < 
	gmOff£t
)

218 
	gmPackëSize
 = 
mOff£t
;

221 
	gMçD©aPackë
::
putUI¡64
(
uöt64_t
 
vÆue
) {

222 
Æloˇã
(
mOff£t
 + 8);

223 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)(
vÆue
 & 0xFF);

224 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 8) & 0xFF);

225 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 16) & 0xFF);

226 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 24) & 0xFF);

227 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 32) & 0xFF);

228 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 40) & 0xFF);

229 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 48) & 0xFF);

230 
	gmBuf„r
[
mOff£t
++] = (
uöt8_t
)((
vÆue
 >> 56) & 0xFF);

231 i‡(
	gmPackëSize
 < 
	gmOff£t
)

232 
	gmPackëSize
 = 
mOff£t
;

235 
	gMçD©aPackë
::
putI¡128
(c⁄° 
öt128_t
& 
vÆue
) {

236 
putI¡32
(
vÆue
[0]);

237 
putI¡32
(
vÆue
[1]);

238 
putI¡32
(
vÆue
[2]);

239 
putI¡32
(
vÆue
[3]);

242 
	gMçD©aPackë
::
putUI¡128
(c⁄° 
uöt128_t
& 
vÆue
) {

243 
putUI¡32
(
vÆue
[0]);

244 
putUI¡32
(
vÆue
[1]);

245 
putUI¡32
(
vÆue
[2]);

246 
putUI¡32
(
vÆue
[3]);

249 
	gMçD©aPackë
::
putI¡128
(
öt64_t
 
vÆue
) {

250 
putI¡64
(
vÆue
);

251 
putI¡64
(
vÆue
 < 0 ? -1 : 0);

254 
	gMçD©aPackë
::
putUI¡128
(
uöt64_t
 
vÆue
) {

255 
putUI¡64
(
vÆue
);

256 
putUI¡64
(0);

259 
	gMçD©aPackë
::
putAI¡8
(c⁄° 
öt8_t
* 
vÆues
, 
cou¡
) {

260 
putUI¡32
(
cou¡
);

261 
	gi
 = 0; i < 
	gcou¡
; i++)

262 
putI¡8
(*
vÆues
++);

265 
	gMçD©aPackë
::
putAUI¡8
(c⁄° 
uöt8_t
* 
vÆues
, 
cou¡
) {

266 
putUI¡32
(
cou¡
);

267 
	gi
 = 0; i < 
	gcou¡
; i++)

268 
putUI¡8
(*
vÆues
++);

271 
	gMçD©aPackë
::
putAI¡16
(c⁄° 
öt16_t
* 
vÆues
, 
cou¡
) {

272 
putUI¡32
(
cou¡
);

273 
	gi
 = 0; i < 
	gcou¡
; i++)

274 
putI¡16
(*
vÆues
++);

277 
	gMçD©aPackë
::
putAUI¡16
(c⁄° 
uöt16_t
* 
vÆues
, 
cou¡
) {

278 
putUI¡32
(
cou¡
);

279 
	gi
 = 0; i < 
	gcou¡
; i++)

280 
putUI¡16
(*
vÆues
++);

283 
	gMçD©aPackë
::
putAUI¡16
(c⁄° 
UI¡16Li°
* 
vÆues
) {

284 
size_t
 
cou¡
 = (
vÆues
 ? vÆues->
size
() : 0);

285 
putUI¡32
(
cou¡
);

286 
size_t
 
	gi
 = 0; i < 
	gcou¡
; i++)

287 
putUI¡16
((*
vÆues
)[
i
]);

290 
	gMçD©aPackë
::
putAI¡32
(c⁄° 
öt32_t
* 
vÆues
, 
cou¡
) {

291 
putUI¡32
(
cou¡
);

292 
	gi
 = 0; i < 
	gcou¡
; i++)

293 
putI¡32
(*
vÆues
++);

296 
	gMçD©aPackë
::
putAUI¡32
(c⁄° 
uöt32_t
* 
vÆues
, 
cou¡
) {

297 
putUI¡32
(
cou¡
);

298 
	gi
 = 0; i < 
	gcou¡
; i++)

299 
putUI¡32
(*
vÆues
++);

302 
	gMçD©aPackë
::
putAUI¡32
(c⁄° 
UI¡32Li°
* 
li°
) {

303 i‡(!
li°
) {

304 
putEm±yAºay
();

306 
size_t
 
	gsize
 = 
li°
->
size
();

307 
putUI¡32
(
size
);

308 
size_t
 
	gi
 = 0; i < 
	gsize
; i++)

309 
putUI¡32
((*
li°
)[
i
]);

313 
	gMçD©aPackë
::
putAI¡64
(c⁄° 
öt64_t
* 
vÆues
, 
cou¡
) {

314 
putUI¡32
(
cou¡
);

315 
	gi
 = 0; i < 
	gcou¡
; i++)

316 
putI¡64
(*
vÆues
++);

319 
	gMçD©aPackë
::
putAUI¡64
(c⁄° 
uöt64_t
* 
vÆues
, 
cou¡
) {

320 
putUI¡32
(
cou¡
);

321 
	gi
 = 0; i < 
	gcou¡
; i++)

322 
putUI¡64
(*
vÆues
++);

325 
	gMçD©aPackë
::
putSåög
(c⁄° 
MçSåögBuf„r
& 
°rög
) {

326 
°rög
.
wrôeToPackë
(
this
);

329 
	gMçD©aPackë
::
putSåög
(c⁄° * 
s
) {

330 
MçSåögBuf„r
 
°rög
(
s
);

331 
	g°rög
.
wrôeToPackë
(
this
);

334 
	gMçD©aPackë
::
putSåög
(c⁄° 
uöt16_t
* 
°rög
) {

335 
cou¡
 = 0;

336 
	gi
 = 0; i < 256; i++) {

337 i‡(
	g°rög
[
i
])

338 
	gcou¡
++;

342 
putUI¡8
(
cou¡
 > 0 ? count + 1 : 0);

343 
	gi
 = 0; i < 
	gcou¡
; i++)

344 
putUI¡16
(
°rög
[
i
]);

346 i‡(
	gcou¡
 > 0)

347 
putUI¡16
(0);

350 #ifde‡
MTP_DEVICE


351 
	gMçD©aPackë
::
ªad
(
fd
) {

352 
ªt
 = ::
ªad
(
fd
, 
mBuf„r
, 
MTP_BUFFER_SIZE
);

353 i‡(
	gªt
 < 
	gMTP_CONTAINER_HEADER_SIZE
)

355 
	gmPackëSize
 = 
ªt
;

356 
	gmOff£t
 = 
MTP_CONTAINER_HEADER_SIZE
;

357  
	gªt
;

360 
	gMçD©aPackë
::
wrôe
(
fd
) {

361 
MçPackë
::
putUI¡32
(
MTP_CONTAINER_LENGTH_OFFSET
, 
mPackëSize
);

362 
	gMçPackë
::
putUI¡16
(
MTP_CONTAINER_TYPE_OFFSET
, 
MTP_CONTAINER_TYPE_DATA
);

363 
	gªt
 = ::
wrôe
(
fd
, 
mBuf„r
, 
mPackëSize
);

364  (
	gªt
 < 0 ?Ñet : 0);

367 
	gMçD©aPackë
::
wrôeD©a
(
fd
, * 
d©a
, 
uöt32_t
 
Àngth
) {

368 
Æloˇã
(
Àngth
);

369 
mem˝y
(
mBuf„r
 + 
MTP_CONTAINER_HEADER_SIZE
, 
d©a
, 
Àngth
);

370 
	gÀngth
 +
MTP_CONTAINER_HEADER_SIZE
;

371 
	gMçPackë
::
putUI¡32
(
MTP_CONTAINER_LENGTH_OFFSET
, 
Àngth
);

372 
	gMçPackë
::
putUI¡16
(
MTP_CONTAINER_TYPE_OFFSET
, 
MTP_CONTAINER_TYPE_DATA
);

373 
	gªt
 = ::
wrôe
(
fd
, 
mBuf„r
, 
Àngth
);

374  (
	gªt
 < 0 ?Ñet : 0);

379 #ifde‡
MTP_HOST


380 
	gMçD©aPackë
::
ªad
(
usb_ªque°
 *
ªque°
) {

382 
ªque°
->
buf„r
 = 
mBuf„r
;

383 
	gªque°
->
	gbuf„r_Àngth
 = 
mBuf„rSize
;

384 
	gÀngth
 = 
å™s„r
(
ªque°
);

385 i‡(
	gÀngth
 >
MTP_CONTAINER_HEADER_SIZE
) {

387 
uöt32_t
 
tŸÆLígth
 = 
MçPackë
::
gëUI¡32
(
MTP_CONTAINER_LENGTH_OFFSET
);

388 
Æloˇã
(
tŸÆLígth
);

389 
	gtŸÆLígth
 > 
	gÀngth
) {

390 
	gªque°
->
	gbuf„r
 = 
mBuf„r
 + 
Àngth
;

391 
	gªque°
->
	gbuf„r_Àngth
 = 
tŸÆLígth
 - 
Àngth
;

392 
	gªt
 = 
å™s„r
(
ªque°
);

393 i‡(
	gªt
 >= 0)

394 
Àngth
 +
ªt
;

396 
	gÀngth
 = 
ªt
;

401 i‡(
	gÀngth
 >= 0)

402 
mPackëSize
 = 
Àngth
;

403  
	gÀngth
;

406 
	gMçD©aPackë
::
ªadD©a
(
usb_ªque°
 *
ªque°
, * 
buf„r
, 
Àngth
) {

407 
	gªad
 = 0;

408 
	gªad
 < 
	gÀngth
) {

409 
	gªque°
->
	gbuf„r
 = (*)
buf„r
 + 
ªad
;

410 
	gªque°
->
	gbuf„r_Àngth
 = 
Àngth
 - 
ªad
;

411 
	gªt
 = 
å™s„r
(
ªque°
);

412 i‡(
	gªt
 < 0) {

413  
	gªt
;

415 
	gªad
 +
ªt
;

417  
	gªad
;

421 
	gMçD©aPackë
::
ªadD©aAsync
(
usb_ªque°
 *
ªq
) {

422 i‡(
usb_ªque°_queue
(
ªq
)) {

423 
ALOGE
("usb_ídpoöt_queuêÁûed,Éºno: %d", 
î∫o
);

430 
	gMçD©aPackë
::
ªadD©aWaô
(
usb_devi˚
 *
devi˚
) {

431 
usb_ªque°
 *
ªq
 = 
usb_ªque°_waô
(
devi˚
);

432  (
	gªq
 ?Ñeq->
	ga˘uÆ_Àngth
 : -1);

435 
	gMçD©aPackë
::
ªadD©aHódî
(
usb_ªque°
 *
ªque°
) {

436 
ªque°
->
buf„r
 = 
mBuf„r
;

437 
	gªque°
->
	gbuf„r_Àngth
 = 
ªque°
->
max_∑ckë_size
;

438 
	gÀngth
 = 
å™s„r
(
ªque°
);

439 i‡(
	gÀngth
 >= 0)

440 
mPackëSize
 = 
Àngth
;

441  
	gÀngth
;

444 
	gMçD©aPackë
::
wrôeD©aHódî
(
usb_ªque°
 *
ªque°
, 
uöt32_t
 
Àngth
) {

445 
	gMçPackë
::
putUI¡32
(
MTP_CONTAINER_LENGTH_OFFSET
, 
Àngth
);

446 
	gMçPackë
::
putUI¡16
(
MTP_CONTAINER_TYPE_OFFSET
, 
MTP_CONTAINER_TYPE_DATA
);

447 
	gªque°
->
	gbuf„r
 = 
mBuf„r
;

448 
	gªque°
->
	gbuf„r_Àngth
 = 
MTP_CONTAINER_HEADER_SIZE
;

449 
	gªt
 = 
å™s„r
(
ªque°
);

450  (
	gªt
 < 0 ?Ñet : 0);

453 
	gMçD©aPackë
::
wrôe
(
usb_ªque°
 *
ªque°
) {

454 
MçPackë
::
putUI¡32
(
MTP_CONTAINER_LENGTH_OFFSET
, 
mPackëSize
);

455 
	gMçPackë
::
putUI¡16
(
MTP_CONTAINER_TYPE_OFFSET
, 
MTP_CONTAINER_TYPE_DATA
);

458 
	gªque°
->
	gbuf„r
 = 
mBuf„r
;

459 
	gªque°
->
	gbuf„r_Àngth
 = 
MTP_CONTAINER_HEADER_SIZE
;

460 
	gªt
 = 
å™s„r
(
ªque°
);

461 i‡(
	gªt
 =
MTP_CONTAINER_HEADER_SIZE
) {

462 
ªque°
->
buf„r
 = 
mBuf„r
 + 
MTP_CONTAINER_HEADER_SIZE
;

463 
	gªque°
->
	gbuf„r_Àngth
 = 
mPackëSize
 - 
MTP_CONTAINER_HEADER_SIZE
;

464 
	gªt
 = 
å™s„r
(
ªque°
);

466  (
	gªt
 < 0 ?Ñet : 0);

469 
	gMçD©aPackë
::
wrôe
(
usb_ªque°
 *
ªque°
, * 
buf„r
, 
uöt32_t
 
Àngth
) {

470 
	gªque°
->
	gbuf„r
 = 
buf„r
;

471 
	gªque°
->
	gbuf„r_Àngth
 = 
Àngth
;

472 
	gªt
 = 
å™s„r
(
ªque°
);

473  (
	gªt
 < 0 ?Ñet : 0);

478 * 
	gMçD©aPackë
::
gëD©a
(& 
outLígth
) const {

479 
Àngth
 = 
mPackëSize
 - 
MTP_CONTAINER_HEADER_SIZE
;

480 i‡(
	gÀngth
 > 0) {

481 * 
	gªsu…
 = 
mÆloc
(
Àngth
);

482 i‡(
	gªsu…
) {

483 
mem˝y
(
ªsu…
, 
mBuf„r
 + 
MTP_CONTAINER_HEADER_SIZE
, 
Àngth
);

484 
	goutLígth
 = 
Àngth
;

485  
	gªsu…
;

488 
	goutLígth
 = 0;

489  
	gNULL
;

	@src/MtpDataPacket.h

17 #i‚de‡
_MTP_DATA_PACKET_H


18 
	#_MTP_DATA_PACKET_H


	)

20 
	~"MçPackë.h
"

21 
	~"mç.h
"

23 
	gusb_devi˚
;

24 
	gusb_ªque°
;

26 
«me•a˚
 
	g™droid
 {

28 
˛ass
 
	gMçSåögBuf„r
;

30 ˛as†
	cMçD©aPackë
 : 
public
 
MçPackë
 {

31 
¥iv©e
:

33 
mOff£t
;

35 
	gpublic
:

36 
MçD©aPackë
();

37 
	gvútuÆ
 ~
MçD©aPackë
();

39 
vútuÆ
 
ª£t
();

41 
£tO≥øti⁄Code
(
MçO≥øti⁄Code
 
code
);

42 
£tTønß˘i⁄ID
(
MçTønß˘i⁄ID
 
id
);

44 
ölöe
 c⁄° 
uöt8_t
* 
gëD©a
(Ëc⁄° {  
	gmBuf„r
 + 
	gMTP_CONTAINER_HEADER_SIZE
; }

45 
ölöe
 
uöt8_t
 
gëUI¡8
(Ë{  (
	guöt8_t
)
	gmBuf„r
[
mOff£t
++]; }

46 
ölöe
 
öt8_t
 
gëI¡8
(Ë{  (
	göt8_t
)
	gmBuf„r
[
mOff£t
++]; }

47 
uöt16_t
 
gëUI¡16
();

48 
ölöe
 
öt16_t
 
gëI¡16
(Ë{  (
	göt16_t
)
gëUI¡16
(); }

49 
uöt32_t
 
gëUI¡32
();

50 
ölöe
 
öt32_t
 
gëI¡32
(Ë{  (
	göt32_t
)
gëUI¡32
(); }

51 
uöt64_t
 
gëUI¡64
();

52 
ölöe
 
öt64_t
 
gëI¡64
(Ë{  (
	göt64_t
)
gëUI¡64
(); }

53 
gëUI¡128
(
uöt128_t
& 
vÆue
);

54 
ölöe
 
gëI¡128
(
öt128_t
& 
vÆue
Ë{ 
gëUI¡128
((
uöt128_t
&)value); }

55 
gëSåög
(
MçSåögBuf„r
& 
°rög
);

57 
I¡8Li°
* 
gëAI¡8
();

58 
UI¡8Li°
* 
gëAUI¡8
();

59 
I¡16Li°
* 
gëAI¡16
();

60 
UI¡16Li°
* 
gëAUI¡16
();

61 
I¡32Li°
* 
gëAI¡32
();

62 
UI¡32Li°
* 
gëAUI¡32
();

63 
I¡64Li°
* 
gëAI¡64
();

64 
UI¡64Li°
* 
gëAUI¡64
();

66 
putI¡8
(
öt8_t
 
vÆue
);

67 
putUI¡8
(
uöt8_t
 
vÆue
);

68 
putI¡16
(
öt16_t
 
vÆue
);

69 
putUI¡16
(
uöt16_t
 
vÆue
);

70 
putI¡32
(
öt32_t
 
vÆue
);

71 
putUI¡32
(
uöt32_t
 
vÆue
);

72 
putI¡64
(
öt64_t
 
vÆue
);

73 
putUI¡64
(
uöt64_t
 
vÆue
);

74 
putI¡128
(c⁄° 
öt128_t
& 
vÆue
);

75 
putUI¡128
(c⁄° 
uöt128_t
& 
vÆue
);

76 
putI¡128
(
öt64_t
 
vÆue
);

77 
putUI¡128
(
uöt64_t
 
vÆue
);

79 
putAI¡8
(c⁄° 
öt8_t
* 
vÆues
, 
cou¡
);

80 
putAUI¡8
(c⁄° 
uöt8_t
* 
vÆues
, 
cou¡
);

81 
putAI¡16
(c⁄° 
öt16_t
* 
vÆues
, 
cou¡
);

82 
putAUI¡16
(c⁄° 
uöt16_t
* 
vÆues
, 
cou¡
);

83 
putAUI¡16
(c⁄° 
UI¡16Li°
* 
vÆues
);

84 
putAI¡32
(c⁄° 
öt32_t
* 
vÆues
, 
cou¡
);

85 
putAUI¡32
(c⁄° 
uöt32_t
* 
vÆues
, 
cou¡
);

86 
putAUI¡32
(c⁄° 
UI¡32Li°
* 
li°
);

87 
putAI¡64
(c⁄° 
öt64_t
* 
vÆues
, 
cou¡
);

88 
putAUI¡64
(c⁄° 
uöt64_t
* 
vÆues
, 
cou¡
);

89 
putSåög
(c⁄° 
MçSåögBuf„r
& 
°rög
);

90 
putSåög
(c⁄° * 
°rög
);

91 
putSåög
(c⁄° 
uöt16_t
* 
°rög
);

92 
ölöe
 
putEm±ySåög
(Ë{ 
putUI¡8
(0); }

93 
ölöe
 
putEm±yAºay
(Ë{ 
putUI¡32
(0); }

96 #ifde‡
MTP_DEVICE


98 
ªad
(
fd
);

101 
wrôe
(
fd
);

102 
wrôeD©a
(
fd
, * 
d©a
, 
uöt32_t
 
Àngth
);

105 #ifde‡
MTP_HOST


106 
ªad
(
usb_ªque°
 *
ªque°
);

107 
ªadD©a
(
usb_ªque°
 *
ªque°
, * 
buf„r
, 
Àngth
);

108 
ªadD©aAsync
(
usb_ªque°
 *
ªq
);

109 
ªadD©aWaô
(
usb_devi˚
 *
devi˚
);

110 
ªadD©aHódî
(
usb_ªque°
 *
ï
);

112 
wrôeD©aHódî
(
usb_ªque°
 *
ï
, 
uöt32_t
 
Àngth
);

113 
wrôe
(
usb_ªque°
 *
ï
);

114 
wrôe
(
usb_ªque°
 *
ï
, * 
buf„r
, 
uöt32_t
 
Àngth
);

117 
ölöe
 
boﬁ
 
hasD©a
(Ëc⁄° {  
	gmPackëSize
 > 
	gMTP_CONTAINER_HEADER_SIZE
; }

118 
ölöe
 
uöt32_t
 
gëC⁄èöîLígth
(Ëc⁄° {  
	gMçPackë
::
gëUI¡32
(
MTP_CONTAINER_LENGTH_OFFSET
); }

119 * 
gëD©a
(& 
outLígth
) const;

	@src/MtpDatabase.h

17 #i‚de‡
_MTP_DATABASE_H


18 
	#_MTP_DATABASE_H


	)

20 
	~"MçTy≥s.h
"

22 
«me•a˚
 
	g™droid
 {

24 
˛ass
 
	gMçD©aPackë
;

25 
˛ass
 
	gMçPr›îty
;

26 
˛ass
 
	gMçObje˘Info
;

28 ˛as†
	cMçD©aba£
 {

29 
	gpublic
:

30 
vútuÆ
 ~
MçD©aba£
() {}

33 
vútuÆ
 
MçObje˘H™dÀ
 
begöSídObje˘
(c⁄° * 
∑th
,

34 
MçObje˘F‹m©
 
f‹m©
,

35 
MçObje˘H™dÀ
 
∑ª¡
,

36 
MçSt‹ageID
 
°‹age
,

37 
uöt64_t
 
size
,

38 
time_t
 
modifõd
) = 0;

43 
vútuÆ
 
ídSídObje˘
(c⁄° * 
∑th
,

44 
MçObje˘H™dÀ
 
h™dÀ
,

45 
MçObje˘F‹m©
 
f‹m©
,

46 
boﬁ
 
suc˚eded
) = 0;

48 
vútuÆ
 
MçObje˘H™dÀLi°
* 
gëObje˘Li°
(
MçSt‹ageID
 
°‹ageID
,

49 
MçObje˘F‹m©
 
f‹m©
,

50 
MçObje˘H™dÀ
 
∑ª¡
) = 0;

52 
vútuÆ
 
gëNumObje˘s
(
MçSt‹ageID
 
°‹ageID
,

53 
MçObje˘F‹m©
 
f‹m©
,

54 
MçObje˘H™dÀ
 
∑ª¡
) = 0;

58 
vútuÆ
 
MçObje˘F‹m©Li°
* 
gëSuµ‹ãdPœybackF‹m©s
() = 0;

59 
vútuÆ
 
MçObje˘F‹m©Li°
* 
gëSuµ‹ãdC≠tuªF‹m©s
() = 0;

60 
vútuÆ
 
MçObje˘Pr›îtyLi°
* 
gëSuµ‹ãdObje˘Pr›îtõs
(
MçObje˘F‹m©
 
f‹m©
) = 0;

61 
vútuÆ
 
MçDevi˚Pr›îtyLi°
* 
gëSuµ‹ãdDevi˚Pr›îtõs
() = 0;

63 
vútuÆ
 
MçRe•⁄£Code
 
gëObje˘Pr›îtyVÆue
(
MçObje˘H™dÀ
 
h™dÀ
,

64 
MçObje˘Pr›îty
 
¥›îty
,

65 
MçD©aPackë
& 
∑ckë
) = 0;

67 
vútuÆ
 
MçRe•⁄£Code
 
£tObje˘Pr›îtyVÆue
(
MçObje˘H™dÀ
 
h™dÀ
,

68 
MçObje˘Pr›îty
 
¥›îty
,

69 
MçD©aPackë
& 
∑ckë
) = 0;

71 
vútuÆ
 
MçRe•⁄£Code
 
gëDevi˚Pr›îtyVÆue
(
MçDevi˚Pr›îty
 
¥›îty
,

72 
MçD©aPackë
& 
∑ckë
) = 0;

74 
vútuÆ
 
MçRe•⁄£Code
 
£tDevi˚Pr›îtyVÆue
(
MçDevi˚Pr›îty
 
¥›îty
,

75 
MçD©aPackë
& 
∑ckë
) = 0;

77 
vútuÆ
 
MçRe•⁄£Code
 
ª£tDevi˚Pr›îty
(
MçDevi˚Pr›îty
 
¥›îty
) = 0;

79 
vútuÆ
 
MçRe•⁄£Code
 
gëObje˘Pr›îtyLi°
(
MçObje˘H™dÀ
 
h™dÀ
,

80 
uöt32_t
 
f‹m©
, uöt32_à
¥›îty
,

81 
groupCode
, 
dïth
,

82 
MçD©aPackë
& 
∑ckë
) = 0;

84 
vútuÆ
 
MçRe•⁄£Code
 
gëObje˘Info
(
MçObje˘H™dÀ
 
h™dÀ
,

85 
MçObje˘Info
& 
öfo
) = 0;

87 
vútuÆ
 * 
gëThumb«û
(
MçObje˘H™dÀ
 
h™dÀ
, 
size_t
& 
outThumbSize
) = 0;

89 
vútuÆ
 
MçRe•⁄£Code
 
gëObje˘FûeP©h
(
MçObje˘H™dÀ
 
h™dÀ
,

90 
MçSåög
& 
outFûeP©h
,

91 
öt64_t
& 
outFûeLígth
,

92 
MçObje˘F‹m©
& 
outF‹m©
) = 0;

94 
vútuÆ
 
MçRe•⁄£Code
 
dñëeFûe
(
MçObje˘H™dÀ
 
h™dÀ
) = 0;

96 
vútuÆ
 
MçObje˘H™dÀLi°
* 
gëObje˘Re„ªn˚s
(
MçObje˘H™dÀ
 
h™dÀ
) = 0;

98 
vútuÆ
 
MçRe•⁄£Code
 
£tObje˘Re„ªn˚s
(
MçObje˘H™dÀ
 
h™dÀ
,

99 
MçObje˘H™dÀLi°
* 
ª„ªn˚s
) = 0;

101 
vútuÆ
 
MçPr›îty
* 
gëObje˘Pr›îtyDesc
(
MçObje˘Pr›îty
 
¥›îty
,

102 
MçObje˘F‹m©
 
f‹m©
) = 0;

104 
vútuÆ
 
MçPr›îty
* 
gëDevi˚Pr›îtyDesc
(
MçDevi˚Pr›îty
 
¥›îty
) = 0;

106 
vútuÆ
 
£ssi⁄Sèπed
() = 0;

108 
vútuÆ
 
£ssi⁄Ended
() = 0;

	@src/MtpDebug.cpp

17 
	~"MçDebug.h
"

19 
«me•a˚
 
	g™droid
 {

21 
	sCodeE¡ry
 {

22 c⁄° * 
	g«me
;

23 
uöt16_t
 
	gcode
;

26 c⁄° 
CodeE¡ry
 
	gsO≥øti⁄Codes
[] = {

75 c⁄° 
CodeE¡ry
 
	gsF‹m©Codes
[] = {

149 c⁄° 
CodeE¡ry
 
	gsObje˘Pr›Codes
[] = {

324 c⁄° 
CodeE¡ry
 
	gsDevi˚Pr›Codes
[] = {

370 c⁄° * 
gëCodeName
(
uöt16_t
 
code
, c⁄° 
CodeE¡ry
* 
èbÀ
) {

371 c⁄° 
CodeE¡ry
* 
	gíåy
 = 
èbÀ
;

372 
	gíåy
->
	g«me
) {

373 i‡(
	gíåy
->
	gcode
 =
code
)

374  
íåy
->
«me
;

375 
	gíåy
++;

380 c⁄° * 
	gMçDebug
::
gëO≥øti⁄CodeName
(
MçO≥øti⁄Code
 
code
) {

381  
gëCodeName
(
code
, 
sO≥øti⁄Codes
);

384 c⁄° * 
	gMçDebug
::
gëF‹m©CodeName
(
MçObje˘F‹m©
 
code
) {

385 i‡(
code
 == 0)

387  
gëCodeName
(
code
, 
sF‹m©Codes
);

390 c⁄° * 
	gMçDebug
::
gëObje˘Pr›CodeName
(
MçPr›îtyCode
 
code
) {

391 i‡(
code
 == 0)

393  
gëCodeName
(
code
, 
sObje˘Pr›Codes
);

396 c⁄° * 
	gMçDebug
::
gëDevi˚Pr›CodeName
(
MçPr›îtyCode
 
code
) {

397 i‡(
code
 == 0)

399  
gëCodeName
(
code
, 
sDevi˚Pr›Codes
);

	@src/MtpDebug.h

17 #i‚de‡
_MTP_DEBUG_H


18 
	#_MTP_DEBUG_H


	)

23 
	~"MçTy≥s.h
"

25 
«me•a˚
 
	g™droid
 {

27 ˛as†
	cMçDebug
 {

28 
	gpublic
:

29 c⁄° * 
gëO≥øti⁄CodeName
(
MçO≥øti⁄Code
 
code
);

30 c⁄° * 
gëF‹m©CodeName
(
MçObje˘F‹m©
 
code
);

31 c⁄° * 
gëObje˘Pr›CodeName
(
MçPr›îtyCode
 
code
);

32 c⁄° * 
gëDevi˚Pr›CodeName
(
MçPr›îtyCode
 
code
);

	@src/MtpDevice.cpp

17 
	#LOG_TAG
 "MçDevi˚"

	)

19 
	~"MçDebug.h
"

20 
	~"MçDevi˚.h
"

21 
	~"MçDevi˚Info.h
"

22 
	~"MçObje˘Info.h
"

23 
	~"MçPr›îty.h
"

24 
	~"MçSt‹ageInfo.h
"

25 
	~"MçSåögBuf„r.h
"

26 
	~"MçUtûs.h
"

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<sys/ty≥s.h
>

31 
	~<sys/io˘l.h
>

32 
	~<sys/°©.h
>

33 
	~<f˙é.h
>

34 
	~<î∫o.h
>

35 
	~<ídün.h
>

37 
	~<usbho°/usbho°.h
>

39 
«me•a˚
 
	g™droid
 {

42 
boﬁ
 
isMçDevi˚
(
uöt16_t
 
víd‹
, uöt16_à
¥odu˘
) {

44 i‡(
	gvíd‹
 =0x0781 && 
¥odu˘
 == 0x74c2)

45  
åue
;

47 i‡(
	gvíd‹
 =0x04e8 && 
¥odu˘
 == 0x503c)

48  
åue
;

49  
	gÁl£
;

53 
MçDevi˚
* 
	gMçDevi˚
::
›í
(c⁄° * 
devi˚Name
, 
fd
) {

54 
usb_devi˚
 *
	gdevi˚
 = 
usb_devi˚_√w
(
devi˚Name
, 
fd
);

55 i‡(!
	gdevi˚
) {

56 
ALOGE
("usb_devi˚_√w faûed f‹ %s", 
devi˚Name
);

57  
	gNULL
;

60 
usb_des¸ùt‹_hódî
* 
	gdesc
;

61 
usb_des¸ùt‹_ôî
 
	gôî
;

63 
usb_des¸ùt‹_ôî_öô
(
devi˚
, &
ôî
);

65 (
	gdesc
 = 
usb_des¸ùt‹_ôî_√xt
(&
ôî
)Ë!
NULL
) {

66 i‡(
desc
->
bDes¸ùt‹Ty≥
 =
USB_DT_INTERFACE
) {

67 
usb_öãrÁ˚_des¸ùt‹
 *
öãrÁ˚
 = (usb_öãrÁ˚_des¸ùt‹ *)
desc
;

69 i‡(
	göãrÁ˚
->
	gbI¡îÁ˚Cœss
 =
USB_CLASS_STILL_IMAGE
 &&

70 
öãrÁ˚
->
bI¡îÁ˚SubCœss
 == 1 &&

71 
öãrÁ˚
->
bI¡îÁ˚PrŸocﬁ
 == 1)

73 * 
m™uÁ˘uªrName
 = 
usb_devi˚_gë_m™uÁ˘uªr_«me
(
devi˚
);

74 * 
	g¥odu˘Name
 = 
usb_devi˚_gë_¥odu˘_«me
(
devi˚
);

75 
ALOGD
("Found camîa: \"%s\" \"%s\"\n", 
m™uÁ˘uªrName
, 
¥odu˘Name
);

76 
‰ì
(
m™uÁ˘uªrName
);

77 
‰ì
(
¥odu˘Name
);

78 } i‡(
	göãrÁ˚
->
	gbI¡îÁ˚Cœss
 == 0xFF &&

79 
öãrÁ˚
->
bI¡îÁ˚SubCœss
 == 0xFF &&

80 
öãrÁ˚
->
bI¡îÁ˚PrŸocﬁ
 == 0) {

81 * 
öãrÁ˚Name
 = 
usb_devi˚_gë_°rög
(
devi˚
, 
öãrÁ˚
->
iI¡îÁ˚
);

82 i‡(!
	göãrÁ˚Name
) {

84 } i‡(
°rcmp
(
öãrÁ˚Name
, "MTP")) {

85 
‰ì
(
öãrÁ˚Name
);

88 
‰ì
(
öãrÁ˚Name
);

91 * 
	gm™uÁ˘uªrName
 = 
usb_devi˚_gë_m™uÁ˘uªr_«me
(
devi˚
);

92 * 
	g¥odu˘Name
 = 
usb_devi˚_gë_¥odu˘_«me
(
devi˚
);

93 
ALOGD
("Found MTP devi˚: \"%s\" \"%s\"\n", 
m™uÁ˘uªrName
, 
¥odu˘Name
);

94 
‰ì
(
m™uÁ˘uªrName
);

95 
‰ì
(
¥odu˘Name
);

101 
uöt16_t
 
	gvíd‹
 = 
usb_devi˚_gë_víd‹_id
(
devi˚
);

102 
uöt16_t
 
	g¥odu˘
 = 
usb_devi˚_gë_¥odu˘_id
(
devi˚
);

103 i‡(!
isMçDevi˚
(
víd‹
, 
¥odu˘
)) {

109 
	gbuf„r
[256];

110 
mem£t
(
buf„r
, 0, (buffer));

111 
	gªt
 = 
usb_devi˚_c⁄åﬁ_å™s„r
(
devi˚
,

112 
USB_DIR_IN
|
USB_RECIP_DEVICE
|
USB_TYPE_STANDARD
,

113 
USB_REQ_GET_DESCRIPTOR
, (
USB_DT_STRING
 << 8) | 0xEE,

114 0, 
buf„r
, (buffer), 0);

115 
¥ötf
("usb_devi˚_c⁄åﬁ_å™s„∏ªtu∫ed %dÉºno: %d\n", 
ªt
, 
î∫o
);

116 i‡(
	gªt
 > 0) {

117 
¥ötf
("gŸ MTP såög %s\n", 
buf„r
);

118 
	gªt
 = 
usb_devi˚_c⁄åﬁ_å™s„r
(
devi˚
,

119 
USB_DIR_IN
|
USB_RECIP_DEVICE
|
USB_TYPE_VENDOR
, 1,

120 0, 4, 
buf„r
, (buffer), 0);

121 
¥ötf
("OS des¸ùt‹ gŸ %d\n", 
ªt
);

123 
¥ötf
("no MTP string\n");

130 
usb_ídpoöt_des¸ùt‹
 *
	gï
;

131 
usb_ídpoöt_des¸ùt‹
 *
	gï_ö_desc
 = 
NULL
;

132 
usb_ídpoöt_des¸ùt‹
 *
	gï_out_desc
 = 
NULL
;

133 
usb_ídpoöt_des¸ùt‹
 *
	gï_öå_desc
 = 
NULL
;

134 
	gi
 = 0; i < 3; i++) {

135 
	gï
 = (
usb_ídpoöt_des¸ùt‹
 *)
usb_des¸ùt‹_ôî_√xt
(&
ôî
);

136 i‡(!
	gï
 ||Ép->
	gbDes¸ùt‹Ty≥
 !
USB_DT_ENDPOINT
) {

137 
ALOGE
("endpointsÇot found\n");

138 
usb_devi˚_˛o£
(
devi˚
);

139  
	gNULL
;

141 i‡(
	gï
->
	gbmAâribuãs
 =
USB_ENDPOINT_XFER_BULK
) {

142 i‡(
ï
->
bEndpoötAddªss
 & 
USB_ENDPOINT_DIR_MASK
)

143 
ï_ö_desc
 = 
ï
;

145 
	gï_out_desc
 = 
ï
;

146 } i‡(
	gï
->
	gbmAâribuãs
 =
USB_ENDPOINT_XFER_INT
 &&

147 
ï
->
bEndpoötAddªss
 & 
USB_ENDPOINT_DIR_MASK
) {

148 
ï_öå_desc
 = 
ï
;

151 i‡(!
	gï_ö_desc
 || !
	gï_out_desc
 || !
	gï_öå_desc
) {

152 
ALOGE
("endpointsÇot found\n");

153 
usb_devi˚_˛o£
(
devi˚
);

154  
	gNULL
;

157 i‡(
usb_devi˚_˛aim_öãrÁ˚
(
devi˚
, 
öãrÁ˚
->
bI¡îÁ˚Numbî
)) {

158 
ALOGE
("usb_devi˚_˛aim_öãrÁ˚ faûedÉºno: %d\n", 
î∫o
);

159 
usb_devi˚_˛o£
(
devi˚
);

160  
	gNULL
;

163 
MçDevi˚
* 
	gmçDevi˚
 = 
√w
 MçDevi˚(
devi˚
, 
öãrÁ˚
->
bI¡îÁ˚Numbî
,

164 
ï_ö_desc
, 
ï_out_desc
, 
ï_öå_desc
);

165 
	gmçDevi˚
->
öôülize
();

166  
	gmçDevi˚
;

170 
usb_devi˚_˛o£
(
devi˚
);

171 
ALOGE
("deviceÇot found");

172  
	gNULL
;

175 
	gMçDevi˚
::
MçDevi˚
(
usb_devi˚
* 
devi˚
, 
öãrÁ˚
,

176 c⁄° 
usb_ídpoöt_des¸ùt‹
 *
ï_ö
,

177 c⁄° 
usb_ídpoöt_des¸ùt‹
 *
ï_out
,

178 c⁄° 
usb_ídpoöt_des¸ùt‹
 *
ï_öå
)

179 : 
mDevi˚
(
devi˚
),

180 
mI¡îÁ˚
(
öãrÁ˚
),

181 
mReque°In1
(
NULL
),

182 
mReque°In2
(
NULL
),

183 
mReque°Out
(
NULL
),

184 
mReque°I¡r
(
NULL
),

185 
mDevi˚Info
(
NULL
),

186 
mSessi⁄ID
(0),

187 
mTønß˘i⁄ID
(0),

188 
mRe˚ivedRe•⁄£
(
Ál£
)

190 
	gmReque°In1
 = 
usb_ªque°_√w
(
devi˚
, 
ï_ö
);

191 
	gmReque°In2
 = 
usb_ªque°_√w
(
devi˚
, 
ï_ö
);

192 
	gmReque°Out
 = 
usb_ªque°_√w
(
devi˚
, 
ï_out
);

193 
	gmReque°I¡r
 = 
usb_ªque°_√w
(
devi˚
, 
ï_öå
);

196 
	gMçDevi˚
::~
MçDevi˚
() {

197 
˛o£
();

198 
	gi
 = 0; i < 
	gmDevi˚Pr›îtõs
.
size
(); i++)

199 
dñëe
 
	gmDevi˚Pr›îtõs
[
i
];

200 
usb_ªque°_‰ì
(
mReque°In1
);

201 
usb_ªque°_‰ì
(
mReque°In2
);

202 
usb_ªque°_‰ì
(
mReque°Out
);

203 
usb_ªque°_‰ì
(
mReque°I¡r
);

206 
	gMçDevi˚
::
öôülize
() {

207 
›íSessi⁄
();

208 
	gmDevi˚Info
 = 
gëDevi˚Info
();

209 i‡(
	gmDevi˚Info
) {

210 i‡(
	gmDevi˚Info
->
	gmDevi˚Pr›îtõs
) {

211 
	gcou¡
 = 
mDevi˚Info
->
mDevi˚Pr›îtõs
->
size
();

212 
	gi
 = 0; i < 
	gcou¡
; i++) {

213 
MçDevi˚Pr›îty
 
	g¥›Code
 = (*
mDevi˚Info
->
mDevi˚Pr›îtõs
)[
i
];

214 
MçPr›îty
* 
	g¥›îty
 = 
gëDevi˚Pr›Desc
(
¥›Code
);

215 i‡(
	g¥›îty
)

216 
	gmDevi˚Pr›îtõs
.
push
(
¥›îty
);

222 
	gMçDevi˚
::
˛o£
() {

223 i‡(
mDevi˚
) {

224 
usb_devi˚_ªÀa£_öãrÁ˚
(
mDevi˚
, 
mI¡îÁ˚
);

225 
usb_devi˚_˛o£
(
mDevi˚
);

226 
	gmDevi˚
 = 
NULL
;

230 
	gMçDevi˚
::
¥öt
() {

231 i‡(
mDevi˚Info
) {

232 
mDevi˚Info
->
¥öt
();

234 i‡(
	gmDevi˚Info
->
	gmDevi˚Pr›îtõs
) {

235 
ALOGI
("***** DEVICE PROPERTIES *****\n");

236 
	gcou¡
 = 
mDevi˚Info
->
mDevi˚Pr›îtõs
->
size
();

237 
	gi
 = 0; i < 
	gcou¡
; i++) {

238 
MçDevi˚Pr›îty
 
	g¥›Code
 = (*
mDevi˚Info
->
mDevi˚Pr›îtõs
)[
i
];

239 
MçPr›îty
* 
	g¥›îty
 = 
gëDevi˚Pr›Desc
(
¥›Code
);

240 i‡(
	g¥›îty
) {

241 
	g¥›îty
->
¥öt
();

242 
dñëe
 
	g¥›îty
;

248 i‡(
	gmDevi˚Info
->
	gmPœybackF‹m©s
) {

249 
ALOGI
("***** OBJECT PROPERTIES *****\n");

250 
	gcou¡
 = 
mDevi˚Info
->
mPœybackF‹m©s
->
size
();

251 
	gi
 = 0; i < 
	gcou¡
; i++) {

252 
MçObje˘F‹m©
 
	gf‹m©
 = (*
mDevi˚Info
->
mPœybackF‹m©s
)[
i
];

253 
ALOGI
("*** FORMAT: %s\n", 
MçDebug
::
gëF‹m©CodeName
(
f‹m©
));

254 
MçObje˘Pr›îtyLi°
* 
	g¥›s
 = 
gëObje˘Pr›sSuµ‹ãd
(
f‹m©
);

255 i‡(
	g¥›s
) {

256 
	gj
 = 0; j < 
	g¥›s
->
size
(); j++) {

257 
MçObje˘Pr›îty
 
	g¥›
 = (*
¥›s
)[
j
];

258 
MçPr›îty
* 
	g¥›îty
 = 
gëObje˘Pr›Desc
(
¥›
, 
f‹m©
);

259 i‡(
	g¥›îty
) {

260 
	g¥›îty
->
¥öt
();

261 
dñëe
 
	g¥›îty
;

263 
ALOGE
("couldÇot fetchÖroperty: %s",

264 
MçDebug
::
gëObje˘Pr›CodeName
(
¥›
));

272 c⁄° * 
	gMçDevi˚
::
gëDevi˚Name
() {

273 i‡(
mDevi˚
)

274  
usb_devi˚_gë_«me
(
mDevi˚
);

279 
boﬁ
 
	gMçDevi˚
::
›íSessi⁄
() {

280 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

282 
	gmSessi⁄ID
 = 0;

283 
	gmTønß˘i⁄ID
 = 0;

284 
MçSessi⁄ID
 
	g√wSessi⁄
 = 1;

285 
	gmReque°
.
ª£t
();

286 
	gmReque°
.
£tP¨amëî
(1, 
√wSessi⁄
);

287 i‡(!
£ndReque°
(
MTP_OPERATION_OPEN_SESSION
))

288  
	gÁl£
;

289 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

290 i‡(
	gªt
 =
MTP_RESPONSE_SESSION_ALREADY_OPEN
)

291 
√wSessi⁄
 = 
mRe•⁄£
.
gëP¨amëî
(1);

292 i‡(
	gªt
 !
MTP_RESPONSE_OK
)

293  
Ál£
;

295 
	gmSessi⁄ID
 = 
√wSessi⁄
;

296 
	gmTønß˘i⁄ID
 = 1;

297  
	gåue
;

300 
boﬁ
 
	gMçDevi˚
::
˛o£Sessi⁄
() {

302  
åue
;

305 
MçDevi˚Info
* 
	gMçDevi˚
::
gëDevi˚Info
() {

306 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

308 
	gmReque°
.
ª£t
();

309 i‡(!
£ndReque°
(
MTP_OPERATION_GET_DEVICE_INFO
))

310  
	gNULL
;

311 i‡(!
ªadD©a
())

312  
	gNULL
;

313 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

314 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

315 
MçDevi˚Info
* 
öfo
 = 
√w
 MtpDeviceInfo;

316 
	göfo
->
ªad
(
mD©a
);

317  
	göfo
;

319  
	gNULL
;

322 
MçSt‹ageIDLi°
* 
	gMçDevi˚
::
gëSt‹ageIDs
() {

323 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

325 
	gmReque°
.
ª£t
();

326 i‡(!
£ndReque°
(
MTP_OPERATION_GET_STORAGE_IDS
))

327  
	gNULL
;

328 i‡(!
ªadD©a
())

329  
	gNULL
;

330 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

331 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

332  
mD©a
.
gëAUI¡32
();

334  
	gNULL
;

337 
MçSt‹ageInfo
* 
	gMçDevi˚
::
gëSt‹ageInfo
(
MçSt‹ageID
 
°‹ageID
) {

338 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

340 
	gmReque°
.
ª£t
();

341 
	gmReque°
.
£tP¨amëî
(1, 
°‹ageID
);

342 i‡(!
£ndReque°
(
MTP_OPERATION_GET_STORAGE_INFO
))

343  
	gNULL
;

344 i‡(!
ªadD©a
())

345  
	gNULL
;

346 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

347 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

348 
MçSt‹ageInfo
* 
öfo
 = 
√w
 MçSt‹ageInfo(
°‹ageID
);

349 
	göfo
->
ªad
(
mD©a
);

350  
	göfo
;

352  
	gNULL
;

355 
MçObje˘H™dÀLi°
* 
	gMçDevi˚
::
gëObje˘H™dÀs
(
MçSt‹ageID
 
°‹ageID
,

356 
MçObje˘F‹m©
 
f‹m©
, 
MçObje˘H™dÀ
 
∑ª¡
) {

357 
	gMuãx
::
Autﬁock
 
autoLock
(
mMuãx
);

359 
	gmReque°
.
ª£t
();

360 
	gmReque°
.
£tP¨amëî
(1, 
°‹ageID
);

361 
	gmReque°
.
£tP¨amëî
(2, 
f‹m©
);

362 
	gmReque°
.
£tP¨amëî
(3, 
∑ª¡
);

363 i‡(!
£ndReque°
(
MTP_OPERATION_GET_OBJECT_HANDLES
))

364  
	gNULL
;

365 i‡(!
ªadD©a
())

366  
	gNULL
;

367 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

368 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

369  
mD©a
.
gëAUI¡32
();

371  
	gNULL
;

374 
MçObje˘Info
* 
	gMçDevi˚
::
gëObje˘Info
(
MçObje˘H™dÀ
 
h™dÀ
) {

375 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

379 
	gmReque°
.
ª£t
();

380 
	gmReque°
.
£tP¨amëî
(1, 
h™dÀ
);

381 i‡(!
£ndReque°
(
MTP_OPERATION_GET_OBJECT_INFO
))

382  
	gNULL
;

383 i‡(!
ªadD©a
())

384  
	gNULL
;

385 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

386 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

387 
MçObje˘Info
* 
öfo
 = 
√w
 MçObje˘Info(
h™dÀ
);

388 
	göfo
->
ªad
(
mD©a
);

389  
	göfo
;

391  
	gNULL
;

394 * 
	gMçDevi˚
::
gëThumb«û
(
MçObje˘H™dÀ
 
h™dÀ
, & 
outLígth
) {

395 
	gMuãx
::
Autﬁock
 
autoLock
(
mMuãx
);

397 
	gmReque°
.
ª£t
();

398 
	gmReque°
.
£tP¨amëî
(1, 
h™dÀ
);

399 i‡(
£ndReque°
(
MTP_OPERATION_GET_THUMB
Ë&& 
ªadD©a
()) {

400 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

401 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

402  
mD©a
.
gëD©a
(
outLígth
);

405 
	goutLígth
 = 0;

406  
	gNULL
;

409 
MçObje˘H™dÀ
 
	gMçDevi˚
::
£ndObje˘Info
(
MçObje˘Info
* 
öfo
) {

410 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

412 
	gmReque°
.
ª£t
();

413 
MçObje˘H™dÀ
 
	g∑ª¡
 = 
öfo
->
mP¨ít
;

414 i‡(
	g∑ª¡
 == 0)

415 
∑ª¡
 = 
MTP_PARENT_ROOT
;

417 
	gmReque°
.
£tP¨amëî
(1, 
öfo
->
mSt‹ageID
);

418 
	gmReque°
.
£tP¨amëî
(2, 
öfo
->
mP¨ít
);

420 
	gmD©a
.
putUI¡32
(
öfo
->
mSt‹ageID
);

421 
	gmD©a
.
putUI¡16
(
öfo
->
mF‹m©
);

422 
	gmD©a
.
putUI¡16
(
öfo
->
mPrŸe˘i⁄Sètus
);

423 
	gmD©a
.
putUI¡32
(
öfo
->
mCom¥es£dSize
);

424 
	gmD©a
.
putUI¡16
(
öfo
->
mThumbF‹m©
);

425 
	gmD©a
.
putUI¡32
(
öfo
->
mThumbCom¥es£dSize
);

426 
	gmD©a
.
putUI¡32
(
öfo
->
mThumbPixWidth
);

427 
	gmD©a
.
putUI¡32
(
öfo
->
mThumbPixHeight
);

428 
	gmD©a
.
putUI¡32
(
öfo
->
mImagePixWidth
);

429 
	gmD©a
.
putUI¡32
(
öfo
->
mImagePixHeight
);

430 
	gmD©a
.
putUI¡32
(
öfo
->
mImagePixDïth
);

431 
	gmD©a
.
putUI¡32
(
öfo
->
mP¨ít
);

432 
	gmD©a
.
putUI¡16
(
öfo
->
mAssocüti⁄Ty≥
);

433 
	gmD©a
.
putUI¡32
(
öfo
->
mAssocüti⁄Desc
);

434 
	gmD©a
.
putUI¡32
(
öfo
->
mSequí˚Numbî
);

435 
	gmD©a
.
putSåög
(
öfo
->
mName
);

437 
	g¸óãd
[100], 
	gmodifõd
[100];

438 
f‹m©D©eTime
(
öfo
->
mD©eCª©ed
, 
¸óãd
, (created));

439 
f‹m©D©eTime
(
öfo
->
mD©eModifõd
, 
modifõd
, (modified));

441 
	gmD©a
.
putSåög
(
¸óãd
);

442 
	gmD©a
.
putSåög
(
modifõd
);

443 i‡(
	göfo
->
	gmKeyw‹ds
)

444 
	gmD©a
.
putSåög
(
öfo
->
mKeyw‹ds
);

446 
	gmD©a
.
putEm±ySåög
();

448 i‡(
£ndReque°
(
MTP_OPERATION_SEND_OBJECT_INFO
Ë&& 
£ndD©a
()) {

449 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

450 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

451 
öfo
->
mSt‹ageID
 = 
mRe•⁄£
.
gëP¨amëî
(1);

452 
	göfo
->
	gmP¨ít
 = 
mRe•⁄£
.
gëP¨amëî
(2);

453 
	göfo
->
	gmH™dÀ
 = 
mRe•⁄£
.
gëP¨amëî
(3);

454  
	göfo
->
	gmH™dÀ
;

457  (
	gMçObje˘H™dÀ
)-1;

460 
boﬁ
 
	gMçDevi˚
::
£ndObje˘
(
MçObje˘Info
* 
öfo
, 
§cFD
) {

461 
	gMuãx
::
Autﬁock
 
autoLock
(
mMuãx
);

463 
	gªmaöög
 = 
öfo
->
mCom¥es£dSize
;

464 
	gmReque°
.
ª£t
();

465 
	gmReque°
.
£tP¨amëî
(1, 
öfo
->
mH™dÀ
);

466 i‡(
£ndReque°
(
MTP_OPERATION_SEND_OBJECT
)) {

468 
wrôeD©aHódî
(
MTP_OPERATION_SEND_OBJECT
, 
ªmaöög
);

470 
	gbuf„r
[65536];

471 
	gªmaöög
 > 0) {

472 
	gcou¡
 = 
ªad
(
§cFD
, 
buf„r
, (buffer));

473 i‡(
	gcou¡
 > 0) {

474 
	gwrôãn
 = 
mD©a
.
wrôe
(
mReque°Out
, 
buf„r
, 
cou¡
);

476 
	gªmaöög
 -
cou¡
;

482 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

483  (
	gªmaöög
 =0 && 
ªt
 =
MTP_RESPONSE_OK
);

486 
boﬁ
 
	gMçDevi˚
::
dñëeObje˘
(
MçObje˘H™dÀ
 
h™dÀ
) {

487 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

489 
	gmReque°
.
ª£t
();

490 
	gmReque°
.
£tP¨amëî
(1, 
h™dÀ
);

491 i‡(
£ndReque°
(
MTP_OPERATION_DELETE_OBJECT
)) {

492 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

493 i‡(
	gªt
 =
MTP_RESPONSE_OK
)

494  
åue
;

496  
	gÁl£
;

499 
MçObje˘H™dÀ
 
	gMçDevi˚
::
gëP¨ít
(MçObje˘H™dÀ 
h™dÀ
) {

500 
MçObje˘Info
* 
öfo
 = 
gëObje˘Info
(
h™dÀ
);

501 i‡(
	göfo
) {

502 
MçObje˘H™dÀ
 
	g∑ª¡
 = 
öfo
->
mP¨ít
;

503 
dñëe
 
	göfo
;

504  
	g∑ª¡
;

510 
MçObje˘H™dÀ
 
	gMçDevi˚
::
gëSt‹ageID
(MçObje˘H™dÀ 
h™dÀ
) {

511 
MçObje˘Info
* 
öfo
 = 
gëObje˘Info
(
h™dÀ
);

512 i‡(
	göfo
) {

513 
MçObje˘H™dÀ
 
	g°‹ageId
 = 
öfo
->
mSt‹ageID
;

514 
dñëe
 
	göfo
;

515  
	g°‹ageId
;

521 
MçObje˘Pr›îtyLi°
* 
	gMçDevi˚
::
gëObje˘Pr›sSuµ‹ãd
(
MçObje˘F‹m©
 
f‹m©
) {

522 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

524 
	gmReque°
.
ª£t
();

525 
	gmReque°
.
£tP¨amëî
(1, 
f‹m©
);

526 i‡(!
£ndReque°
(
MTP_OPERATION_GET_OBJECT_PROPS_SUPPORTED
))

527  
	gNULL
;

528 i‡(!
ªadD©a
())

529  
	gNULL
;

530 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

531 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

532  
mD©a
.
gëAUI¡16
();

534  
	gNULL
;

538 
MçPr›îty
* 
	gMçDevi˚
::
gëDevi˚Pr›Desc
(
MçDevi˚Pr›îty
 
code
) {

539 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

541 
	gmReque°
.
ª£t
();

542 
	gmReque°
.
£tP¨amëî
(1, 
code
);

543 i‡(!
£ndReque°
(
MTP_OPERATION_GET_DEVICE_PROP_DESC
))

544  
	gNULL
;

545 i‡(!
ªadD©a
())

546  
	gNULL
;

547 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

548 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

549 
MçPr›îty
* 
¥›îty
 = 
√w
 MtpProperty;

550 
	g¥›îty
->
ªad
(
mD©a
);

551  
	g¥›îty
;

553  
	gNULL
;

556 
MçPr›îty
* 
	gMçDevi˚
::
gëObje˘Pr›Desc
(
MçObje˘Pr›îty
 
code
, 
MçObje˘F‹m©
 
f‹m©
) {

557 
	gMuãx
::
Autﬁock
 
autoLock
(
mMuãx
);

559 
	gmReque°
.
ª£t
();

560 
	gmReque°
.
£tP¨amëî
(1, 
code
);

561 
	gmReque°
.
£tP¨amëî
(2, 
f‹m©
);

562 i‡(!
£ndReque°
(
MTP_OPERATION_GET_OBJECT_PROP_DESC
))

563  
	gNULL
;

564 i‡(!
ªadD©a
())

565  
	gNULL
;

566 
MçRe•⁄£Code
 
	gªt
 = 
ªadRe•⁄£
();

567 i‡(
	gªt
 =
MTP_RESPONSE_OK
) {

568 
MçPr›îty
* 
¥›îty
 = 
√w
 MtpProperty;

569 
	g¥›îty
->
ªad
(
mD©a
);

570  
	g¥›îty
;

572  
	gNULL
;

575 
boﬁ
 
	gMçDevi˚
::
ªadObje˘
(
MçObje˘H™dÀ
 
h™dÀ
,

576 
boﬁ
 (* 
ˇŒback
)(* 
d©a
, 
off£t
, 
Àngth
, * 
˛õ¡D©a
),

577 
obje˘Size
, * 
˛õ¡D©a
) {

578 
	gMuãx
::
Autﬁock
 
autoLock
(
mMuãx
);

579 
boﬁ
 
	gªsu…
 = 
Ál£
;

581 
	gmReque°
.
ª£t
();

582 
	gmReque°
.
£tP¨amëî
(1, 
h™dÀ
);

583 i‡(
£ndReque°
(
MTP_OPERATION_GET_OBJECT
)

584 && 
	gmD©a
.
ªadD©aHódî
(
mReque°In1
)) {

585 
uöt32_t
 
	gÀngth
 = 
mD©a
.
gëC⁄èöîLígth
();

586 i‡(
	gÀngth
 - 
	gMTP_CONTAINER_HEADER_SIZE
 !
obje˘Size
) {

587 
ALOGE
("readObjectÉrror objectSize: %d,Üength: %d",

588 
obje˘Size
, 
Àngth
);

589 
	gÁû
;

591 
	gÀngth
 -
MTP_CONTAINER_HEADER_SIZE
;

592 
uöt32_t
 
	gªmaöög
 = 
Àngth
;

593 
	goff£t
 = 0;

595 
	göôülD©aLígth
 = 0;

596 * 
	göôülD©a
 = 
mD©a
.
gëD©a
(
öôülD©aLígth
);

597 i‡(
	göôülD©a
) {

598 i‡(
	göôülD©aLígth
 > 0) {

599 i‡(!
ˇŒback
(
öôülD©a
, 0, 
öôülD©aLígth
, 
˛õ¡D©a
))

600 
	gÁû
;

601 
	gªmaöög
 -
öôülD©aLígth
;

602 
	goff£t
 +
öôülD©aLígth
;

604 
‰ì
(
öôülD©a
);

608 
	gbuf„r1
[16384], 
	gbuf„r2
[16384];

609 
	gmReque°In1
->
	gbuf„r
 = 
buf„r1
;

610 
	gmReque°In2
->
	gbuf„r
 = 
buf„r2
;

611 
usb_ªque°
* 
	gªq
 = 
mReque°In1
;

612 * 
	gwrôeBuf„r
 = 
NULL
;

613 
	gwrôeLígth
 = 0;

615 
	gªmaöög
 > 0 || 
	gwrôeBuf„r
) {

616 i‡(
	gªmaöög
 > 0) {

618 
	gªq
->
	gbuf„r_Àngth
 = (
ªmaöög
 > (
buf„r1
) ? (buffer1) :Ñemaining);

619 i‡(
	gmD©a
.
ªadD©aAsync
(
ªq
)) {

620 
ALOGE
("readDataAsync failed");

621 
	gÁû
;

624 
	gªq
 = 
NULL
;

627 i‡(
	gwrôeBuf„r
) {

629 i‡(!
ˇŒback
(
wrôeBuf„r
, 
off£t
, 
wrôeLígth
, 
˛õ¡D©a
)) {

630 
ALOGE
("write failed");

632 i‡(
	gªq
)

633 
	gmD©a
.
ªadD©aWaô
(
mDevi˚
);

634 
	gÁû
;

636 
	goff£t
 +
wrôeLígth
;

637 
	gwrôeBuf„r
 = 
NULL
;

641 i‡(
	gªq
) {

642 
	gªad
 = 
mD©a
.
ªadD©aWaô
(
mDevi˚
);

643 i‡(
	gªad
 < 0)

644 
	gÁû
;

646 i‡(
	gªad
 > 0) {

647 
	gwrôeBuf„r
 = 
ªq
->
buf„r
;

648 
	gwrôeLígth
 = 
ªad
;

649 
	gªmaöög
 -
ªad
;

650 
	gªq
 = (
ªq
 =
mReque°In1
 ? 
mReque°In2
 : mRequestIn1);

652 
	gwrôeBuf„r
 = 
NULL
;

657 
MçRe•⁄£Code
 
	gª•⁄£
 = 
ªadRe•⁄£
();

658 i‡(
	gª•⁄£
 =
MTP_RESPONSE_OK
)

659 
ªsu…
 = 
åue
;

662 
	gÁû
:

663  
ªsu…
;

668 
boﬁ
 
	gMçDevi˚
::
ªadObje˘
(
MçObje˘H™dÀ
 
h™dÀ
, c⁄° * 
de°P©h
, 
group
, 
≥rm
) {

669 
ALOGD
("ªadObje˘: %s", 
de°P©h
);

670 
	gfd
 = ::
›í
(
de°P©h
, 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 
S_IRUSR
 | 
S_IWUSR
);

671 i‡(
	gfd
 < 0) {

672 
ALOGE
("›í faûed f‹ %s", 
de°P©h
);

673  
	gÁl£
;

676 
fchown
(
fd
, 
gëuid
(), 
group
);

678 
	gmask
 = 
umask
(0);

679 
fchmod
(
fd
, 
≥rm
);

680 
umask
(
mask
);

682 
	gMuãx
::
Autﬁock
 
autoLock
(
mMuãx
);

683 
boﬁ
 
	gªsu…
 = 
Ál£
;

685 
	gmReque°
.
ª£t
();

686 
	gmReque°
.
£tP¨amëî
(1, 
h™dÀ
);

687 i‡(
£ndReque°
(
MTP_OPERATION_GET_OBJECT
)

688 && 
	gmD©a
.
ªadD©aHódî
(
mReque°In1
)) {

689 
uöt32_t
 
	gÀngth
 = 
mD©a
.
gëC⁄èöîLígth
();

690 i‡(
	gÀngth
 < 
	gMTP_CONTAINER_HEADER_SIZE
)

691 
	gÁû
;

692 
	gÀngth
 -
MTP_CONTAINER_HEADER_SIZE
;

693 
uöt32_t
 
	gªmaöög
 = 
Àngth
;

695 
	göôülD©aLígth
 = 0;

696 * 
	göôülD©a
 = 
mD©a
.
gëD©a
(
öôülD©aLígth
);

697 i‡(
	göôülD©a
) {

698 i‡(
	göôülD©aLígth
 > 0) {

699 i‡(
wrôe
(
fd
, 
öôülD©a
, 
öôülD©aLígth
) != initialDataLength) {

700 
‰ì
(
öôülD©a
);

701 
	gÁû
;

703 
	gªmaöög
 -
öôülD©aLígth
;

705 
‰ì
(
öôülD©a
);

709 
	gbuf„r1
[16384], 
	gbuf„r2
[16384];

710 
	gmReque°In1
->
	gbuf„r
 = 
buf„r1
;

711 
	gmReque°In2
->
	gbuf„r
 = 
buf„r2
;

712 
usb_ªque°
* 
	gªq
 = 
mReque°In1
;

713 * 
	gwrôeBuf„r
 = 
NULL
;

714 
	gwrôeLígth
 = 0;

716 
	gªmaöög
 > 0 || 
	gwrôeBuf„r
) {

717 i‡(
	gªmaöög
 > 0) {

719 
	gªq
->
	gbuf„r_Àngth
 = (
ªmaöög
 > (
buf„r1
) ? (buffer1) :Ñemaining);

720 i‡(
	gmD©a
.
ªadD©aAsync
(
ªq
)) {

721 
ALOGE
("readDataAsync failed");

722 
	gÁû
;

725 
	gªq
 = 
NULL
;

728 i‡(
	gwrôeBuf„r
) {

730 i‡(
wrôe
(
fd
, 
wrôeBuf„r
, 
wrôeLígth
) != writeLength) {

731 
ALOGE
("write failed");

733 i‡(
	gªq
)

734 
	gmD©a
.
ªadD©aWaô
(
mDevi˚
);

735 
	gÁû
;

737 
	gwrôeBuf„r
 = 
NULL
;

741 i‡(
	gªq
) {

742 
	gªad
 = 
mD©a
.
ªadD©aWaô
(
mDevi˚
);

743 i‡(
	gªad
 < 0)

744 
	gÁû
;

746 i‡(
	gªad
 > 0) {

747 
	gwrôeBuf„r
 = 
ªq
->
buf„r
;

748 
	gwrôeLígth
 = 
ªad
;

749 
	gªmaöög
 -
ªad
;

750 
	gªq
 = (
ªq
 =
mReque°In1
 ? 
mReque°In2
 : mRequestIn1);

752 
	gwrôeBuf„r
 = 
NULL
;

757 
MçRe•⁄£Code
 
	gª•⁄£
 = 
ªadRe•⁄£
();

758 i‡(
	gª•⁄£
 =
MTP_RESPONSE_OK
)

759 
ªsu…
 = 
åue
;

762 
	gÁû
:

763 ::
˛o£
(
fd
);

764  
	gªsu…
;

767 
boﬁ
 
	gMçDevi˚
::
£ndReque°
(
MçO≥øti⁄Code
 
›î©i⁄
) {

768 
ALOGV
("£ndReque°: %s\n", 
MçDebug
::
gëO≥øti⁄CodeName
(
›î©i⁄
));

769 
	gmRe˚ivedRe•⁄£
 = 
Ál£
;

770 
	gmReque°
.
£tO≥øti⁄Code
(
›î©i⁄
);

771 i‡(
	gmTønß˘i⁄ID
 > 0)

772 
	gmReque°
.
£tTønß˘i⁄ID
(
mTønß˘i⁄ID
++);

773 
	gªt
 = 
mReque°
.
wrôe
(
mReque°Out
);

774 
	gmReque°
.
dump
();

775  (
	gªt
 > 0);

778 
boﬁ
 
	gMçDevi˚
::
£ndD©a
() {

779 
ALOGV
("sendData\n");

780 
	gmD©a
.
£tO≥øti⁄Code
(
mReque°
.
gëO≥øti⁄Code
());

781 
	gmD©a
.
£tTønß˘i⁄ID
(
mReque°
.
gëTønß˘i⁄ID
());

782 
	gªt
 = 
mD©a
.
wrôe
(
mReque°Out
);

783 
	gmD©a
.
dump
();

784  (
	gªt
 > 0);

787 
boﬁ
 
	gMçDevi˚
::
ªadD©a
() {

788 
mD©a
.
ª£t
();

789 
	gªt
 = 
mD©a
.
ªad
(
mReque°In1
);

790 
ALOGV
("ªadD©®ªtu∫ed %d\n", 
ªt
);

791 i‡(
	gªt
 >
MTP_CONTAINER_HEADER_SIZE
) {

792 i‡(
mD©a
.
gëC⁄èöîTy≥
(Ë=
MTP_CONTAINER_TYPE_RESPONSE
) {

793 
ALOGD
("gotÑesponseÖacket instead of dataÖacket");

796 
	gmRe•⁄£
.
c›yFrom
(
mD©a
);

797 
	gmRe˚ivedRe•⁄£
 = 
åue
;

798  
	gÁl£
;

800 
	gmD©a
.
dump
();

801  
	gåue
;

804 
ALOGV
("readResponse failed\n");

805  
	gÁl£
;

809 
boﬁ
 
	gMçDevi˚
::
wrôeD©aHódî
(
MçO≥øti⁄Code
 
›î©i⁄
, 
d©aLígth
) {

810 
	gmD©a
.
£tO≥øti⁄Code
(
›î©i⁄
);

811 
	gmD©a
.
£tTønß˘i⁄ID
(
mReque°
.
gëTønß˘i⁄ID
());

812  (!
	gmD©a
.
wrôeD©aHódî
(
mReque°Out
, 
d©aLígth
));

815 
MçRe•⁄£Code
 
	gMçDevi˚
::
ªadRe•⁄£
() {

816 
ALOGV
("readResponse\n");

817 i‡(
	gmRe˚ivedRe•⁄£
) {

818 
	gmRe˚ivedRe•⁄£
 = 
Ál£
;

819  
	gmRe•⁄£
.
gëRe•⁄£Code
();

821 
	gªt
 = 
mRe•⁄£
.
ªad
(
mReque°In1
);

824 i‡(
	gªt
 == 0)

825 
ªt
 = 
mRe•⁄£
.
ªad
(
mReque°In1
);

826 i‡(
	gªt
 >
MTP_CONTAINER_HEADER_SIZE
) {

827 
mRe•⁄£
.
dump
();

828  
	gmRe•⁄£
.
gëRe•⁄£Code
();

830 
ALOGD
("readResponse failed\n");

	@src/MtpDevice.h

17 #i‚de‡
_MTP_DEVICE_H


18 
	#_MTP_DEVICE_H


	)

20 
	~"MçReque°Packë.h
"

21 
	~"MçD©aPackë.h
"

22 
	~"MçRe•⁄£Packë.h
"

23 
	~"MçTy≥s.h
"

25 
	~<utûs/thªads.h
>

27 
	gusb_devi˚
;

28 
	gusb_ªque°
;

29 
	gusb_ídpoöt_des¸ùt‹
;

31 
«me•a˚
 
	g™droid
 {

33 
˛ass
 
	gMçDevi˚Info
;

34 
˛ass
 
	gMçObje˘Info
;

35 
˛ass
 
	gMçSt‹ageInfo
;

37 ˛as†
	cMçDevi˚
 {

38 
	g¥iv©e
:

39 
usb_devi˚
* 
mDevi˚
;

40 
	gmI¡îÁ˚
;

41 
usb_ªque°
* 
	gmReque°In1
;

42 
usb_ªque°
* 
	gmReque°In2
;

43 
usb_ªque°
* 
	gmReque°Out
;

44 
usb_ªque°
* 
	gmReque°I¡r
;

45 
MçDevi˚Info
* 
	gmDevi˚Info
;

46 
MçPr›îtyLi°
 
	gmDevi˚Pr›îtõs
;

49 
MçSessi⁄ID
 
	gmSessi⁄ID
;

51 
MçTønß˘i⁄ID
 
	gmTønß˘i⁄ID
;

53 
MçReque°Packë
 
	gmReque°
;

54 
MçD©aPackë
 
	gmD©a
;

55 
MçRe•⁄£Packë
 
	gmRe•⁄£
;

57 
boﬁ
 
	gmRe˚ivedRe•⁄£
;

60 
Muãx
 
	gmMuãx
;

62 
	gpublic
:

63 
MçDevi˚
(
usb_devi˚
* 
devi˚
, 
öãrÁ˚
,

64 c⁄° 
usb_ídpoöt_des¸ùt‹
 *
ï_ö
,

65 c⁄° 
usb_ídpoöt_des¸ùt‹
 *
ï_out
,

66 c⁄° 
usb_ídpoöt_des¸ùt‹
 *
ï_öå
);

68 
MçDevi˚
* 
›í
(c⁄° * 
devi˚Name
, 
fd
);

70 
	gvútuÆ
 ~
MçDevi˚
();

72 
öôülize
();

73 
˛o£
();

74 
¥öt
();

75 c⁄° * 
gëDevi˚Name
();

77 
boﬁ
 
›íSessi⁄
();

78 
boﬁ
 
˛o£Sessi⁄
();

80 
MçDevi˚Info
* 
gëDevi˚Info
();

81 
MçSt‹ageIDLi°
* 
gëSt‹ageIDs
();

82 
MçSt‹ageInfo
* 
gëSt‹ageInfo
(
MçSt‹ageID
 
°‹ageID
);

83 
MçObje˘H™dÀLi°
* 
gëObje˘H™dÀs
(
MçSt‹ageID
 
°‹ageID
, 
MçObje˘F‹m©
 
f‹m©
,

84 
MçObje˘H™dÀ
 
∑ª¡
);

85 
MçObje˘Info
* 
gëObje˘Info
(
MçObje˘H™dÀ
 
h™dÀ
);

86 * 
gëThumb«û
(
MçObje˘H™dÀ
 
h™dÀ
, & 
outLígth
);

87 
MçObje˘H™dÀ
 
£ndObje˘Info
(
MçObje˘Info
* 
öfo
);

88 
boﬁ
 
£ndObje˘
(
MçObje˘Info
* 
öfo
, 
§cFD
);

89 
boﬁ
 
dñëeObje˘
(
MçObje˘H™dÀ
 
h™dÀ
);

90 
MçObje˘H™dÀ
 
gëP¨ít
(MçObje˘H™dÀ 
h™dÀ
);

91 
MçObje˘H™dÀ
 
gëSt‹ageID
(MçObje˘H™dÀ 
h™dÀ
);

93 
MçObje˘Pr›îtyLi°
* 
gëObje˘Pr›sSuµ‹ãd
(
MçObje˘F‹m©
 
f‹m©
);

95 
MçPr›îty
* 
gëDevi˚Pr›Desc
(
MçDevi˚Pr›îty
 
code
);

96 
MçPr›îty
* 
gëObje˘Pr›Desc
(
MçObje˘Pr›îty
 
code
, 
MçObje˘F‹m©
 
f‹m©
);

98 
boﬁ
 
ªadObje˘
(
MçObje˘H™dÀ
 
h™dÀ
,

99 
boﬁ
 (* 
ˇŒback
)(* 
d©a
, 
off£t
,

100 
Àngth
, * 
˛õ¡D©a
),

101 
obje˘Size
, * 
˛õ¡D©a
);

102 
boﬁ
 
ªadObje˘
(
MçObje˘H™dÀ
 
h™dÀ
, c⁄° * 
de°P©h
, 
group
,

103 
≥rm
);

105 
	g¥iv©e
:

106 
boﬁ
 
£ndReque°
(
MçO≥øti⁄Code
 
›î©i⁄
);

107 
boﬁ
 
£ndD©a
();

108 
boﬁ
 
ªadD©a
();

109 
boﬁ
 
wrôeD©aHódî
(
MçO≥øti⁄Code
 
›î©i⁄
, 
d©aLígth
);

110 
MçRe•⁄£Code
 
ªadRe•⁄£
();

	@src/MtpDeviceInfo.cpp

17 
	#LOG_TAG
 "MçDevi˚Info"

	)

19 
	~"MçDebug.h
"

20 
	~"MçD©aPackë.h
"

21 
	~"MçDevi˚Info.h
"

22 
	~"MçSåögBuf„r.h
"

24 
«me•a˚
 
	g™droid
 {

26 
	gMçDevi˚Info
::
MçDevi˚Info
()

27 : 
mSènd¨dVîsi⁄
(0),

28 
mVíd‹Exãnsi⁄ID
(0),

29 
mVíd‹Exãnsi⁄Vîsi⁄
(0),

30 
mVíd‹Exãnsi⁄Desc
(
NULL
),

31 
mFun˘i⁄ÆCode
(0),

32 
mO≥øti⁄s
(
NULL
),

33 
mEvíts
(
NULL
),

34 
mDevi˚Pr›îtõs
(
NULL
),

35 
mC≠tuªF‹m©s
(
NULL
),

36 
mPœybackF‹m©s
(
NULL
),

37 
mM™uÁ˘uªr
(
NULL
),

38 
mModñ
(
NULL
),

39 
mVîsi⁄
(
NULL
),

40 
mSîül
(
NULL
)

44 
	gMçDevi˚Info
::~
MçDevi˚Info
() {

45 i‡(
mVíd‹Exãnsi⁄Desc
)

46 
‰ì
(
mVíd‹Exãnsi⁄Desc
);

47 
dñëe
 
	gmO≥øti⁄s
;

48 
dñëe
 
	gmEvíts
;

49 
dñëe
 
	gmDevi˚Pr›îtõs
;

50 
dñëe
 
	gmC≠tuªF‹m©s
;

51 
dñëe
 
	gmPœybackF‹m©s
;

52 i‡(
	gmM™uÁ˘uªr
)

53 
‰ì
(
mM™uÁ˘uªr
);

54 i‡(
	gmModñ
)

55 
‰ì
(
mModñ
);

56 i‡(
	gmVîsi⁄
)

57 
‰ì
(
mVîsi⁄
);

58 i‡(
	gmSîül
)

59 
‰ì
(
mSîül
);

62 
	gMçDevi˚Info
::
ªad
(
MçD©aPackë
& 
∑ckë
) {

63 
MçSåögBuf„r
 
°rög
;

66 
	gmSènd¨dVîsi⁄
 = 
∑ckë
.
gëUI¡16
();

67 
	gmVíd‹Exãnsi⁄ID
 = 
∑ckë
.
gëUI¡32
();

68 
	gmVíd‹Exãnsi⁄Vîsi⁄
 = 
∑ckë
.
gëUI¡16
();

70 
	g∑ckë
.
gëSåög
(
°rög
);

71 
	gmVíd‹Exãnsi⁄Desc
 = 
°rdup
((c⁄° *)
°rög
);

73 
	gmFun˘i⁄ÆCode
 = 
∑ckë
.
gëUI¡16
();

74 
	gmO≥øti⁄s
 = 
∑ckë
.
gëAUI¡16
();

75 
	gmEvíts
 = 
∑ckë
.
gëAUI¡16
();

76 
	gmDevi˚Pr›îtõs
 = 
∑ckë
.
gëAUI¡16
();

77 
	gmC≠tuªF‹m©s
 = 
∑ckë
.
gëAUI¡16
();

78 
	gmPœybackF‹m©s
 = 
∑ckë
.
gëAUI¡16
();

80 
	g∑ckë
.
gëSåög
(
°rög
);

81 
	gmM™uÁ˘uªr
 = 
°rdup
((c⁄° *)
°rög
);

82 
	g∑ckë
.
gëSåög
(
°rög
);

83 
	gmModñ
 = 
°rdup
((c⁄° *)
°rög
);

84 
	g∑ckë
.
gëSåög
(
°rög
);

85 
	gmVîsi⁄
 = 
°rdup
((c⁄° *)
°rög
);

86 
	g∑ckë
.
gëSåög
(
°rög
);

87 
	gmSîül
 = 
°rdup
((c⁄° *)
°rög
);

90 
	gMçDevi˚Info
::
¥öt
() {

91 
ALOGV
("Device Info:\n\tmStandardVersion: %d\n\tmVendorExtensionID: %d\n\tmVendorExtensionVersiony: %d\n",

92 
mSènd¨dVîsi⁄
, 
mVíd‹Exãnsi⁄ID
, 
mVíd‹Exãnsi⁄Vîsi⁄
);

93 
ALOGV
("\tmVendorExtensionDesc: %s\n\tmFunctionalCode: %d\n\tmManufacturer: %s\n\tmModel: %s\n\tmVersion: %s\n\tmSerial: %s\n",

94 
mVíd‹Exãnsi⁄Desc
, 
mFun˘i⁄ÆCode
, 
mM™uÁ˘uªr
, 
mModñ
, 
mVîsi⁄
, 
mSîül
);

	@src/MtpDeviceInfo.h

17 #i‚de‡
_MTP_DEVICE_INFO_H


18 
	#_MTP_DEVICE_INFO_H


	)

20 
	g°©
;

22 
«me•a˚
 
	g™droid
 {

24 
˛ass
 
	gMçD©aPackë
;

26 ˛as†
	cMçDevi˚Info
 {

27 
	gpublic
:

28 
uöt16_t
 
mSènd¨dVîsi⁄
;

29 
uöt32_t
 
	gmVíd‹Exãnsi⁄ID
;

30 
uöt16_t
 
	gmVíd‹Exãnsi⁄Vîsi⁄
;

31 * 
	gmVíd‹Exãnsi⁄Desc
;

32 
uöt16_t
 
	gmFun˘i⁄ÆCode
;

33 
UI¡16Li°
* 
	gmO≥øti⁄s
;

34 
UI¡16Li°
* 
	gmEvíts
;

35 
MçDevi˚Pr›îtyLi°
* 
	gmDevi˚Pr›îtõs
;

36 
MçObje˘F‹m©Li°
* 
	gmC≠tuªF‹m©s
;

37 
MçObje˘F‹m©Li°
* 
	gmPœybackF‹m©s
;

38 * 
	gmM™uÁ˘uªr
;

39 * 
	gmModñ
;

40 * 
	gmVîsi⁄
;

41 * 
	gmSîül
;

43 
	gpublic
:

44 
MçDevi˚Info
();

45 
	gvútuÆ
 ~
MçDevi˚Info
();

47 
ªad
(
MçD©aPackë
& 
∑ckë
);

49 
¥öt
();

	@src/MtpEventPacket.cpp

17 
	#LOG_TAG
 "MçEvítPackë"

	)

19 
	~<°dio.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<f˙é.h
>

22 
	~<sys/io˘l.h
>

23 
	~<°döt.h
>

25 #ifde‡
MTP_DEVICE


26 
	~<löux/usb/f_mç.h
>

29 
	~"MçEvítPackë.h
"

31 #ifde‡
MTP_HOST


32 
	~<usbho°/usbho°.h
>

35 
«me•a˚
 
	g™droid
 {

37 
	gMçEvítPackë
::
MçEvítPackë
()

38 : 
MçPackë
(512)

42 
MçEvítPackë
::~MtpEventPacket() {

45 #ifde‡
MTP_DEVICE


46 
MçEvítPackë
::
wrôe
(
fd
) {

47 
mç_evít
 
evít
;

49 
putUI¡32
(
MTP_CONTAINER_LENGTH_OFFSET
, 
mPackëSize
);

50 
putUI¡16
(
MTP_CONTAINER_TYPE_OFFSET
, 
MTP_CONTAINER_TYPE_EVENT
);

52 
	gevít
.
	gd©a
 = 
mBuf„r
;

53 
	gevít
.
	gÀngth
 = 
mPackëSize
;

54 
	gªt
 = ::
io˘l
(
fd
, 
MTP_SEND_EVENT
, ()&
evít
);

55  (
	gªt
 < 0 ?Ñet : 0);

59 #ifde‡
MTP_HOST


60 
	gMçEvítPackë
::
ªad
(
usb_ªque°
 *
ªque°
) {

61 
ªque°
->
buf„r
 = 
mBuf„r
;

62 
	gªque°
->
	gbuf„r_Àngth
 = 
mBuf„rSize
;

63 
	gªt
 = 
å™s„r
(
ªque°
);

64 i‡(
	gªt
 >= 0)

65 
mPackëSize
 = 
ªt
;

67 
	gmPackëSize
 = 0;

68  
	gªt
;

	@src/MtpEventPacket.h

17 #i‚de‡
_MTP_EVENT_PACKET_H


18 
	#_MTP_EVENT_PACKET_H


	)

20 
	~"MçPackë.h
"

21 
	~"mç.h
"

23 
«me•a˚
 
	g™droid
 {

25 ˛as†
	cMçEvítPackë
 : 
public
 
MçPackë
 {

27 
public
:

28 
MçEvítPackë
();

29 
	gvútuÆ
 ~
MçEvítPackë
();

31 #ifde‡
MTP_DEVICE


33 
wrôe
(
fd
);

36 #ifde‡
MTP_HOST


38 
ªad
(
usb_ªque°
 *
ªque°
);

41 
ölöe
 
MçEvítCode
 
gëEvítCode
(Ëc⁄° {  
gëC⁄èöîCode
(); }

42 
ölöe
 
£tEvítCode
(
MçEvítCode
 
code
)

43 {  
£tC⁄èöîCode
(
code
); }

	@src/MtpObjectInfo.cpp

17 
	#LOG_TAG
 "MçObje˘Info"

	)

19 
	~<°dio.h
>

21 
	~"MçDebug.h
"

22 
	~"MçD©aPackë.h
"

23 
	~"MçObje˘Info.h
"

24 
	~"MçSåögBuf„r.h
"

25 
	~"MçUtûs.h
"

27 
«me•a˚
 
	g™droid
 {

29 
	gMçObje˘Info
::
MçObje˘Info
(
MçObje˘H™dÀ
 
h™dÀ
)

30 : 
mH™dÀ
(
h™dÀ
),

31 
mSt‹ageID
(0),

32 
mF‹m©
(0),

33 
mPrŸe˘i⁄Sètus
(0),

34 
mCom¥es£dSize
(0),

35 
mThumbF‹m©
(0),

36 
mThumbCom¥es£dSize
(0),

37 
mThumbPixWidth
(0),

38 
mThumbPixHeight
(0),

39 
mImagePixWidth
(0),

40 
mImagePixHeight
(0),

41 
mImagePixDïth
(0),

42 
mP¨ít
(0),

43 
mAssocüti⁄Ty≥
(0),

44 
mAssocüti⁄Desc
(0),

45 
mSequí˚Numbî
(0),

46 
mName
(
NULL
),

47 
mD©eCª©ed
(0),

48 
mD©eModifõd
(0),

49 
mKeyw‹ds
(
NULL
)

53 
	gMçObje˘Info
::~
MçObje˘Info
() {

54 i‡(
mName
)

55 
‰ì
(
mName
);

56 i‡(
	gmKeyw‹ds
)

57 
‰ì
(
mKeyw‹ds
);

60 
	gMçObje˘Info
::
ªad
(
MçD©aPackë
& 
∑ckë
) {

61 
MçSåögBuf„r
 
°rög
;

62 
time_t
 
	gtime
;

64 
	gmSt‹ageID
 = 
∑ckë
.
gëUI¡32
();

65 
	gmF‹m©
 = 
∑ckë
.
gëUI¡16
();

66 
	gmPrŸe˘i⁄Sètus
 = 
∑ckë
.
gëUI¡16
();

67 
	gmCom¥es£dSize
 = 
∑ckë
.
gëUI¡32
();

68 
	gmThumbF‹m©
 = 
∑ckë
.
gëUI¡16
();

69 
	gmThumbCom¥es£dSize
 = 
∑ckë
.
gëUI¡32
();

70 
	gmThumbPixWidth
 = 
∑ckë
.
gëUI¡32
();

71 
	gmThumbPixHeight
 = 
∑ckë
.
gëUI¡32
();

72 
	gmImagePixWidth
 = 
∑ckë
.
gëUI¡32
();

73 
	gmImagePixHeight
 = 
∑ckë
.
gëUI¡32
();

74 
	gmImagePixDïth
 = 
∑ckë
.
gëUI¡32
();

75 
	gmP¨ít
 = 
∑ckë
.
gëUI¡32
();

76 
	gmAssocüti⁄Ty≥
 = 
∑ckë
.
gëUI¡16
();

77 
	gmAssocüti⁄Desc
 = 
∑ckë
.
gëUI¡32
();

78 
	gmSequí˚Numbî
 = 
∑ckë
.
gëUI¡32
();

80 
	g∑ckë
.
gëSåög
(
°rög
);

81 
	gmName
 = 
°rdup
((c⁄° *)
°rög
);

83 
	g∑ckë
.
gëSåög
(
°rög
);

84 i‡(
∑r£D©eTime
((c⁄° *)
°rög
, 
time
))

85 
	gmD©eCª©ed
 = 
time
;

87 
	g∑ckë
.
gëSåög
(
°rög
);

88 i‡(
∑r£D©eTime
((c⁄° *)
°rög
, 
time
))

89 
	gmD©eModifõd
 = 
time
;

91 
	g∑ckë
.
gëSåög
(
°rög
);

92 
	gmKeyw‹ds
 = 
°rdup
((c⁄° *)
°rög
);

96 
	#ALOGD
 
¥ötf


	)

97 
	gMçObje˘Info
::
¥öt
() {

98 
ALOGD
("MçObje˘ Infÿ%08X: %s\n", 
mH™dÀ
, 
mName
);

99 
ALOGD
(" mStorageID: %08X mFormat: %04X mProtectionStatus: %d\n",

100 
mSt‹ageID
, 
mF‹m©
, 
mPrŸe˘i⁄Sètus
);

101 
ALOGD
(" mCompressedSize: %d mThumbFormat: %04X mThumbCompressedSize: %d\n",

102 
mCom¥es£dSize
, 
mF‹m©
, 
mThumbCom¥es£dSize
);

103 
ALOGD
(" mThumbPixWidth: %d mThumbPixHeight: %d\n", 
mThumbPixWidth
, 
mThumbPixHeight
);

104 
ALOGD
(" mImagePixWidth: %d mImagePixHeight: %d mImagePixDepth: %d\n",

105 
mImagePixWidth
, 
mImagePixHeight
, 
mImagePixDïth
);

106 
ALOGD
(" mParent: %08X mAssociationType: %04X mAssociationDesc: %04X\n",

107 
mP¨ít
, 
mAssocüti⁄Ty≥
, 
mAssocüti⁄Desc
);

108 
ALOGD
(" mSequenceNumber: %d mDateCreated: %ld mDateModified: %ld mKeywords: %s\n",

109 
mSequí˚Numbî
, 
mD©eCª©ed
, 
mD©eModifõd
, 
mKeyw‹ds
);

	@src/MtpObjectInfo.h

17 #i‚de‡
_MTP_OBJECT_INFO_H


18 
	#_MTP_OBJECT_INFO_H


	)

20 
	~"MçTy≥s.h
"

22 
«me•a˚
 
	g™droid
 {

24 
˛ass
 
	gMçD©aPackë
;

26 ˛as†
	cMçObje˘Info
 {

27 
	gpublic
:

28 
MçObje˘H™dÀ
 
mH™dÀ
;

29 
MçSt‹ageID
 
	gmSt‹ageID
;

30 
MçObje˘F‹m©
 
	gmF‹m©
;

31 
uöt16_t
 
	gmPrŸe˘i⁄Sètus
;

32 
uöt32_t
 
	gmCom¥es£dSize
;

33 
MçObje˘F‹m©
 
	gmThumbF‹m©
;

34 
uöt32_t
 
	gmThumbCom¥es£dSize
;

35 
uöt32_t
 
	gmThumbPixWidth
;

36 
uöt32_t
 
	gmThumbPixHeight
;

37 
uöt32_t
 
	gmImagePixWidth
;

38 
uöt32_t
 
	gmImagePixHeight
;

39 
uöt32_t
 
	gmImagePixDïth
;

40 
MçObje˘H™dÀ
 
	gmP¨ít
;

41 
uöt16_t
 
	gmAssocüti⁄Ty≥
;

42 
uöt32_t
 
	gmAssocüti⁄Desc
;

43 
uöt32_t
 
	gmSequí˚Numbî
;

44 * 
	gmName
;

45 
time_t
 
	gmD©eCª©ed
;

46 
time_t
 
	gmD©eModifõd
;

47 * 
	gmKeyw‹ds
;

49 
	gpublic
:

50 
MçObje˘Info
(
MçObje˘H™dÀ
 
h™dÀ
);

51 
	gvútuÆ
 ~
MçObje˘Info
();

53 
ªad
(
MçD©aPackë
& 
∑ckë
);

55 
¥öt
();

	@src/MtpPacket.cpp

17 
	#LOG_TAG
 "MçPackë"

	)

19 
	~"MçDebug.h
"

20 
	~"MçPackë.h
"

21 
	~"mç.h
"

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°dio.h
>

28 
	#ALOGE
 
¥ötf


	)

29 
	#ALOGV
 
¥ötf


	)

31 #ifde‡
MTP_HOST


32 
	~<usbho°/usbho°.h
>

35 
«me•a˚
 
	g™droid
 {

37 
	gMçPackë
::
MçPackë
(
buf„rSize
)

38 : 
mBuf„r
(
NULL
),

39 
mBuf„rSize
(
buf„rSize
),

40 
mAŒoˇti⁄In¸emít
(
buf„rSize
),

41 
mPackëSize
(0)

43 
	gmBuf„r
 = (
uöt8_t
 *)
mÆloc
(
buf„rSize
);

44 i‡(!
	gmBuf„r
) {

45 
ALOGE
("out of memory!");

46 
ab‹t
();

50 
	gMçPackë
::~
MçPackë
() {

51 i‡(
mBuf„r
)

52 
‰ì
(
mBuf„r
);

55 
	gMçPackë
::
ª£t
() {

56 
Æloˇã
(
MTP_CONTAINER_HEADER_SIZE
);

57 
	gmPackëSize
 = 
MTP_CONTAINER_HEADER_SIZE
;

58 
mem£t
(
mBuf„r
, 0, 
mBuf„rSize
);

61 
	gMçPackë
::
Æloˇã
(
Àngth
) {

62 i‡(
Àngth
 > 
mBuf„rSize
) {

63 
√wLígth
 = 
Àngth
 + 
mAŒoˇti⁄In¸emít
;

64 
	gmBuf„r
 = (
uöt8_t
 *)
ªÆloc
(
mBuf„r
, 
√wLígth
);

65 i‡(!
	gmBuf„r
) {

66 
ALOGE
("out of memory!");

67 
ab‹t
();

69 
	gmBuf„rSize
 = 
√wLígth
;

73 
	gMçPackë
::
dump
() {

74 
	#DUMP_BYTES_PER_ROW
 16

	)

75 
buf„r
[500];

76 * 
	gbuÂå
 = 
buf„r
;

78 
	gi
 = 0; i < 
	gmPackëSize
; i++) {

79 
•rötf
(
buÂå
, "%02X ", 
mBuf„r
[
i
]);

80 
	gbuÂå
 +
°æí
(
buÂå
);

81 i‡(
	gi
 % 
	gDUMP_BYTES_PER_ROW
 =(
DUMP_BYTES_PER_ROW
 - 1)) {

82 
ALOGV
("%s", 
buf„r
);

83 
	gbuÂå
 = 
buf„r
;

86 i‡(
	gbuÂå
 !
buf„r
) {

88 
ALOGV
("%s", 
buf„r
);

90 
ALOGV
("\n");

93 
	gMçPackë
::
c›yFrom
(c⁄° 
MçPackë
& 
§c
) {

94 
Àngth
 = 
§c
.
mPackëSize
;

95 
Æloˇã
(
Àngth
);

96 
	gmPackëSize
 = 
Àngth
;

97 
mem˝y
(
mBuf„r
, 
§c
.mBuf„r, 
Àngth
);

100 
uöt16_t
 
	gMçPackë
::
gëUI¡16
(
off£t
) const {

101  ((
uöt16_t
)
mBuf„r
[
off£t
 + 1] << 8) | (uint16_t)mBuffer[offset];

104 
uöt32_t
 
	gMçPackë
::
gëUI¡32
(
off£t
) const {

105  ((
uöt32_t
)
mBuf„r
[
off£t
 + 3] << 24) | ((uint32_t)mBuffer[offset + 2] << 16) |

106 ((
uöt32_t
)
mBuf„r
[
off£t
 + 1] << 8) | (uint32_t)mBuffer[offset];

109 
	gMçPackë
::
putUI¡16
(
off£t
, 
uöt16_t
 
vÆue
) {

110 
	gmBuf„r
[
off£t
++] = (
uöt8_t
)(
vÆue
 & 0xFF);

111 
	gmBuf„r
[
off£t
++] = (
uöt8_t
)((
vÆue
 >> 8) & 0xFF);

114 
	gMçPackë
::
putUI¡32
(
off£t
, 
uöt32_t
 
vÆue
) {

115 
	gmBuf„r
[
off£t
++] = (
uöt8_t
)(
vÆue
 & 0xFF);

116 
	gmBuf„r
[
off£t
++] = (
uöt8_t
)((
vÆue
 >> 8) & 0xFF);

117 
	gmBuf„r
[
off£t
++] = (
uöt8_t
)((
vÆue
 >> 16) & 0xFF);

118 
	gmBuf„r
[
off£t
++] = (
uöt8_t
)((
vÆue
 >> 24) & 0xFF);

121 
uöt16_t
 
	gMçPackë
::
gëC⁄èöîCode
() const {

122  
gëUI¡16
(
MTP_CONTAINER_CODE_OFFSET
);

125 
	gMçPackë
::
£tC⁄èöîCode
(
uöt16_t
 
code
) {

126 
putUI¡16
(
MTP_CONTAINER_CODE_OFFSET
, 
code
);

129 
uöt16_t
 
	gMçPackë
::
gëC⁄èöîTy≥
() const {

130  
gëUI¡16
(
MTP_CONTAINER_TYPE_OFFSET
);

133 
MçTønß˘i⁄ID
 
	gMçPackë
::
gëTønß˘i⁄ID
() const {

134  
gëUI¡32
(
MTP_CONTAINER_TRANSACTION_ID_OFFSET
);

137 
	gMçPackë
::
£tTønß˘i⁄ID
(
MçTønß˘i⁄ID
 
id
) {

138 
putUI¡32
(
MTP_CONTAINER_TRANSACTION_ID_OFFSET
, 
id
);

141 
uöt32_t
 
	gMçPackë
::
gëP¨amëî
(
ödex
) const {

142 i‡(
ödex
 < 1 || index > 5) {

143 
ALOGE
("ödex %d ouào‡øngêö MçPackë::gëP¨amëî", 
ödex
);

146  
gëUI¡32
(
MTP_CONTAINER_PARAMETER_OFFSET
 + (
ödex
 - 1Ë* (
uöt32_t
));

149 
	gMçPackë
::
£tP¨amëî
(
ödex
, 
uöt32_t
 
vÆue
) {

150 i‡(
	gödex
 < 1 || index > 5) {

151 
ALOGE
("ödex %d ouào‡øngêö MçPackë::£tP¨amëî", 
ödex
);

154 
	goff£t
 = 
MTP_CONTAINER_PARAMETER_OFFSET
 + (
ödex
 - 1Ë* (
uöt32_t
);

155 i‡(
	gmPackëSize
 < 
	goff£t
 + ()(
	guöt32_t
))

156 
	gmPackëSize
 = 
off£t
 + ()(
uöt32_t
);

157 
putUI¡32
(
off£t
, 
vÆue
);

160 #ifde‡
MTP_HOST


161 
	gMçPackë
::
å™s„r
(
usb_ªque°
* 
ªque°
) {

162 
ªsu…
 = 
usb_devi˚_bulk_å™s„r
(
ªque°
->
dev
,

163 
ªque°
->
ídpoöt
,

164 
ªque°
->
buf„r
,

165 
ªque°
->
buf„r_Àngth
,

167 
	gªque°
->
	ga˘uÆ_Àngth
 = 
ªsu…
;

168  
	gªsu…
;

	@src/MtpPacket.h

17 #i‚de‡
_MTP_PACKET_H


18 
	#_MTP_PACKET_H


	)

20 
	~"MçTy≥s.h
"

22 
	gusb_ªque°
;

24 
«me•a˚
 
	g™droid
 {

26 ˛as†
	cMçPackë
 {

28 
	g¥Ÿe˘ed
:

29 
uöt8_t
* 
mBuf„r
;

31 
	gmBuf„rSize
;

33 
	gmAŒoˇti⁄In¸emít
;

35 
	gmPackëSize
;

37 
	gpublic
:

38 
MçPackë
(
buf„rSize
);

39 
	gvútuÆ
 ~
MçPackë
();

42 
vútuÆ
 
ª£t
();

44 
Æloˇã
(
Àngth
);

45 
dump
();

46 
c›yFrom
(c⁄° 
MçPackë
& 
§c
);

48 
uöt16_t
 
gëC⁄èöîCode
() const;

49 
£tC⁄èöîCode
(
uöt16_t
 
code
);

51 
uöt16_t
 
gëC⁄èöîTy≥
() const;

53 
MçTønß˘i⁄ID
 
gëTønß˘i⁄ID
() const;

54 
£tTønß˘i⁄ID
(
MçTønß˘i⁄ID
 
id
);

56 
uöt32_t
 
gëP¨amëî
(
ödex
) const;

57 
£tP¨amëî
(
ödex
, 
uöt32_t
 
vÆue
);

59 #ifde‡
MTP_HOST


60 
å™s„r
(
usb_ªque°
* 
ªque°
);

63 
	g¥Ÿe˘ed
:

64 
uöt16_t
 
gëUI¡16
(
off£t
) const;

65 
uöt32_t
 
gëUI¡32
(
off£t
) const;

66 
putUI¡16
(
off£t
, 
uöt16_t
 
vÆue
);

67 
putUI¡32
(
off£t
, 
uöt32_t
 
vÆue
);

	@src/MtpProperty.cpp

17 
	#LOG_TAG
 "MçPr›îty"

	)

19 
	~"MçD©aPackë.h
"

20 
	~"MçDebug.h
"

21 
	~"MçPr›îty.h
"

22 
	~"MçSåögBuf„r.h
"

23 
	~"MçUtûs.h
"

25 
	~<°dio.h
>

27 
	#ALOGE
 
¥ötf


	)

28 
	#ALOGI
 
¥ötf


	)

30 
«me•a˚
 
	g™droid
 {

32 
	gMçPr›îty
::
MçPr›îty
()

33 : 
mCode
(0),

34 
mTy≥
(0),

35 
mWrôóbÀ
(
Ál£
),

36 
mDeÁu…AºayLígth
(0),

37 
mDeÁu…AºayVÆues
(
NULL
),

38 
mCuºítAºayLígth
(0),

39 
mCuºítAºayVÆues
(
NULL
),

40 
mGroupCode
(0),

41 
mF‹mFœg
(
kF‹mN⁄e
),

42 
mEnumLígth
(0),

43 
mEnumVÆues
(
NULL
)

45 
mem£t
(&
mDeÁu…VÆue
, 0, (mDefaultValue));

46 
mem£t
(&
mCuºítVÆue
, 0, (mCurrentValue));

47 
mem£t
(&
mMöimumVÆue
, 0, (mMinimumValue));

48 
mem£t
(&
mMaximumVÆue
, 0, (mMaximumValue));

51 
	gMçPr›îty
::
MçPr›îty
(
MçPr›îtyCode
 
¥›Code
,

52 
MçD©aTy≥
 
ty≥
,

53 
boﬁ
 
wrôóbÀ
,

54 
deÁu…VÆue
)

55 : 
mCode
(
¥›Code
),

56 
mTy≥
(
ty≥
),

57 
mWrôóbÀ
(
wrôóbÀ
),

58 
mDeÁu…AºayLígth
(0),

59 
mDeÁu…AºayVÆues
(
NULL
),

60 
mCuºítAºayLígth
(0),

61 
mCuºítAºayVÆues
(
NULL
),

62 
mGroupCode
(0),

63 
mF‹mFœg
(
kF‹mN⁄e
),

64 
mEnumLígth
(0),

65 
mEnumVÆues
(
NULL
)

67 
mem£t
(&
mDeÁu…VÆue
, 0, (mDefaultValue));

68 
mem£t
(&
mCuºítVÆue
, 0, (mCurrentValue));

69 
mem£t
(&
mMöimumVÆue
, 0, (mMinimumValue));

70 
mem£t
(&
mMaximumVÆue
, 0, (mMaximumValue));

72 i‡(
	gdeÁu…VÆue
) {

73 
	gty≥
) {

74 
	gMTP_TYPE_INT8
:

75 
mDeÁu…VÆue
.
u
.
i8
 = 
deÁu…VÆue
;

77 
	gMTP_TYPE_UINT8
:

78 
mDeÁu…VÆue
.
u
.
u8
 = 
deÁu…VÆue
;

80 
	gMTP_TYPE_INT16
:

81 
mDeÁu…VÆue
.
u
.
i16
 = 
deÁu…VÆue
;

83 
	gMTP_TYPE_UINT16
:

84 
mDeÁu…VÆue
.
u
.
u16
 = 
deÁu…VÆue
;

86 
	gMTP_TYPE_INT32
:

87 
mDeÁu…VÆue
.
u
.
i32
 = 
deÁu…VÆue
;

89 
	gMTP_TYPE_UINT32
:

90 
mDeÁu…VÆue
.
u
.
u32
 = 
deÁu…VÆue
;

92 
	gMTP_TYPE_INT64
:

93 
mDeÁu…VÆue
.
u
.
i64
 = 
deÁu…VÆue
;

95 
	gMTP_TYPE_UINT64
:

96 
mDeÁu…VÆue
.
u
.
u64
 = 
deÁu…VÆue
;

99 
ALOGE
("unknow¿ty≥ %04X i¿MçPr›îty::MçPr›îty", 
ty≥
);

104 
	gMçPr›îty
::~
MçPr›îty
() {

105 i‡(
mTy≥
 =
MTP_TYPE_STR
) {

107 
‰ì
(
mDeÁu…VÆue
.
°r
);

108 
‰ì
(
mCuºítVÆue
.
°r
);

109 
‰ì
(
mMöimumVÆue
.
°r
);

110 
‰ì
(
mMaximumVÆue
.
°r
);

111 i‡(
	gmDeÁu…AºayVÆues
) {

112 
	gi
 = 0; i < 
	gmDeÁu…AºayLígth
; i++)

113 
‰ì
(
mDeÁu…AºayVÆues
[
i
].
°r
);

115 i‡(
	gmCuºítAºayVÆues
) {

116 
	gi
 = 0; i < 
	gmCuºítAºayLígth
; i++)

117 
‰ì
(
mCuºítAºayVÆues
[
i
].
°r
);

119 i‡(
	gmEnumVÆues
) {

120 
	gi
 = 0; i < 
	gmEnumLígth
; i++)

121 
‰ì
(
mEnumVÆues
[
i
].
°r
);

124 
	gdñëe
[] 
	gmDeÁu…AºayVÆues
;

125 
	gdñëe
[] 
	gmCuºítAºayVÆues
;

126 
	gdñëe
[] 
	gmEnumVÆues
;

129 
	gMçPr›îty
::
ªad
(
MçD©aPackë
& 
∑ckë
) {

130 
mCode
 = 
∑ckë
.
gëUI¡16
();

131 
boﬁ
 
	gdevi˚Pr›
 = 
isDevi˚Pr›îty
();

132 
	gmTy≥
 = 
∑ckë
.
gëUI¡16
();

133 
	gmWrôóbÀ
 = (
∑ckë
.
gëUI¡8
() == 1);

134 
	gmTy≥
) {

135 
	gMTP_TYPE_AINT8
:

136 
MTP_TYPE_AUINT8
:

137 
MTP_TYPE_AINT16
:

138 
MTP_TYPE_AUINT16
:

139 
MTP_TYPE_AINT32
:

140 
MTP_TYPE_AUINT32
:

141 
MTP_TYPE_AINT64
:

142 
MTP_TYPE_AUINT64
:

143 
MTP_TYPE_AINT128
:

144 
MTP_TYPE_AUINT128
:

145 
mDeÁu…AºayVÆues
 = 
ªadAºayVÆues
(
∑ckë
, 
mDeÁu…AºayLígth
);

146 i‡(
	gdevi˚Pr›
)

147 
	gmCuºítAºayVÆues
 = 
ªadAºayVÆues
(
∑ckë
, 
mCuºítAºayLígth
);

150 
ªadVÆue
(
∑ckë
, 
mDeÁu…VÆue
);

151 i‡(
	gdevi˚Pr›
)

152 
ªadVÆue
(
∑ckë
, 
mCuºítVÆue
);

154 i‡(!
	gdevi˚Pr›
)

155 
	gmGroupCode
 = 
∑ckë
.
gëUI¡32
();

156 
	gmF‹mFœg
 = 
∑ckë
.
gëUI¡8
();

158 i‡(
	gmF‹mFœg
 =
kF‹mR™ge
) {

159 
ªadVÆue
(
∑ckë
, 
mMöimumVÆue
);

160 
ªadVÆue
(
∑ckë
, 
mMaximumVÆue
);

161 
ªadVÆue
(
∑ckë
, 
mSãpSize
);

162 } i‡(
	gmF‹mFœg
 =
kF‹mEnum
) {

163 
mEnumLígth
 = 
∑ckë
.
gëUI¡16
();

164 
	gmEnumVÆues
 = 
√w
 
MçPr›îtyVÆue
[
mEnumLígth
];

165 
	gi
 = 0; i < 
	gmEnumLígth
; i++)

166 
ªadVÆue
(
∑ckë
, 
mEnumVÆues
[
i
]);

170 
	gMçPr›îty
::
wrôe
(
MçD©aPackë
& 
∑ckë
) {

171 
boﬁ
 
devi˚Pr›
 = 
isDevi˚Pr›îty
();

173 
	g∑ckë
.
putUI¡16
(
mCode
);

174 
	g∑ckë
.
putUI¡16
(
mTy≥
);

175 
	g∑ckë
.
putUI¡8
(
mWrôóbÀ
 ? 1 : 0);

177 
	gmTy≥
) {

178 
	gMTP_TYPE_AINT8
:

179 
MTP_TYPE_AUINT8
:

180 
MTP_TYPE_AINT16
:

181 
MTP_TYPE_AUINT16
:

182 
MTP_TYPE_AINT32
:

183 
MTP_TYPE_AUINT32
:

184 
MTP_TYPE_AINT64
:

185 
MTP_TYPE_AUINT64
:

186 
MTP_TYPE_AINT128
:

187 
MTP_TYPE_AUINT128
:

188 
wrôeAºayVÆues
(
∑ckë
, 
mDeÁu…AºayVÆues
, 
mDeÁu…AºayLígth
);

189 i‡(
	gdevi˚Pr›
)

190 
wrôeAºayVÆues
(
∑ckë
, 
mCuºítAºayVÆues
, 
mCuºítAºayLígth
);

193 
wrôeVÆue
(
∑ckë
, 
mDeÁu…VÆue
);

194 i‡(
	gdevi˚Pr›
)

195 
wrôeVÆue
(
∑ckë
, 
mCuºítVÆue
);

197 
	g∑ckë
.
putUI¡32
(
mGroupCode
);

198 i‡(!
	gdevi˚Pr›
)

199 
	g∑ckë
.
putUI¡8
(
mF‹mFœg
);

200 i‡(
	gmF‹mFœg
 =
kF‹mR™ge
) {

201 
wrôeVÆue
(
∑ckë
, 
mMöimumVÆue
);

202 
wrôeVÆue
(
∑ckë
, 
mMaximumVÆue
);

203 
wrôeVÆue
(
∑ckë
, 
mSãpSize
);

204 } i‡(
	gmF‹mFœg
 =
kF‹mEnum
) {

205 
∑ckë
.
putUI¡16
(
mEnumLígth
);

206 
	gi
 = 0; i < 
	gmEnumLígth
; i++)

207 
wrôeVÆue
(
∑ckë
, 
mEnumVÆues
[
i
]);

211 
	gMçPr›îty
::
£tDeÁu…VÆue
(c⁄° 
uöt16_t
* 
°rög
) {

212 
‰ì
(
mDeÁu…VÆue
.
°r
);

213 i‡(
	g°rög
) {

214 
MçSåögBuf„r
 
buf„r
(
°rög
);

215 
	gmDeÁu…VÆue
.
	g°r
 = 
°rdup
(
buf„r
);

218 
	gmDeÁu…VÆue
.
	g°r
 = 
NULL
;

221 
	gMçPr›îty
::
£tCuºítVÆue
(c⁄° 
uöt16_t
* 
°rög
) {

222 
‰ì
(
mCuºítVÆue
.
°r
);

223 i‡(
	g°rög
) {

224 
MçSåögBuf„r
 
buf„r
(
°rög
);

225 
	gmCuºítVÆue
.
	g°r
 = 
°rdup
(
buf„r
);

228 
	gmCuºítVÆue
.
	g°r
 = 
NULL
;

231 
	gMçPr›îty
::
£tF‹mR™ge
(
mö
, 
max
, 
°ï
) {

232 
	gmF‹mFœg
 = 
kF‹mR™ge
;

233 
	gmTy≥
) {

234 
	gMTP_TYPE_INT8
:

235 
mMöimumVÆue
.
u
.
i8
 = 
mö
;

236 
	gmMaximumVÆue
.
	gu
.
	gi8
 = 
max
;

237 
	gmSãpSize
.
	gu
.
	gi8
 = 
°ï
;

239 
	gMTP_TYPE_UINT8
:

240 
mMöimumVÆue
.
u
.
u8
 = 
mö
;

241 
	gmMaximumVÆue
.
	gu
.
	gu8
 = 
max
;

242 
	gmSãpSize
.
	gu
.
	gu8
 = 
°ï
;

244 
	gMTP_TYPE_INT16
:

245 
mMöimumVÆue
.
u
.
i16
 = 
mö
;

246 
	gmMaximumVÆue
.
	gu
.
	gi16
 = 
max
;

247 
	gmSãpSize
.
	gu
.
	gi16
 = 
°ï
;

249 
	gMTP_TYPE_UINT16
:

250 
mMöimumVÆue
.
u
.
u16
 = 
mö
;

251 
	gmMaximumVÆue
.
	gu
.
	gu16
 = 
max
;

252 
	gmSãpSize
.
	gu
.
	gu16
 = 
°ï
;

254 
	gMTP_TYPE_INT32
:

255 
mMöimumVÆue
.
u
.
i32
 = 
mö
;

256 
	gmMaximumVÆue
.
	gu
.
	gi32
 = 
max
;

257 
	gmSãpSize
.
	gu
.
	gi32
 = 
°ï
;

259 
	gMTP_TYPE_UINT32
:

260 
mMöimumVÆue
.
u
.
u32
 = 
mö
;

261 
	gmMaximumVÆue
.
	gu
.
	gu32
 = 
max
;

262 
	gmSãpSize
.
	gu
.
	gu32
 = 
°ï
;

264 
	gMTP_TYPE_INT64
:

265 
mMöimumVÆue
.
u
.
i64
 = 
mö
;

266 
	gmMaximumVÆue
.
	gu
.
	gi64
 = 
max
;

267 
	gmSãpSize
.
	gu
.
	gi64
 = 
°ï
;

269 
	gMTP_TYPE_UINT64
:

270 
mMöimumVÆue
.
u
.
u64
 = 
mö
;

271 
	gmMaximumVÆue
.
	gu
.
	gu64
 = 
max
;

272 
	gmSãpSize
.
	gu
.
	gu64
 = 
°ï
;

275 
ALOGE
("unsupportedÅype for MtpProperty::setRange");

280 
	gMçPr›îty
::
£tF‹mEnum
(c⁄° * 
vÆues
, 
cou¡
) {

281 
	gmF‹mFœg
 = 
kF‹mEnum
;

282 
	gdñëe
[] 
	gmEnumVÆues
;

283 
	gmEnumVÆues
 = 
√w
 
MçPr›îtyVÆue
[
cou¡
];

284 
	gmEnumLígth
 = 
cou¡
;

286 
	gi
 = 0; i < 
	gcou¡
; i++) {

287 
	gvÆue
 = *
vÆues
++;

288 
	gmTy≥
) {

289 
	gMTP_TYPE_INT8
:

290 
mEnumVÆues
[
i
].
u
.
i8
 = 
vÆue
;

292 
	gMTP_TYPE_UINT8
:

293 
mEnumVÆues
[
i
].
u
.
u8
 = 
vÆue
;

295 
	gMTP_TYPE_INT16
:

296 
mEnumVÆues
[
i
].
u
.
i16
 = 
vÆue
;

298 
	gMTP_TYPE_UINT16
:

299 
mEnumVÆues
[
i
].
u
.
u16
 = 
vÆue
;

301 
	gMTP_TYPE_INT32
:

302 
mEnumVÆues
[
i
].
u
.
i32
 = 
vÆue
;

304 
	gMTP_TYPE_UINT32
:

305 
mEnumVÆues
[
i
].
u
.
u32
 = 
vÆue
;

307 
	gMTP_TYPE_INT64
:

308 
mEnumVÆues
[
i
].
u
.
i64
 = 
vÆue
;

310 
	gMTP_TYPE_UINT64
:

311 
mEnumVÆues
[
i
].
u
.
u64
 = 
vÆue
;

314 
ALOGE
("unsupportedÅype for MtpProperty::setEnum");

320 
	gMçPr›îty
::
£tF‹mD©eTime
() {

321 
mF‹mFœg
 = 
kF‹mD©eTime
;

324 
	gMçPr›îty
::
¥öt
() {

325 
MçSåög
 
buf„r
;

326 
boﬁ
 
	gdevi˚Pr›
 = 
isDevi˚Pr›îty
();

327 i‡(
	gdevi˚Pr›
)

328 
ALOGI
(" %†(%04X)", 
MçDebug
::
gëDevi˚Pr›CodeName
(
mCode
), mCode);

330 
ALOGI
(" %†(%04X)", 
MçDebug
::
gëObje˘Pr›CodeName
(
mCode
), mCode);

331 
ALOGI
("Åy≥ %04X", 
mTy≥
);

332 
ALOGI
(" wrôóbÀ %s", (
mWrôóbÀ
 ? "true" : "false"));

333 
	gbuf„r
 = " default value: ";

334 
¥öt
(
mDeÁu…VÆue
, 
buf„r
);

335 
ALOGI
("%s", (c⁄° *)
buf„r
);

336 i‡(
	gdevi˚Pr›
) {

337 
	gbuf„r
 = " current value: ";

338 
¥öt
(
mCuºítVÆue
, 
buf„r
);

339 
ALOGI
("%s", (c⁄° *)
buf„r
);

341 
	gmF‹mFœg
) {

342 
	gkF‹mN⁄e
:

344 
	gkF‹mR™ge
:

345 
buf„r
 = " Range (";

346 
¥öt
(
mMöimumVÆue
, 
buf„r
);

347 
	gbuf„r
 += ", ";

348 
¥öt
(
mMaximumVÆue
, 
buf„r
);

349 
	gbuf„r
 += ", ";

350 
¥öt
(
mSãpSize
, 
buf„r
);

351 
	gbuf„r
 += ")";

352 
ALOGI
("%s", (c⁄° *)
buf„r
);

354 
	gkF‹mEnum
:

355 
buf„r
 = " Enum { ";

356 
	gi
 = 0; i < 
	gmEnumLígth
; i++) {

357 
¥öt
(
mEnumVÆues
[
i
], 
buf„r
);

358 
	gbuf„r
 += " ";

360 
	gbuf„r
 += "}";

361 
ALOGI
("%s", (c⁄° *)
buf„r
);

363 
	gkF‹mD©eTime
:

364 
ALOGI
(" DateTime\n");

367 
ALOGI
(" f‹m %d\n", 
mF‹mFœg
);

372 
	gMçPr›îty
::
¥öt
(
MçPr›îtyVÆue
& 
vÆue
, 
MçSåög
& 
buf„r
) {

373 
	gmTy≥
) {

374 
	gMTP_TYPE_INT8
:

375 
buf„r
.
≠≥ndF‹m©
("%d", 
vÆue
.
u
.
i8
);

377 
	gMTP_TYPE_UINT8
:

378 
buf„r
.
≠≥ndF‹m©
("%d", 
vÆue
.
u
.
u8
);

380 
	gMTP_TYPE_INT16
:

381 
buf„r
.
≠≥ndF‹m©
("%d", 
vÆue
.
u
.
i16
);

383 
	gMTP_TYPE_UINT16
:

384 
buf„r
.
≠≥ndF‹m©
("%d", 
vÆue
.
u
.
u16
);

386 
	gMTP_TYPE_INT32
:

387 
buf„r
.
≠≥ndF‹m©
("%d", 
vÆue
.
u
.
i32
);

389 
	gMTP_TYPE_UINT32
:

390 
buf„r
.
≠≥ndF‹m©
("%d", 
vÆue
.
u
.
u32
);

392 
	gMTP_TYPE_INT64
:

393 
buf„r
.
≠≥ndF‹m©
("%Œd", 
vÆue
.
u
.
i64
);

395 
	gMTP_TYPE_UINT64
:

396 
buf„r
.
≠≥ndF‹m©
("%Œd", 
vÆue
.
u
.
u64
);

398 
	gMTP_TYPE_INT128
:

399 
buf„r
.
≠≥ndF‹m©
("%08X%08X%08X%08X", 
vÆue
.
u
.
i128
[0], value.u.i128[1],

400 
vÆue
.
u
.
i128
[2], value.u.i128[3]);

402 
	gMTP_TYPE_UINT128
:

403 
buf„r
.
≠≥ndF‹m©
("%08X%08X%08X%08X", 
vÆue
.
u
.
u128
[0], value.u.u128[1],

404 
vÆue
.
u
.
u128
[2], value.u.u128[3]);

406 
	gMTP_TYPE_STR
:

407 
buf„r
.
≠≥ndF‹m©
("%s", 
vÆue
.
°r
);

410 
ALOGE
("unsupportedÅype for MtpProperty::print\n");

415 
	gMçPr›îty
::
ªadVÆue
(
MçD©aPackë
& 
∑ckë
, 
MçPr›îtyVÆue
& 
vÆue
) {

416 
MçSåögBuf„r
 
	g°rögBuf„r
;

418 
	gmTy≥
) {

419 
	gMTP_TYPE_INT8
:

420 
MTP_TYPE_AINT8
:

421 
vÆue
.
u
.
i8
 = 
∑ckë
.
gëI¡8
();

423 
	gMTP_TYPE_UINT8
:

424 
MTP_TYPE_AUINT8
:

425 
vÆue
.
u
.
u8
 = 
∑ckë
.
gëUI¡8
();

427 
	gMTP_TYPE_INT16
:

428 
MTP_TYPE_AINT16
:

429 
vÆue
.
u
.
i16
 = 
∑ckë
.
gëI¡16
();

431 
	gMTP_TYPE_UINT16
:

432 
MTP_TYPE_AUINT16
:

433 
vÆue
.
u
.
u16
 = 
∑ckë
.
gëUI¡16
();

435 
	gMTP_TYPE_INT32
:

436 
MTP_TYPE_AINT32
:

437 
vÆue
.
u
.
i32
 = 
∑ckë
.
gëI¡32
();

439 
	gMTP_TYPE_UINT32
:

440 
MTP_TYPE_AUINT32
:

441 
vÆue
.
u
.
u32
 = 
∑ckë
.
gëUI¡32
();

443 
	gMTP_TYPE_INT64
:

444 
MTP_TYPE_AINT64
:

445 
vÆue
.
u
.
i64
 = 
∑ckë
.
gëI¡64
();

447 
	gMTP_TYPE_UINT64
:

448 
MTP_TYPE_AUINT64
:

449 
vÆue
.
u
.
u64
 = 
∑ckë
.
gëUI¡64
();

451 
	gMTP_TYPE_INT128
:

452 
MTP_TYPE_AINT128
:

453 
∑ckë
.
gëI¡128
(
vÆue
.
u
.
i128
);

455 
	gMTP_TYPE_UINT128
:

456 
MTP_TYPE_AUINT128
:

457 
∑ckë
.
gëUI¡128
(
vÆue
.
u
.
u128
);

459 
	gMTP_TYPE_STR
:

460 
∑ckë
.
gëSåög
(
°rögBuf„r
);

461 
	gvÆue
.
	g°r
 = 
°rdup
(
°rögBuf„r
);

464 
ALOGE
("unknow¿ty≥ %04X i¿MçPr›îty::ªadVÆue", 
mTy≥
);

468 
	gMçPr›îty
::
wrôeVÆue
(
MçD©aPackë
& 
∑ckë
, 
MçPr›îtyVÆue
& 
vÆue
) {

469 
MçSåögBuf„r
 
	g°rögBuf„r
;

471 
	gmTy≥
) {

472 
	gMTP_TYPE_INT8
:

473 
MTP_TYPE_AINT8
:

474 
∑ckë
.
putI¡8
(
vÆue
.
u
.
i8
);

476 
	gMTP_TYPE_UINT8
:

477 
MTP_TYPE_AUINT8
:

478 
∑ckë
.
putUI¡8
(
vÆue
.
u
.
u8
);

480 
	gMTP_TYPE_INT16
:

481 
MTP_TYPE_AINT16
:

482 
∑ckë
.
putI¡16
(
vÆue
.
u
.
i16
);

484 
	gMTP_TYPE_UINT16
:

485 
MTP_TYPE_AUINT16
:

486 
∑ckë
.
putUI¡16
(
vÆue
.
u
.
u16
);

488 
	gMTP_TYPE_INT32
:

489 
MTP_TYPE_AINT32
:

490 
∑ckë
.
putI¡32
(
vÆue
.
u
.
i32
);

492 
	gMTP_TYPE_UINT32
:

493 
MTP_TYPE_AUINT32
:

494 
∑ckë
.
putUI¡32
(
vÆue
.
u
.
u32
);

496 
	gMTP_TYPE_INT64
:

497 
MTP_TYPE_AINT64
:

498 
∑ckë
.
putI¡64
(
vÆue
.
u
.
i64
);

500 
	gMTP_TYPE_UINT64
:

501 
MTP_TYPE_AUINT64
:

502 
∑ckë
.
putUI¡64
(
vÆue
.
u
.
u64
);

504 
	gMTP_TYPE_INT128
:

505 
MTP_TYPE_AINT128
:

506 
∑ckë
.
putI¡128
(
vÆue
.
u
.
i128
);

508 
	gMTP_TYPE_UINT128
:

509 
MTP_TYPE_AUINT128
:

510 
∑ckë
.
putUI¡128
(
vÆue
.
u
.
u128
);

512 
	gMTP_TYPE_STR
:

513 i‡(
vÆue
.
°r
)

514 
∑ckë
.
putSåög
(
vÆue
.
°r
);

516 
	g∑ckë
.
putEm±ySåög
();

519 
ALOGE
("unknow¿ty≥ %04X i¿MçPr›îty::wrôeVÆue", 
mTy≥
);

523 
MçPr›îtyVÆue
* 
	gMçPr›îty
::
ªadAºayVÆues
(
MçD©aPackë
& 
∑ckë
, & 
Àngth
) {

524 
	gÀngth
 = 
∑ckë
.
gëUI¡32
();

525 i‡(
	gÀngth
 == 0)

526  
NULL
;

527 
MçPr›îtyVÆue
* 
	gªsu…
 = 
√w
 MçPr›îtyVÆue[
Àngth
];

528 
	gi
 = 0; i < 
	gÀngth
; i++)

529 
ªadVÆue
(
∑ckë
, 
ªsu…
[
i
]);

530  
	gªsu…
;

533 
	gMçPr›îty
::
wrôeAºayVÆues
(
MçD©aPackë
& 
∑ckë
, 
MçPr›îtyVÆue
* 
vÆues
, 
Àngth
) {

534 
	g∑ckë
.
putUI¡32
(
Àngth
);

535 
	gi
 = 0; i < 
	gÀngth
; i++)

536 
wrôeVÆue
(
∑ckë
, 
vÆues
[
i
]);

	@src/MtpProperty.h

17 #i‚de‡
_MTP_PROPERTY_H


18 
	#_MTP_PROPERTY_H


	)

20 
	~"MçTy≥s.h
"

22 
«me•a˚
 
	g™droid
 {

24 
˛ass
 
	gMçD©aPackë
;

26 
	sMçPr›îtyVÆue
 {

28 
öt8_t
 
	gi8
;

29 
uöt8_t
 
	gu8
;

30 
öt16_t
 
	gi16
;

31 
uöt16_t
 
	gu16
;

32 
öt32_t
 
	gi32
;

33 
uöt32_t
 
	gu32
;

34 
öt64_t
 
	gi64
;

35 
uöt64_t
 
	gu64
;

36 
öt128_t
 
	gi128
;

37 
uöt128_t
 
	gu128
;

38 } 
	gu
;

40 * 
	g°r
;

43 ˛as†
	cMçPr›îty
 {

44 
	gpublic
:

45 
MçPr›îtyCode
 
mCode
;

46 
MçD©aTy≥
 
	gmTy≥
;

47 
boﬁ
 
	gmWrôóbÀ
;

48 
MçPr›îtyVÆue
 
	gmDeÁu…VÆue
;

49 
MçPr›îtyVÆue
 
	gmCuºítVÆue
;

52 
	gmDeÁu…AºayLígth
;

53 
MçPr›îtyVÆue
* 
	gmDeÁu…AºayVÆues
;

54 
	gmCuºítAºayLígth
;

55 
MçPr›îtyVÆue
* 
	gmCuºítAºayVÆues
;

58 
	gkF‹mN⁄e
 = 0,

59 
	gkF‹mR™ge
 = 1,

60 
	gkF‹mEnum
 = 2,

61 
	gkF‹mD©eTime
 = 3,

64 
uöt32_t
 
	gmGroupCode
;

65 
uöt8_t
 
	gmF‹mFœg
;

68 
MçPr›îtyVÆue
 
	gmMöimumVÆue
;

69 
MçPr›îtyVÆue
 
	gmMaximumVÆue
;

70 
MçPr›îtyVÆue
 
	gmSãpSize
;

73 
	gmEnumLígth
;

74 
MçPr›îtyVÆue
* 
	gmEnumVÆues
;

76 
	gpublic
:

77 
MçPr›îty
();

78 
MçPr›îty
(
MçPr›îtyCode
 
¥›Code
,

79 
MçD©aTy≥
 
ty≥
,

80 
boﬁ
 
wrôóbÀ
 = 
Ál£
,

81 
deÁu…VÆue
 = 0);

82 
	gvútuÆ
 ~
MçPr›îty
();

84 
ölöe
 
MçPr›îtyCode
 
gëPr›îtyCode
(Ëc⁄° {  
	gmCode
; }

86 
ªad
(
MçD©aPackë
& 
∑ckë
);

87 
wrôe
(
MçD©aPackë
& 
∑ckë
);

89 
£tDeÁu…VÆue
(c⁄° 
uöt16_t
* 
°rög
);

90 
£tCuºítVÆue
(c⁄° 
uöt16_t
* 
°rög
);

92 
£tF‹mR™ge
(
mö
, 
max
, 
°ï
);

93 
£tF‹mEnum
(c⁄° * 
vÆues
, 
cou¡
);

94 
£tF‹mD©eTime
();

96 
¥öt
();

97 
¥öt
(
MçPr›îtyVÆue
& 
vÆue
, 
MçSåög
& 
buf„r
);

99 
ölöe
 
boﬁ
 
isDevi˚Pr›îty
() const {

100  ( ((
	gmCode
 & 0xF000) == 0x5000)

101 || ((
mCode
 & 0xF800) == 0xD000));

104 
	g¥iv©e
:

105 
ªadVÆue
(
MçD©aPackë
& 
∑ckë
, 
MçPr›îtyVÆue
& 
vÆue
);

106 
wrôeVÆue
(
MçD©aPackë
& 
∑ckë
, 
MçPr›îtyVÆue
& 
vÆue
);

107 
MçPr›îtyVÆue
* 
ªadAºayVÆues
(
MçD©aPackë
& 
∑ckë
, & 
Àngth
);

108 
wrôeAºayVÆues
(
MçD©aPackë
& 
∑ckë
,

109 
MçPr›îtyVÆue
* 
vÆues
, 
Àngth
);

	@src/MtpRequestPacket.cpp

17 
	#LOG_TAG
 "MçReque°Packë"

	)

19 
	~<°dio.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<f˙é.h
>

22 
	~<uni°d.h
>

24 
	~"MçReque°Packë.h
"

26 #ifde‡
MTP_HOST


27 
	~<usbho°/usbho°.h
>

30 
«me•a˚
 
	g™droid
 {

32 
	gMçReque°Packë
::
MçReque°Packë
()

33 : 
MçPackë
(512)

37 
MçReque°Packë
::~MtpRequestPacket() {

40 #ifde‡
MTP_DEVICE


41 
MçReque°Packë
::
ªad
(
fd
) {

42 
ªt
 = ::
ªad
(
fd
, 
mBuf„r
, 
mBuf„rSize
);

43 i‡(
	gªt
 >= 0)

44 
mPackëSize
 = 
ªt
;

46 
	gmPackëSize
 = 0;

47  
	gªt
;

51 #ifde‡
MTP_HOST


53 
	gMçReque°Packë
::
wrôe
(
usb_ªque°
 *
ªque°
)

55 
putUI¡32
(
MTP_CONTAINER_LENGTH_OFFSET
, 
mPackëSize
);

56 
putUI¡16
(
MTP_CONTAINER_TYPE_OFFSET
, 
MTP_CONTAINER_TYPE_COMMAND
);

57 
	gªque°
->
	gbuf„r
 = 
mBuf„r
;

58 
	gªque°
->
	gbuf„r_Àngth
 = 
mPackëSize
;

59  
å™s„r
(
ªque°
);

	@src/MtpRequestPacket.h

17 #i‚de‡
_MTP_REQUEST_PACKET_H


18 
	#_MTP_REQUEST_PACKET_H


	)

20 
	~"MçPackë.h
"

21 
	~"mç.h
"

23 
	gusb_ªque°
;

25 
«me•a˚
 
	g™droid
 {

27 ˛as†
	cMçReque°Packë
 : 
public
 
MçPackë
 {

29 
public
:

30 
MçReque°Packë
();

31 
	gvútuÆ
 ~
MçReque°Packë
();

33 #ifde‡
MTP_DEVICE


35 
ªad
(
fd
);

38 #ifde‡
MTP_HOST


40 
wrôe
(
usb_ªque°
 *
ªque°
);

43 
ölöe
 
MçO≥øti⁄Code
 
gëO≥øti⁄Code
(Ëc⁄° {  
gëC⁄èöîCode
(); }

44 
ölöe
 
£tO≥øti⁄Code
(
MçO≥øti⁄Code
 
code
)

45 {  
£tC⁄èöîCode
(
code
); }

	@src/MtpResponsePacket.cpp

17 
	#LOG_TAG
 "MçRe•⁄£Packë"

	)

19 
	~<°dio.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<f˙é.h
>

22 
	~<uni°d.h
>

24 
	~"MçRe•⁄£Packë.h
"

26 #ifde‡
MTP_HOST


27 
	~<usbho°/usbho°.h
>

30 
«me•a˚
 
	g™droid
 {

32 
	gMçRe•⁄£Packë
::
MçRe•⁄£Packë
()

33 : 
MçPackë
(512)

37 
MçRe•⁄£Packë
::~MtpResponsePacket() {

40 #ifde‡
MTP_DEVICE


41 
MçRe•⁄£Packë
::
wrôe
(
fd
) {

42 
putUI¡32
(
MTP_CONTAINER_LENGTH_OFFSET
, 
mPackëSize
);

43 
putUI¡16
(
MTP_CONTAINER_TYPE_OFFSET
, 
MTP_CONTAINER_TYPE_RESPONSE
);

44 
	gªt
 = ::
wrôe
(
fd
, 
mBuf„r
, 
mPackëSize
);

45  (
	gªt
 < 0 ?Ñet : 0);

49 #ifde‡
MTP_HOST


50 
	gMçRe•⁄£Packë
::
ªad
(
usb_ªque°
 *
ªque°
) {

51 
ªque°
->
buf„r
 = 
mBuf„r
;

52 
	gªque°
->
	gbuf„r_Àngth
 = 
mBuf„rSize
;

53 
	gªt
 = 
å™s„r
(
ªque°
);

54 i‡(
	gªt
 >= 0)

55 
mPackëSize
 = 
ªt
;

57 
	gmPackëSize
 = 0;

58  
	gªt
;

	@src/MtpResponsePacket.h

17 #i‚de‡
_MTP_RESPONSE_PACKET_H


18 
	#_MTP_RESPONSE_PACKET_H


	)

20 
	~"MçPackë.h
"

21 
	~"mç.h
"

23 
«me•a˚
 
	g™droid
 {

25 ˛as†
	cMçRe•⁄£Packë
 : 
public
 
MçPackë
 {

27 
public
:

28 
MçRe•⁄£Packë
();

29 
	gvútuÆ
 ~
MçRe•⁄£Packë
();

31 #ifde‡
MTP_DEVICE


33 
wrôe
(
fd
);

36 #ifde‡
MTP_HOST


38 
ªad
(
usb_ªque°
 *
ªque°
);

41 
ölöe
 
MçRe•⁄£Code
 
gëRe•⁄£Code
(Ëc⁄° {  
gëC⁄èöîCode
(); }

42 
ölöe
 
£tRe•⁄£Code
(
MçRe•⁄£Code
 
code
)

43 {  
£tC⁄èöîCode
(
code
); }

	@src/MtpServer.cpp

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<sys/ty≥s.h
>

20 
	~<sys/io˘l.h
>

21 
	~<sys/°©.h
>

22 
	~<f˙é.h
>

23 
	~<î∫o.h
>

24 
	~<sys/°©.h
>

25 
	~<dúít.h
>

29 
	#LOG_TAG
 "MçSîvî"

	)

31 
	~"MçDebug.h
"

32 
	~"MçD©aba£.h
"

33 
	~"MçObje˘Info.h
"

34 
	~"MçPr›îty.h
"

35 
	~"MçSîvî.h
"

36 
	~"MçSt‹age.h
"

37 
	~"MçSåögBuf„r.h
"

39 
	~<löux/usb/f_mç.h
>

41 
«me•a˚
 
	g™droid
 {

43 c⁄° 
MçO≥øti⁄Code
 
	gkSuµ‹ãdO≥øti⁄Codes
[] = {

44 
MTP_OPERATION_GET_DEVICE_INFO
,

45 
MTP_OPERATION_OPEN_SESSION
,

46 
MTP_OPERATION_CLOSE_SESSION
,

47 
MTP_OPERATION_GET_STORAGE_IDS
,

48 
MTP_OPERATION_GET_STORAGE_INFO
,

49 
MTP_OPERATION_GET_NUM_OBJECTS
,

50 
MTP_OPERATION_GET_OBJECT_HANDLES
,

51 
MTP_OPERATION_GET_OBJECT_INFO
,

52 
MTP_OPERATION_GET_OBJECT
,

53 
MTP_OPERATION_GET_THUMB
,

54 
MTP_OPERATION_DELETE_OBJECT
,

55 
MTP_OPERATION_SEND_OBJECT_INFO
,

56 
MTP_OPERATION_SEND_OBJECT
,

63 
MTP_OPERATION_GET_DEVICE_PROP_DESC
,

64 
MTP_OPERATION_GET_DEVICE_PROP_VALUE
,

65 
MTP_OPERATION_SET_DEVICE_PROP_VALUE
,

66 
MTP_OPERATION_RESET_DEVICE_PROP_VALUE
,

70 
MTP_OPERATION_GET_PARTIAL_OBJECT
,

72 
MTP_OPERATION_GET_OBJECT_PROPS_SUPPORTED
,

73 
MTP_OPERATION_GET_OBJECT_PROP_DESC
,

74 
MTP_OPERATION_GET_OBJECT_PROP_VALUE
,

75 
MTP_OPERATION_SET_OBJECT_PROP_VALUE
,

76 
MTP_OPERATION_GET_OBJECT_PROP_LIST
,

80 
MTP_OPERATION_GET_OBJECT_REFERENCES
,

81 
MTP_OPERATION_SET_OBJECT_REFERENCES
,

84 
MTP_OPERATION_GET_PARTIAL_OBJECT_64
,

85 
MTP_OPERATION_SEND_PARTIAL_OBJECT
,

86 
MTP_OPERATION_TRUNCATE_OBJECT
,

87 
MTP_OPERATION_BEGIN_EDIT_OBJECT
,

88 
MTP_OPERATION_END_EDIT_OBJECT
,

91 c⁄° 
MçEvítCode
 
	gkSuµ‹ãdEvítCodes
[] = {

92 
MTP_EVENT_OBJECT_ADDED
,

93 
MTP_EVENT_OBJECT_REMOVED
,

94 
MTP_EVENT_STORE_ADDED
,

95 
MTP_EVENT_STORE_REMOVED
,

98 
	gMçSîvî
::
MçSîvî
(
fd
, 
MçD©aba£
* 
d©aba£
, 
boﬁ
 
±p
,

99 
fûeGroup
, 
fûePîm
, 
dúe˘‹yPîm
)

100 : 
mFD
(
fd
),

101 
mD©aba£
(
d©aba£
),

102 
mPç
(
±p
),

103 
mFûeGroup
(
fûeGroup
),

104 
mFûePîmissi⁄
(
fûePîm
),

105 
mDúe˘‹yPîmissi⁄
(
dúe˘‹yPîm
),

106 
mSessi⁄ID
(0),

107 
mSessi⁄O≥n
(
Ál£
),

108 
mSídObje˘H™dÀ
(
kInvÆidObje˘H™dÀ
),

109 
mSídObje˘F‹m©
(0),

110 
mSídObje˘FûeSize
(0)

114 
	gMçSîvî
::~
MçSîvî
() {

117 
MçSîvî
::
addSt‹age
(
MçSt‹age
* 
°‹age
) {

118 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

120 
	gmSt‹ages
.
push
(
°‹age
);

121 
£ndSt‹eAdded
(
°‹age
->
gëSt‹ageID
());

124 
	gMçSîvî
::
ªmoveSt‹age
(
MçSt‹age
* 
°‹age
) {

125 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

127 
	gi
 = 0; i < 
	gmSt‹ages
.
size
(); i++) {

128 i‡(
	gmSt‹ages
[
i
] =
°‹age
) {

129 
mSt‹ages
.
ªmoveAt
(
i
);

130 
£ndSt‹eRemoved
(
°‹age
->
gëSt‹ageID
());

136 
MçSt‹age
* 
	gMçSîvî
::
gëSt‹age
(
MçSt‹ageID
 
id
) {

137 i‡(
id
 == 0)

138  
mSt‹ages
[0];

139 
	gi
 = 0; i < 
	gmSt‹ages
.
size
(); i++) {

140 
MçSt‹age
* 
	g°‹age
 = 
mSt‹ages
[
i
];

141 i‡(
	g°‹age
->
gëSt‹ageID
(Ë=
id
)

142  
°‹age
;

144  
	gNULL
;

147 
boﬁ
 
	gMçSîvî
::
hasSt‹age
(
MçSt‹ageID
 
id
) {

148 i‡(
id
 == 0 || id == 0xFFFFFFFF)

149  
mSt‹ages
.
size
() > 0;

150  (
gëSt‹age
(
id
Ë!
NULL
);

153 
	gMçSîvî
::
run
() {

154 
fd
 = 
mFD
;

156 
ALOGV
("MçSîvî::ru¿fd: %d\n", 
fd
);

159 
	gªt
 = 
mReque°
.
ªad
(
fd
);

160 i‡(
	gªt
 < 0) {

161 
ALOGV
("ªque°ÑódÑëu∫ed %d,Éºno: %d", 
ªt
, 
î∫o
);

162 i‡(
	gî∫o
 =
ECANCELED
) {

168 
MçO≥øti⁄Code
 
	g›î©i⁄
 = 
mReque°
.
gëO≥øti⁄Code
();

169 
MçTønß˘i⁄ID
 
	gå™ß˘i⁄
 = 
mReque°
.
gëTønß˘i⁄ID
();

171 
ALOGV
("›î©i⁄: %s", 
MçDebug
::
gëO≥øti⁄CodeName
(
›î©i⁄
));

172 
	gmReque°
.
dump
();

175 
boﬁ
 
	gd©aIn
 = (
›î©i⁄
 =
MTP_OPERATION_SEND_OBJECT_INFO


176 || 
›î©i⁄
 =
MTP_OPERATION_SET_OBJECT_REFERENCES


177 || 
›î©i⁄
 =
MTP_OPERATION_SET_OBJECT_PROP_VALUE


178 || 
›î©i⁄
 =
MTP_OPERATION_SET_DEVICE_PROP_VALUE
);

179 i‡(
	gd©aIn
) {

180 
	gªt
 = 
mD©a
.
ªad
(
fd
);

181 i‡(
	gªt
 < 0) {

182 
ALOGE
("d©®ªadÑëu∫ed %d,Éºno: %d", 
ªt
, 
î∫o
);

183 i‡(
	gî∫o
 =
ECANCELED
) {

189 
ALOGV
("received data:");

190 
	gmD©a
.
dump
();

192 
	gmD©a
.
ª£t
();

195 i‡(
h™dÀReque°
()) {

196 i‡(!
	gd©aIn
 && 
	gmD©a
.
hasD©a
()) {

197 
	gmD©a
.
£tO≥øti⁄Code
(
›î©i⁄
);

198 
	gmD©a
.
£tTønß˘i⁄ID
(
å™ß˘i⁄
);

199 
ALOGV
("sending data:");

200 
	gmD©a
.
dump
();

201 
	gªt
 = 
mD©a
.
wrôe
(
fd
);

202 i‡(
	gªt
 < 0) {

203 
ALOGE
("ªque° wrôêªtu∫ed %d,Éºno: %d", 
ªt
, 
î∫o
);

204 i‡(
	gî∫o
 =
ECANCELED
) {

212 
	gmRe•⁄£
.
£tTønß˘i⁄ID
(
å™ß˘i⁄
);

213 
ALOGV
("£ndögÑe•⁄£ %04X", 
mRe•⁄£
.
gëRe•⁄£Code
());

214 
	gªt
 = 
mRe•⁄£
.
wrôe
(
fd
);

215 
	gmRe•⁄£
.
dump
();

216 i‡(
	gªt
 < 0) {

217 
ALOGE
("ªque° wrôêªtu∫ed %d,Éºno: %d", 
ªt
, 
î∫o
);

218 i‡(
	gî∫o
 =
ECANCELED
) {

225 
ALOGV
("skippingÑesponse\n");

230 
	gcou¡
 = 
mObje˘EdôLi°
.
size
();

231 
	gi
 = 0; i < 
	gcou¡
; i++) {

232 
Obje˘Edô
* 
	gedô
 = 
mObje˘EdôLi°
[
i
];

233 
commôEdô
(
edô
);

234 
dñëe
 
	gedô
;

236 
	gmObje˘EdôLi°
.
˛ór
();

238 i‡(
	gmSessi⁄O≥n
)

239 
	gmD©aba£
->
£ssi⁄Ended
();

240 
˛o£
(
fd
);

241 
	gmFD
 = -1;

244 
	gMçSîvî
::
£ndObje˘Added
(
MçObje˘H™dÀ
 
h™dÀ
) {

245 
ALOGV
("£ndObje˘Added %d\n", 
h™dÀ
);

246 
£ndEvít
(
MTP_EVENT_OBJECT_ADDED
, 
h™dÀ
);

249 
	gMçSîvî
::
£ndObje˘Removed
(
MçObje˘H™dÀ
 
h™dÀ
) {

250 
ALOGV
("£ndObje˘Removed %d\n", 
h™dÀ
);

251 
£ndEvít
(
MTP_EVENT_OBJECT_REMOVED
, 
h™dÀ
);

254 
	gMçSîvî
::
£ndSt‹eAdded
(
MçSt‹ageID
 
id
) {

255 
ALOGV
("£ndSt‹eAdded %08X\n", 
id
);

256 
£ndEvít
(
MTP_EVENT_STORE_ADDED
, 
id
);

259 
	gMçSîvî
::
£ndSt‹eRemoved
(
MçSt‹ageID
 
id
) {

260 
ALOGV
("£ndSt‹eRemoved %08X\n", 
id
);

261 
£ndEvít
(
MTP_EVENT_STORE_REMOVED
, 
id
);

264 
	gMçSîvî
::
£ndEvít
(
MçEvítCode
 
code
, 
uöt32_t
 
∑øm1
) {

265 i‡(
	gmSessi⁄O≥n
) {

266 
	gmEvít
.
£tEvítCode
(
code
);

267 
	gmEvít
.
£tTønß˘i⁄ID
(
mReque°
.
gëTønß˘i⁄ID
());

268 
	gmEvít
.
£tP¨amëî
(1, 
∑øm1
);

269 
	gªt
 = 
mEvít
.
wrôe
(
mFD
);

270 
ALOGV
("mEvít.wrôêªtu∫ed %d\n", 
ªt
);

274 
	gMçSîvî
::
addEdôObje˘
(
MçObje˘H™dÀ
 
h™dÀ
, 
MçSåög
& 
∑th
,

275 
uöt64_t
 
size
, 
MçObje˘F‹m©
 
f‹m©
, 
fd
) {

276 
Obje˘Edô
* 
	gedô
 = 
√w
 Obje˘Edô(
h™dÀ
, 
∑th
, 
size
, 
f‹m©
, 
fd
);

277 
	gmObje˘EdôLi°
.
add
(
edô
);

280 
	gMçSîvî
::
Obje˘Edô
* 
MçSîvî
::
gëEdôObje˘
(
MçObje˘H™dÀ
 
h™dÀ
) {

281 
cou¡
 = 
mObje˘EdôLi°
.
size
();

282 
	gi
 = 0; i < 
	gcou¡
; i++) {

283 
Obje˘Edô
* 
	gedô
 = 
mObje˘EdôLi°
[
i
];

284 i‡(
	gedô
->
	gmH™dÀ
 =
h™dÀ
Ë 
edô
;

286  
	gNULL
;

289 
	gMçSîvî
::
ªmoveEdôObje˘
(
MçObje˘H™dÀ
 
h™dÀ
) {

290 
cou¡
 = 
mObje˘EdôLi°
.
size
();

291 
	gi
 = 0; i < 
	gcou¡
; i++) {

292 
Obje˘Edô
* 
	gedô
 = 
mObje˘EdôLi°
[
i
];

293 i‡(
	gedô
->
	gmH™dÀ
 =
h™dÀ
) {

294 
dñëe
 
edô
;

295 
	gmObje˘EdôLi°
.
ªmoveAt
(
i
);

299 
ALOGE
("ObjectEditÇot found inÑemoveEditObject");

302 
	gMçSîvî
::
commôEdô
(
Obje˘Edô
* 
edô
) {

303 
mD©aba£
->
ídSídObje˘
((c⁄° *)
edô
->
mP©h
,Édô->
mH™dÀ
,Édô->
mF‹m©
, 
åue
);

307 
boﬁ
 
	gMçSîvî
::
h™dÀReque°
() {

308 
Muãx
::
Autﬁock
 
autoLock
(
mMuãx
);

310 
MçO≥øti⁄Code
 
	g›î©i⁄
 = 
mReque°
.
gëO≥øti⁄Code
();

311 
MçRe•⁄£Code
 
	gª•⁄£
;

313 
	gmRe•⁄£
.
ª£t
();

315 i‡(
	gmSídObje˘H™dÀ
 !
kInvÆidObje˘H™dÀ
 && 
›î©i⁄
 !
MTP_OPERATION_SEND_OBJECT
) {

317 
ALOGE
("expected SendObjectáfter SendObjectInfo");

318 
	gmSídObje˘H™dÀ
 = 
kInvÆidObje˘H™dÀ
;

321 
	g›î©i⁄
) {

322 
	gMTP_OPERATION_GET_DEVICE_INFO
:

323 
ª•⁄£
 = 
doGëDevi˚Info
();

325 
	gMTP_OPERATION_OPEN_SESSION
:

326 
ª•⁄£
 = 
doO≥nSessi⁄
();

328 
	gMTP_OPERATION_CLOSE_SESSION
:

329 
ª•⁄£
 = 
doClo£Sessi⁄
();

331 
	gMTP_OPERATION_GET_STORAGE_IDS
:

332 
ª•⁄£
 = 
doGëSt‹ageIDs
();

334 
	gMTP_OPERATION_GET_STORAGE_INFO
:

335 
ª•⁄£
 = 
doGëSt‹ageInfo
();

337 
	gMTP_OPERATION_GET_OBJECT_PROPS_SUPPORTED
:

338 
ª•⁄£
 = 
doGëObje˘Pr›sSuµ‹ãd
();

340 
	gMTP_OPERATION_GET_OBJECT_HANDLES
:

341 
ª•⁄£
 = 
doGëObje˘H™dÀs
();

343 
	gMTP_OPERATION_GET_NUM_OBJECTS
:

344 
ª•⁄£
 = 
doGëNumObje˘s
();

346 
	gMTP_OPERATION_GET_OBJECT_REFERENCES
:

347 
ª•⁄£
 = 
doGëObje˘Re„ªn˚s
();

349 
	gMTP_OPERATION_SET_OBJECT_REFERENCES
:

350 
ª•⁄£
 = 
doSëObje˘Re„ªn˚s
();

352 
	gMTP_OPERATION_GET_OBJECT_PROP_VALUE
:

353 
ª•⁄£
 = 
doGëObje˘Pr›VÆue
();

355 
	gMTP_OPERATION_SET_OBJECT_PROP_VALUE
:

356 
ª•⁄£
 = 
doSëObje˘Pr›VÆue
();

358 
	gMTP_OPERATION_GET_DEVICE_PROP_VALUE
:

359 
ª•⁄£
 = 
doGëDevi˚Pr›VÆue
();

361 
	gMTP_OPERATION_SET_DEVICE_PROP_VALUE
:

362 
ª•⁄£
 = 
doSëDevi˚Pr›VÆue
();

364 
	gMTP_OPERATION_RESET_DEVICE_PROP_VALUE
:

365 
ª•⁄£
 = 
doRe£tDevi˚Pr›VÆue
();

367 
	gMTP_OPERATION_GET_OBJECT_PROP_LIST
:

368 
ª•⁄£
 = 
doGëObje˘Pr›Li°
();

370 
	gMTP_OPERATION_GET_OBJECT_INFO
:

371 
ª•⁄£
 = 
doGëObje˘Info
();

373 
	gMTP_OPERATION_GET_OBJECT
:

374 
ª•⁄£
 = 
doGëObje˘
();

376 
	gMTP_OPERATION_GET_THUMB
:

377 
ª•⁄£
 = 
doGëThumb
();

379 
	gMTP_OPERATION_GET_PARTIAL_OBJECT
:

380 
MTP_OPERATION_GET_PARTIAL_OBJECT_64
:

381 
ª•⁄£
 = 
doGëP¨tülObje˘
(
›î©i⁄
);

383 
	gMTP_OPERATION_SEND_OBJECT_INFO
:

384 
ª•⁄£
 = 
doSídObje˘Info
();

386 
	gMTP_OPERATION_SEND_OBJECT
:

387 
ª•⁄£
 = 
doSídObje˘
();

389 
	gMTP_OPERATION_DELETE_OBJECT
:

390 
ª•⁄£
 = 
doDñëeObje˘
();

392 
	gMTP_OPERATION_GET_OBJECT_PROP_DESC
:

393 
ª•⁄£
 = 
doGëObje˘Pr›Desc
();

395 
	gMTP_OPERATION_GET_DEVICE_PROP_DESC
:

396 
ª•⁄£
 = 
doGëDevi˚Pr›Desc
();

398 
	gMTP_OPERATION_SEND_PARTIAL_OBJECT
:

399 
ª•⁄£
 = 
doSídP¨tülObje˘
();

401 
	gMTP_OPERATION_TRUNCATE_OBJECT
:

402 
ª•⁄£
 = 
doTrunˇãObje˘
();

404 
	gMTP_OPERATION_BEGIN_EDIT_OBJECT
:

405 
ª•⁄£
 = 
doBegöEdôObje˘
();

407 
	gMTP_OPERATION_END_EDIT_OBJECT
:

408 
ª•⁄£
 = 
doEndEdôObje˘
();

411 
ALOGE
("gŸ unsuµ‹ãd comm™d %s", 
MçDebug
::
gëO≥øti⁄CodeName
(
›î©i⁄
));

412 
	gª•⁄£
 = 
MTP_RESPONSE_OPERATION_NOT_SUPPORTED
;

416 i‡(
	gª•⁄£
 =
MTP_RESPONSE_TRANSACTION_CANCELLED
)

417  
Ál£
;

418 
	gmRe•⁄£
.
£tRe•⁄£Code
(
ª•⁄£
);

419  
	gåue
;

422 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëDevi˚Info
() {

423 
MçSåögBuf„r
 
°rög
;

424 
	g¥›_vÆue
[
PROPERTY_VALUE_MAX
];

426 
MçObje˘F‹m©Li°
* 
	g∂aybackF‹m©s
 = 
mD©aba£
->
gëSuµ‹ãdPœybackF‹m©s
();

427 
MçObje˘F‹m©Li°
* 
	gˇ±uªF‹m©s
 = 
mD©aba£
->
gëSuµ‹ãdC≠tuªF‹m©s
();

428 
MçDevi˚Pr›îtyLi°
* 
	gdevi˚Pr›îtõs
 = 
mD©aba£
->
gëSuµ‹ãdDevi˚Pr›îtõs
();

431 
	gmD©a
.
putUI¡16
(
MTP_STANDARD_VERSION
);

432 i‡(
	gmPç
) {

433 
	gmD©a
.
putUI¡32
(0);

436 
	gmD©a
.
putUI¡32
(6);

438 
	gmD©a
.
putUI¡16
(
MTP_STANDARD_VERSION
);

439 i‡(
	gmPç
) {

441 
	g°rög
.
£t
("");

444 
	g°rög
.
£t
("microsoft.com: 1.0;ándroid.com: 1.0;");

446 
	gmD©a
.
putSåög
(
°rög
);

447 
	gmD©a
.
putUI¡16
(0);

448 
	gmD©a
.
putAUI¡16
(
kSuµ‹ãdO≥øti⁄Codes
,

449 (
kSuµ‹ãdO≥øti⁄Codes
Ë/ (
uöt16_t
));

450 
	gmD©a
.
putAUI¡16
(
kSuµ‹ãdEvítCodes
,

451 (
kSuµ‹ãdEvítCodes
Ë/ (
uöt16_t
));

452 
	gmD©a
.
putAUI¡16
(
devi˚Pr›îtõs
);

453 
	gmD©a
.
putAUI¡16
(
ˇ±uªF‹m©s
);

454 
	gmD©a
.
putAUI¡16
(
∂aybackF‹m©s
);

457 
°r˝y
(
¥›_vÆue
, "Minelab");

458 
	g°rög
.
£t
(
¥›_vÆue
);

459 
	gmD©a
.
putSåög
(
°rög
);

462 
°r˝y
(
¥›_vÆue
, "Jupiter");

463 
	g°rög
.
£t
(
¥›_vÆue
);

464 
	gmD©a
.
putSåög
(
°rög
);

465 
	g°rög
.
£t
("1.0");

466 
	gmD©a
.
putSåög
(
°rög
);

469 
°r˝y
(
¥›_vÆue
, "1234567890");

470 
	g°rög
.
£t
(
¥›_vÆue
);

471 
	gmD©a
.
putSåög
(
°rög
);

473 
dñëe
 
	g∂aybackF‹m©s
;

474 
dñëe
 
	gˇ±uªF‹m©s
;

475 
dñëe
 
	gdevi˚Pr›îtõs
;

477  
	gMTP_RESPONSE_OK
;

480 
MçRe•⁄£Code
 
	gMçSîvî
::
doO≥nSessi⁄
() {

481 i‡(
mSessi⁄O≥n
) {

482 
mRe•⁄£
.
£tP¨amëî
(1, 
mSessi⁄ID
);

483  
	gMTP_RESPONSE_SESSION_ALREADY_OPEN
;

485 
	gmSessi⁄ID
 = 
mReque°
.
gëP¨amëî
(1);

486 
	gmSessi⁄O≥n
 = 
åue
;

488 
	gmD©aba£
->
£ssi⁄Sèπed
();

490  
	gMTP_RESPONSE_OK
;

493 
MçRe•⁄£Code
 
	gMçSîvî
::
doClo£Sessi⁄
() {

494 i‡(!
mSessi⁄O≥n
)

495  
MTP_RESPONSE_SESSION_NOT_OPEN
;

496 
	gmSessi⁄ID
 = 0;

497 
	gmSessi⁄O≥n
 = 
Ál£
;

498 
	gmD©aba£
->
£ssi⁄Ended
();

499  
	gMTP_RESPONSE_OK
;

502 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëSt‹ageIDs
() {

503 i‡(!
mSessi⁄O≥n
)

504  
MTP_RESPONSE_SESSION_NOT_OPEN
;

506 
	gcou¡
 = 
mSt‹ages
.
size
();

507 
	gmD©a
.
putUI¡32
(
cou¡
);

508 
	gi
 = 0; i < 
	gcou¡
; i++)

509 
	gmD©a
.
putUI¡32
(
mSt‹ages
[
i
]->
gëSt‹ageID
());

511  
	gMTP_RESPONSE_OK
;

514 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëSt‹ageInfo
() {

515 
MçSåögBuf„r
 
°rög
;

517 i‡(!
	gmSessi⁄O≥n
)

518  
	gMTP_RESPONSE_SESSION_NOT_OPEN
;

519 
MçSt‹ageID
 
	gid
 = 
mReque°
.
gëP¨amëî
(1);

520 
MçSt‹age
* 
	g°‹age
 = 
gëSt‹age
(
id
);

521 i‡(!
	g°‹age
)

522  
	gMTP_RESPONSE_INVALID_STORAGE_ID
;

524 
	gmD©a
.
putUI¡16
(
°‹age
->
gëTy≥
());

525 
	gmD©a
.
putUI¡16
(
°‹age
->
gëFûeSy°emTy≥
());

526 
	gmD©a
.
putUI¡16
(
°‹age
->
gëAc˚ssC≠abûôy
());

527 
	gmD©a
.
putUI¡64
(
°‹age
->
gëMaxC≠acôy
());

528 
	gmD©a
.
putUI¡64
(
°‹age
->
gëFªeS∑˚
());

529 
	gmD©a
.
putUI¡32
(1024*1024*1024);

530 
	g°rög
.
£t
(
°‹age
->
gëDes¸ùti⁄
());

531 
	gmD©a
.
putSåög
(
°rög
);

532 
	gmD©a
.
putEm±ySåög
();

534  
	gMTP_RESPONSE_OK
;

537 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëObje˘Pr›sSuµ‹ãd
() {

538 i‡(!
mSessi⁄O≥n
)

539  
MTP_RESPONSE_SESSION_NOT_OPEN
;

540 
MçObje˘F‹m©
 
	gf‹m©
 = 
mReque°
.
gëP¨amëî
(1);

541 
MçObje˘Pr›îtyLi°
* 
	g¥›îtõs
 = 
mD©aba£
->
gëSuµ‹ãdObje˘Pr›îtõs
(
f‹m©
);

542 
	gmD©a
.
putAUI¡16
(
¥›îtõs
);

543 
dñëe
 
	g¥›îtõs
;

544  
	gMTP_RESPONSE_OK
;

547 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëObje˘H™dÀs
() {

548 i‡(!
mSessi⁄O≥n
)

549  
MTP_RESPONSE_SESSION_NOT_OPEN
;

550 
MçSt‹ageID
 
	g°‹ageID
 = 
mReque°
.
gëP¨amëî
(1);

551 
MçObje˘F‹m©
 
	gf‹m©
 = 
mReque°
.
gëP¨amëî
(2);

552 
MçObje˘H™dÀ
 
	g∑ª¡
 = 
mReque°
.
gëP¨amëî
(3);

555 i‡(!
hasSt‹age
(
°‹ageID
))

556  
	gMTP_RESPONSE_INVALID_STORAGE_ID
;

558 
MçObje˘H™dÀLi°
* 
	gh™dÀs
 = 
mD©aba£
->
gëObje˘Li°
(
°‹ageID
, 
f‹m©
, 
∑ª¡
);

559 
	gmD©a
.
putAUI¡32
(
h™dÀs
);

560 
dñëe
 
	gh™dÀs
;

561  
	gMTP_RESPONSE_OK
;

564 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëNumObje˘s
() {

565 i‡(!
mSessi⁄O≥n
)

566  
MTP_RESPONSE_SESSION_NOT_OPEN
;

567 
MçSt‹ageID
 
	g°‹ageID
 = 
mReque°
.
gëP¨amëî
(1);

568 
MçObje˘F‹m©
 
	gf‹m©
 = 
mReque°
.
gëP¨amëî
(2);

569 
MçObje˘H™dÀ
 
	g∑ª¡
 = 
mReque°
.
gëP¨amëî
(3);

571 i‡(!
hasSt‹age
(
°‹ageID
))

572  
	gMTP_RESPONSE_INVALID_STORAGE_ID
;

574 
	gcou¡
 = 
mD©aba£
->
gëNumObje˘s
(
°‹ageID
, 
f‹m©
, 
∑ª¡
);

575 i‡(
	gcou¡
 >= 0) {

576 
mRe•⁄£
.
£tP¨amëî
(1, 
cou¡
);

577  
	gMTP_RESPONSE_OK
;

579 
	gmRe•⁄£
.
£tP¨amëî
(1, 0);

580  
	gMTP_RESPONSE_INVALID_OBJECT_HANDLE
;

584 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëObje˘Re„ªn˚s
() {

585 i‡(!
mSessi⁄O≥n
)

586  
MTP_RESPONSE_SESSION_NOT_OPEN
;

587 i‡(!
hasSt‹age
())

588  
	gMTP_RESPONSE_INVALID_OBJECT_HANDLE
;

589 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

592 
MçObje˘H™dÀLi°
* 
	gh™dÀs
 = 
mD©aba£
->
gëObje˘Re„ªn˚s
(
h™dÀ
);

593 i‡(
	gh™dÀs
) {

594 
	gmD©a
.
putAUI¡32
(
h™dÀs
);

595 
dñëe
 
	gh™dÀs
;

597 
	gmD©a
.
putEm±yAºay
();

599  
	gMTP_RESPONSE_OK
;

602 
MçRe•⁄£Code
 
	gMçSîvî
::
doSëObje˘Re„ªn˚s
() {

603 i‡(!
mSessi⁄O≥n
)

604  
MTP_RESPONSE_SESSION_NOT_OPEN
;

605 i‡(!
hasSt‹age
())

606  
	gMTP_RESPONSE_INVALID_OBJECT_HANDLE
;

607 
MçSt‹ageID
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

609 
MçObje˘H™dÀLi°
* 
	gª„ªn˚s
 = 
mD©a
.
gëAUI¡32
();

610 
MçRe•⁄£Code
 
	gªsu…
 = 
mD©aba£
->
£tObje˘Re„ªn˚s
(
h™dÀ
, 
ª„ªn˚s
);

611 
dñëe
 
	gª„ªn˚s
;

612  
	gªsu…
;

615 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëObje˘Pr›VÆue
() {

616 i‡(!
hasSt‹age
())

617  
MTP_RESPONSE_INVALID_OBJECT_HANDLE
;

618 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

619 
MçObje˘Pr›îty
 
	g¥›îty
 = 
mReque°
.
gëP¨amëî
(2);

620 
ALOGV
("GëObje˘Pr›VÆuê%d %s\n", 
h™dÀ
,

621 
MçDebug
::
gëObje˘Pr›CodeName
(
¥›îty
));

623  
	gmD©aba£
->
gëObje˘Pr›îtyVÆue
(
h™dÀ
, 
¥›îty
, 
mD©a
);

626 
MçRe•⁄£Code
 
	gMçSîvî
::
doSëObje˘Pr›VÆue
() {

627 i‡(!
hasSt‹age
())

628  
MTP_RESPONSE_INVALID_OBJECT_HANDLE
;

629 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

630 
MçObje˘Pr›îty
 
	g¥›îty
 = 
mReque°
.
gëP¨amëî
(2);

631 
ALOGV
("SëObje˘Pr›VÆuê%d %s\n", 
h™dÀ
,

632 
MçDebug
::
gëObje˘Pr›CodeName
(
¥›îty
));

634  
	gmD©aba£
->
£tObje˘Pr›îtyVÆue
(
h™dÀ
, 
¥›îty
, 
mD©a
);

637 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëDevi˚Pr›VÆue
() {

638 
MçDevi˚Pr›îty
 
¥›îty
 = 
mReque°
.
gëP¨amëî
(1);

639 
ALOGV
("GetDevicePropValue %s\n",

640 
MçDebug
::
gëDevi˚Pr›CodeName
(
¥›îty
));

642  
	gmD©aba£
->
gëDevi˚Pr›îtyVÆue
(
¥›îty
, 
mD©a
);

645 
MçRe•⁄£Code
 
	gMçSîvî
::
doSëDevi˚Pr›VÆue
() {

646 
MçDevi˚Pr›îty
 
¥›îty
 = 
mReque°
.
gëP¨amëî
(1);

647 
ALOGV
("SetDevicePropValue %s\n",

648 
MçDebug
::
gëDevi˚Pr›CodeName
(
¥›îty
));

650  
	gmD©aba£
->
£tDevi˚Pr›îtyVÆue
(
¥›îty
, 
mD©a
);

653 
MçRe•⁄£Code
 
	gMçSîvî
::
doRe£tDevi˚Pr›VÆue
() {

654 
MçDevi˚Pr›îty
 
¥›îty
 = 
mReque°
.
gëP¨amëî
(1);

655 
ALOGV
("ResetDevicePropValue %s\n",

656 
MçDebug
::
gëDevi˚Pr›CodeName
(
¥›îty
));

658  
	gmD©aba£
->
ª£tDevi˚Pr›îty
(
¥›îty
);

661 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëObje˘Pr›Li°
() {

662 i‡(!
hasSt‹age
())

663  
MTP_RESPONSE_INVALID_OBJECT_HANDLE
;

665 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

667 
uöt32_t
 
	gf‹m©
 = 
mReque°
.
gëP¨amëî
(2);

668 
uöt32_t
 
	g¥›îty
 = 
mReque°
.
gëP¨amëî
(3);

669 
	ggroupCode
 = 
mReque°
.
gëP¨amëî
(4);

670 
	gdïth
 = 
mReque°
.
gëP¨amëî
(5);

671 
ALOGV
("GetObjectPropList %d format: %sÖroperty: %s group: %d depth: %d\n",

672 
h™dÀ
, 
MçDebug
::
gëF‹m©CodeName
(
f‹m©
),

673 
MçDebug
::
gëObje˘Pr›CodeName
(
¥›îty
), 
groupCode
, 
dïth
);

675  
	gmD©aba£
->
gëObje˘Pr›îtyLi°
(
h™dÀ
, 
f‹m©
, 
¥›îty
, 
groupCode
, 
dïth
, 
mD©a
);

678 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëObje˘Info
() {

679 i‡(!
hasSt‹age
())

680  
MTP_RESPONSE_INVALID_OBJECT_HANDLE
;

681 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

682 
MçObje˘Info
 
öfo
(
h™dÀ
);

683 
MçRe•⁄£Code
 
	gªsu…
 = 
mD©aba£
->
gëObje˘Info
(
h™dÀ
, 
öfo
);

684 i‡(
	gªsu…
 =
MTP_RESPONSE_OK
) {

685 
d©e
[20];

687 
	gmD©a
.
putUI¡32
(
öfo
.
mSt‹ageID
);

688 
	gmD©a
.
putUI¡16
(
öfo
.
mF‹m©
);

689 
	gmD©a
.
putUI¡16
(
öfo
.
mPrŸe˘i⁄Sètus
);

692 
uöt32_t
 
	gsize
 = 
öfo
.
mCom¥es£dSize
;

693 
Obje˘Edô
* 
	gedô
 = 
gëEdôObje˘
(
h™dÀ
);

694 i‡(
	gedô
)

695 
	gsize
 = (
edô
->
mSize
 > 0xFFFFFFFFLL ? 0xFFFFFFFF : (
uöt32_t
)edit->mSize);

696 
	gmD©a
.
putUI¡32
(
size
);

698 
	gmD©a
.
putUI¡16
(
öfo
.
mThumbF‹m©
);

699 
	gmD©a
.
putUI¡32
(
öfo
.
mThumbCom¥es£dSize
);

700 
	gmD©a
.
putUI¡32
(
öfo
.
mThumbPixWidth
);

701 
	gmD©a
.
putUI¡32
(
öfo
.
mThumbPixHeight
);

702 
	gmD©a
.
putUI¡32
(
öfo
.
mImagePixWidth
);

703 
	gmD©a
.
putUI¡32
(
öfo
.
mImagePixHeight
);

704 
	gmD©a
.
putUI¡32
(
öfo
.
mImagePixDïth
);

705 
	gmD©a
.
putUI¡32
(
öfo
.
mP¨ít
);

706 
	gmD©a
.
putUI¡16
(
öfo
.
mAssocüti⁄Ty≥
);

707 
	gmD©a
.
putUI¡32
(
öfo
.
mAssocüti⁄Desc
);

708 
	gmD©a
.
putUI¡32
(
öfo
.
mSequí˚Numbî
);

709 
	gmD©a
.
putSåög
(
öfo
.
mName
);

710 
	gmD©a
.
putEm±ySåög
();

711 
f‹m©D©eTime
(
öfo
.
mD©eModifõd
, 
d©e
, (date));

712 
	gmD©a
.
putSåög
(
d©e
);

713 
	gmD©a
.
putEm±ySåög
();

715  
	gªsu…
;

718 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëObje˘
() {

719 i‡(!
hasSt‹age
())

720  
MTP_RESPONSE_INVALID_OBJECT_HANDLE
;

721 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

722 
MçSåög
 
	g∑thBuf
;

723 
öt64_t
 
	gfûeLígth
;

724 
MçObje˘F‹m©
 
	gf‹m©
;

725 
	gªsu…
 = 
mD©aba£
->
gëObje˘FûeP©h
(
h™dÀ
, 
∑thBuf
, 
fûeLígth
, 
f‹m©
);

726 i‡(
	gªsu…
 !
MTP_RESPONSE_OK
)

727  
ªsu…
;

729 c⁄° * 
	gfûeP©h
 = (c⁄° *)
∑thBuf
;

730 
mç_fûe_ønge
 
	gm‰
;

731 
	gm‰
.
	gfd
 = 
›í
(
fûeP©h
, 
O_RDONLY
);

732 i‡(
	gm‰
.
	gfd
 < 0) {

733  
	gMTP_RESPONSE_GENERAL_ERROR
;

735 
	gm‰
.
	goff£t
 = 0;

736 
	gm‰
.
	gÀngth
 = 
fûeLígth
;

737 
	gm‰
.
	gcomm™d
 = 
mReque°
.
gëO≥øti⁄Code
();

738 
	gm‰
.
	gå™ß˘i⁄_id
 = 
mReque°
.
gëTønß˘i⁄ID
();

741 
	gªt
 = 
io˘l
(
mFD
, 
MTP_SEND_FILE_WITH_HEADER
, ()&
m‰
);

742 
ALOGV
("MTP_SEND_FILE_WITH_HEADERÑëu∫ed %d\n", 
ªt
);

743 
˛o£
(
m‰
.
fd
);

744 i‡(
	gªt
 < 0) {

745 i‡(
	gî∫o
 =
ECANCELED
)

746  
MTP_RESPONSE_TRANSACTION_CANCELLED
;

748  
	gMTP_RESPONSE_GENERAL_ERROR
;

750  
	gMTP_RESPONSE_OK
;

753 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëThumb
() {

754 
MçObje˘H™dÀ
 
h™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

755 
size_t
 
	gthumbSize
;

756 * 
	gthumb
 = 
mD©aba£
->
gëThumb«û
(
h™dÀ
, 
thumbSize
);

757 i‡(
	gthumb
) {

759 
	gmD©a
.
£tO≥øti⁄Code
(
mReque°
.
gëO≥øti⁄Code
());

760 
	gmD©a
.
£tTønß˘i⁄ID
(
mReque°
.
gëTønß˘i⁄ID
());

761 
	gmD©a
.
wrôeD©a
(
mFD
, 
thumb
, 
thumbSize
);

762 
‰ì
(
thumb
);

763  
	gMTP_RESPONSE_OK
;

765  
	gMTP_RESPONSE_GENERAL_ERROR
;

769 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëP¨tülObje˘
(
MçO≥øti⁄Code
 
›î©i⁄
) {

770 i‡(!
hasSt‹age
())

771  
MTP_RESPONSE_INVALID_OBJECT_HANDLE
;

772 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

773 
uöt64_t
 
	goff£t
;

774 
uöt32_t
 
	gÀngth
;

775 
	goff£t
 = 
mReque°
.
gëP¨amëî
(2);

776 i‡(
	g›î©i⁄
 =
MTP_OPERATION_GET_PARTIAL_OBJECT_64
) {

778 
uöt64_t
 
off£t2
 = 
mReque°
.
gëP¨amëî
(3);

779 
	goff£t
 = 
off£t
 | (
off£t2
 << 32);

780 
	gÀngth
 = 
mReque°
.
gëP¨amëî
(4);

783 
	gÀngth
 = 
mReque°
.
gëP¨amëî
(3);

785 
MçSåög
 
	g∑thBuf
;

786 
öt64_t
 
	gfûeLígth
;

787 
MçObje˘F‹m©
 
	gf‹m©
;

788 
	gªsu…
 = 
mD©aba£
->
gëObje˘FûeP©h
(
h™dÀ
, 
∑thBuf
, 
fûeLígth
, 
f‹m©
);

789 i‡(
	gªsu…
 !
MTP_RESPONSE_OK
)

790  
ªsu…
;

791 i‡(
	goff£t
 + 
	gÀngth
 > 
	gfûeLígth
)

792 
	gÀngth
 = 
fûeLígth
 - 
off£t
;

794 c⁄° * 
	gfûeP©h
 = (c⁄° *)
∑thBuf
;

795 
mç_fûe_ønge
 
	gm‰
;

796 
	gm‰
.
	gfd
 = 
›í
(
fûeP©h
, 
O_RDONLY
);

797 i‡(
	gm‰
.
	gfd
 < 0) {

798  
	gMTP_RESPONSE_GENERAL_ERROR
;

800 
	gm‰
.
	goff£t
 = 
off£t
;

801 
	gm‰
.
	gÀngth
 = 
Àngth
;

802 
	gm‰
.
	gcomm™d
 = 
mReque°
.
gëO≥øti⁄Code
();

803 
	gm‰
.
	gå™ß˘i⁄_id
 = 
mReque°
.
gëTønß˘i⁄ID
();

804 
	gmRe•⁄£
.
£tP¨amëî
(1, 
Àngth
);

807 
	gªt
 = 
io˘l
(
mFD
, 
MTP_SEND_FILE_WITH_HEADER
, ()&
m‰
);

808 
ALOGV
("MTP_SEND_FILE_WITH_HEADERÑëu∫ed %d\n", 
ªt
);

809 
˛o£
(
m‰
.
fd
);

810 i‡(
	gªt
 < 0) {

811 i‡(
	gî∫o
 =
ECANCELED
)

812  
MTP_RESPONSE_TRANSACTION_CANCELLED
;

814  
	gMTP_RESPONSE_GENERAL_ERROR
;

816  
	gMTP_RESPONSE_OK
;

819 
MçRe•⁄£Code
 
	gMçSîvî
::
doSídObje˘Info
() {

820 
MçSåög
 
∑th
;

821 
MçSt‹ageID
 
	g°‹ageID
 = 
mReque°
.
gëP¨amëî
(1);

822 
MçSt‹age
* 
	g°‹age
 = 
gëSt‹age
(
°‹ageID
);

823 
MçObje˘H™dÀ
 
	g∑ª¡
 = 
mReque°
.
gëP¨amëî
(2);

824 i‡(!
	g°‹age
)

825  
	gMTP_RESPONSE_INVALID_STORAGE_ID
;

828 i‡(
	g∑ª¡
 =
MTP_PARENT_ROOT
) {

829 
∑th
 = 
°‹age
->
gëP©h
();

830 
	g∑ª¡
 = 0;

832 
öt64_t
 
	gÀngth
;

833 
MçObje˘F‹m©
 
	gf‹m©
;

834 
	gªsu…
 = 
mD©aba£
->
gëObje˘FûeP©h
(
∑ª¡
, 
∑th
, 
Àngth
, 
f‹m©
);

835 i‡(
	gªsu…
 !
MTP_RESPONSE_OK
)

836  
ªsu…
;

837 i‡(
	gf‹m©
 !
MTP_FORMAT_ASSOCIATION
)

838  
MTP_RESPONSE_INVALID_PARENT_OBJECT
;

842 
	gmD©a
.
gëUI¡32
();

843 
MçObje˘F‹m©
 
	gf‹m©
 = 
mD©a
.
gëUI¡16
();

844 
	gmD©a
.
gëUI¡16
();

845 
	gmSídObje˘FûeSize
 = 
mD©a
.
gëUI¡32
();

846 
	gmD©a
.
gëUI¡16
();

847 
	gmD©a
.
gëUI¡32
();

848 
	gmD©a
.
gëUI¡32
();

849 
	gmD©a
.
gëUI¡32
();

850 
	gmD©a
.
gëUI¡32
();

851 
	gmD©a
.
gëUI¡32
();

852 
	gmD©a
.
gëUI¡32
();

853 
	gmD©a
.
gëUI¡32
();

854 
uöt16_t
 
	gassocüti⁄Ty≥
 = 
mD©a
.
gëUI¡16
();

855 
uöt32_t
 
	gassocüti⁄Desc
 = 
mD©a
.
gëUI¡32
();

856 
	gmD©a
.
gëUI¡32
();

857 
MçSåögBuf„r
 
	g«me
, 
	g¸óãd
, 
	gmodifõd
;

858 
	gmD©a
.
gëSåög
(
«me
);

859 
	gmD©a
.
gëSåög
(
¸óãd
);

860 
	gmD©a
.
gëSåög
(
modifõd
);

863 
ALOGV
("«me: %†f‹m©: %04X\n", (c⁄° *)
«me
, 
f‹m©
);

864 
time_t
 
	gmodifõdTime
;

865 i‡(!
∑r£D©eTime
(
modifõd
, 
modifõdTime
))

866 
	gmodifõdTime
 = 0;

868 i‡(
	g∑th
[
∑th
.
size
() - 1] != '/')

869 
∑th
 += "/";

870 
	g∑th
 +(c⁄° *)
«me
;

873 i‡(
	gmSídObje˘FûeSize
 > 
	g°‹age
->
gëFªeS∑˚
())

874  
	gMTP_RESPONSE_STORAGE_FULL
;

875 
uöt64_t
 
	gmaxFûeSize
 = 
°‹age
->
gëMaxFûeSize
();

877 i‡(
	gmaxFûeSize
 != 0) {

880 i‡(
mSídObje˘FûeSize
 > 
maxFûeSize
 || mSendObjectFileSize == 0xFFFFFFFF)

881  
MTP_RESPONSE_OBJECT_TOO_LARGE
;

884 
ALOGD
("∑th: %†∑ª¡: %d st‹ageID: %08X", (c⁄° *)
∑th
, 
∑ª¡
, 
°‹ageID
);

885 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mD©aba£
->
begöSídObje˘
((c⁄° *)
∑th
,

886 
f‹m©
, 
∑ª¡
, 
°‹ageID
, 
mSídObje˘FûeSize
, 
modifõdTime
);

887 i‡(
	gh™dÀ
 =
kInvÆidObje˘H™dÀ
) {

888  
MTP_RESPONSE_GENERAL_ERROR
;

891 i‡(
	gf‹m©
 =
MTP_FORMAT_ASSOCIATION
) {

892 
mode_t
 
mask
 = 
umask
(0);

893 
	gªt
 = 
mkdú
((c⁄° *)
∑th
, 
mDúe˘‹yPîmissi⁄
);

894 
umask
(
mask
);

895 i‡(
	gªt
 &&Ñë !-
EEXIST
)

896  
MTP_RESPONSE_GENERAL_ERROR
;

897 
chown
((c⁄° *)
∑th
, 
gëuid
(), 
mFûeGroup
);

900 
	gmD©aba£
->
ídSídObje˘
(
∑th
, 
h™dÀ
, 
MTP_FORMAT_ASSOCIATION
, 
MTP_RESPONSE_OK
);

902 
	gmSídObje˘FûeP©h
 = 
∑th
;

904 
	gmSídObje˘H™dÀ
 = 
h™dÀ
;

905 
	gmSídObje˘F‹m©
 = 
f‹m©
;

908 
	gmRe•⁄£
.
£tP¨amëî
(1, 
°‹ageID
);

909 
	gmRe•⁄£
.
£tP¨amëî
(2, 
∑ª¡
);

910 
	gmRe•⁄£
.
£tP¨amëî
(3, 
h™dÀ
);

912  
	gMTP_RESPONSE_OK
;

915 
MçRe•⁄£Code
 
	gMçSîvî
::
doSídObje˘
() {

916 i‡(!
hasSt‹age
())

917  
MTP_RESPONSE_GENERAL_ERROR
;

918 
MçRe•⁄£Code
 
	gªsu…
 = 
MTP_RESPONSE_OK
;

919 
mode_t
 
	gmask
;

920 
	gªt
, 
	göôülD©a
;

922 i‡(
	gmSídObje˘H™dÀ
 =
kInvÆidObje˘H™dÀ
) {

923 
ALOGE
("Expected SendObjectInfo before SendObject");

924 
	gªsu…
 = 
MTP_RESPONSE_NO_VALID_OBJECT_INFO
;

925 
	gd⁄e
;

929 
	gªt
 = 
mD©a
.
ªad
(
mFD
);

930 i‡(
	gªt
 < 
	gMTP_CONTAINER_HEADER_SIZE
) {

931 
	gªsu…
 = 
MTP_RESPONSE_GENERAL_ERROR
;

932 
	gd⁄e
;

934 
	göôülD©a
 = 
ªt
 - 
MTP_CONTAINER_HEADER_SIZE
;

936 
mç_fûe_ønge
 
	gm‰
;

937 
	gm‰
.
	gfd
 = 
›í
(
mSídObje˘FûeP©h
, 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 
S_IRUSR
 | 
S_IWUSR
);

938 i‡(
	gm‰
.
	gfd
 < 0) {

939 
	gªsu…
 = 
MTP_RESPONSE_GENERAL_ERROR
;

940 
	gd⁄e
;

942 
fchown
(
m‰
.
fd
, 
gëuid
(), 
mFûeGroup
);

944 
	gmask
 = 
umask
(0);

945 
fchmod
(
m‰
.
fd
, 
mFûePîmissi⁄
);

946 
umask
(
mask
);

948 i‡(
	göôülD©a
 > 0)

949 
	gªt
 = 
wrôe
(
m‰
.
fd
, 
mD©a
.
gëD©a
(), 
öôülD©a
);

951 i‡(
	gmSídObje˘FûeSize
 - 
	göôülD©a
 > 0) {

952 
	gm‰
.
	goff£t
 = 
öôülD©a
;

953 i‡(
	gmSídObje˘FûeSize
 == 0xFFFFFFFF) {

955 
m‰
.
Àngth
 = 0xFFFFFFFF;

957 
	gm‰
.
	gÀngth
 = 
mSídObje˘FûeSize
 - 
öôülD©a
;

960 
ALOGV
("ª˚ivög %s\n", (c⁄° *)
mSídObje˘FûeP©h
);

962 
	gªt
 = 
io˘l
(
mFD
, 
MTP_RECEIVE_FILE
, ()&
m‰
);

963 
ALOGV
("MTP_RECEIVE_FILEÑëu∫ed %d\n", 
ªt
);

965 
˛o£
(
m‰
.
fd
);

967 i‡(
	gªt
 < 0) {

968 
u∆ök
(
mSídObje˘FûeP©h
);

969 i‡(
	gî∫o
 =
ECANCELED
)

970 
ªsu…
 = 
MTP_RESPONSE_TRANSACTION_CANCELLED
;

972 
	gªsu…
 = 
MTP_RESPONSE_GENERAL_ERROR
;

975 
	gd⁄e
:

977 
mD©a
.
ª£t
();

979 
	gmD©aba£
->
ídSídObje˘
(
mSídObje˘FûeP©h
, 
mSídObje˘H™dÀ
, 
mSídObje˘F‹m©
,

980 
ªsu…
 =
MTP_RESPONSE_OK
);

981 
	gmSídObje˘H™dÀ
 = 
kInvÆidObje˘H™dÀ
;

982 
	gmSídObje˘F‹m©
 = 0;

983  
	gªsu…
;

986 
dñëeRecursive
(c⁄° * 
∑th
) {

987 
	g∑thbuf
[
PATH_MAX
];

988 
	g∑thLígth
 = 
°æí
(
∑th
);

989 i‡(
	g∑thLígth
 >(
∑thbuf
) - 1) {

990 
ALOGE
("∑thÅoÿl⁄g: %s\n", 
∑th
);

992 
°r˝y
(
∑thbuf
, 
∑th
);

993 i‡(
	g∑thbuf
[
∑thLígth
 - 1] != '/') {

994 
∑thbuf
[
∑thLígth
++] = '/';

996 * 
	gfûeSpŸ
 = 
∑thbuf
 + 
∑thLígth
;

997 
	g∑thRemaöög
 = (
∑thbuf
Ë- 
∑thLígth
 - 1;

999 
DIR
* 
	gdú
 = 
›ídú
(
∑th
);

1000 i‡(!
	gdú
) {

1001 
ALOGE
("›ídú %†Áûed: %s", 
∑th
, 
°ªº‹
(
î∫o
));

1005 
dúít
* 
	gíåy
;

1006 (
	gíåy
 = 
ªaddú
(
dú
))) {

1007 c⁄° * 
«me
 = 
íåy
->
d_«me
;

1010 i‡(
	g«me
[0] ='.' && (
«me
[1] == 0 || (name[1] == '.' &&Çame[2] == 0))) {

1014 
	g«meLígth
 = 
°æí
(
«me
);

1015 i‡(
	g«meLígth
 > 
	g∑thRemaöög
) {

1016 
ALOGE
("∑th %s/%†toÿl⁄g\n", 
∑th
, 
«me
);

1019 
°r˝y
(
fûeSpŸ
, 
«me
);

1021 
	gty≥
 = 
íåy
->
d_ty≥
;

1022 i‡(
	gíåy
->
	gd_ty≥
 =
DT_DIR
) {

1023 
dñëeRecursive
(
∑thbuf
);

1024 
rmdú
(
∑thbuf
);

1026 
u∆ök
(
∑thbuf
);

1029 
˛o£dú
(
dú
);

1032 
dñëeP©h
(c⁄° * 
∑th
) {

1033 
°©
 
	g°©buf
;

1034 i‡(
°©
(
∑th
, &
°©buf
) == 0) {

1035 i‡(
S_ISDIR
(
°©buf
.
°_mode
)) {

1036 
dñëeRecursive
(
∑th
);

1037 
rmdú
(
∑th
);

1039 
u∆ök
(
∑th
);

1042 
ALOGE
("dñëeP©h sèàÁûed f‹ %s: %s", 
∑th
, 
°ªº‹
(
î∫o
));

1046 
MçRe•⁄£Code
 
	gMçSîvî
::
doDñëeObje˘
() {

1047 i‡(!
hasSt‹age
())

1048  
MTP_RESPONSE_INVALID_OBJECT_HANDLE
;

1049 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

1050 
MçObje˘F‹m©
 
	gf‹m©
 = 
mReque°
.
gëP¨amëî
(2);

1054 
MçSåög
 
	gfûeP©h
;

1055 
öt64_t
 
	gfûeLígth
;

1056 
	gªsu…
 = 
mD©aba£
->
gëObje˘FûeP©h
(
h™dÀ
, 
fûeP©h
, 
fûeLígth
, 
f‹m©
);

1057 i‡(
	gªsu…
 =
MTP_RESPONSE_OK
) {

1058 
ALOGV
("dñëög %s", (c⁄° *)
fûeP©h
);

1059 
	gªsu…
 = 
mD©aba£
->
dñëeFûe
(
h™dÀ
);

1061 i‡(
	gªsu…
 =
MTP_RESPONSE_OK
) {

1062 
dñëeP©h
((c⁄° *)
fûeP©h
);

1066  
	gªsu…
;

1069 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëObje˘Pr›Desc
() {

1070 
MçObje˘Pr›îty
 
¥›Code
 = 
mReque°
.
gëP¨amëî
(1);

1071 
MçObje˘F‹m©
 
	gf‹m©
 = 
mReque°
.
gëP¨amëî
(2);

1072 
ALOGV
("GëObje˘Pr›Des¯%†%s\n", 
MçDebug
::
gëObje˘Pr›CodeName
(
¥›Code
),

1073 
MçDebug
::
gëF‹m©CodeName
(
f‹m©
));

1074 
MçPr›îty
* 
	g¥›îty
 = 
mD©aba£
->
gëObje˘Pr›îtyDesc
(
¥›Code
, 
f‹m©
);

1075 i‡(!
	g¥›îty
)

1076  
	gMTP_RESPONSE_OBJECT_PROP_NOT_SUPPORTED
;

1077 
	g¥›îty
->
wrôe
(
mD©a
);

1078 
dñëe
 
	g¥›îty
;

1079  
	gMTP_RESPONSE_OK
;

1082 
MçRe•⁄£Code
 
	gMçSîvî
::
doGëDevi˚Pr›Desc
() {

1083 
MçDevi˚Pr›îty
 
¥›Code
 = 
mReque°
.
gëP¨amëî
(1);

1084 
ALOGV
("GëDevi˚Pr›Des¯%s\n", 
MçDebug
::
gëDevi˚Pr›CodeName
(
¥›Code
));

1085 
MçPr›îty
* 
	g¥›îty
 = 
mD©aba£
->
gëDevi˚Pr›îtyDesc
(
¥›Code
);

1086 i‡(!
	g¥›îty
)

1087  
	gMTP_RESPONSE_DEVICE_PROP_NOT_SUPPORTED
;

1088 
	g¥›îty
->
wrôe
(
mD©a
);

1089 
dñëe
 
	g¥›îty
;

1090  
	gMTP_RESPONSE_OK
;

1093 
MçRe•⁄£Code
 
	gMçSîvî
::
doSídP¨tülObje˘
() {

1094 i‡(!
hasSt‹age
())

1095  
MTP_RESPONSE_INVALID_OBJECT_HANDLE
;

1096 
MçObje˘H™dÀ
 
	gh™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

1097 
uöt64_t
 
	goff£t
 = 
mReque°
.
gëP¨amëî
(2);

1098 
uöt64_t
 
	goff£t2
 = 
mReque°
.
gëP¨amëî
(3);

1099 
	goff£t
 = 
off£t
 | (
off£t2
 << 32);

1100 
uöt32_t
 
	gÀngth
 = 
mReque°
.
gëP¨amëî
(4);

1102 
Obje˘Edô
* 
	gedô
 = 
gëEdôObje˘
(
h™dÀ
);

1103 i‡(!
	gedô
) {

1104 
ALOGE
("objectÇot open forÉdit in doSendPartialObject");

1105  
	gMTP_RESPONSE_GENERAL_ERROR
;

1109 i‡(
	goff£t
 > 
	gedô
->
	gmSize
) {

1110 
ALOGD
("wrôögÖa°Énd o‡obje˘, off£t: %Œd,Édô->mSize: %Œd", 
off£t
, 
edô
->
mSize
);

1111  
	gMTP_RESPONSE_GENERAL_ERROR
;

1114 c⁄° * 
	gfûeP©h
 = (c⁄° *)
edô
->
mP©h
;

1115 
ALOGV
("ª˚ivögÖ¨tü»%†%Œd %Œd\n", 
fûeP©h
, 
off£t
, 
Àngth
);

1118 
	gªt
 = 
mD©a
.
ªad
(
mFD
);

1119 i‡(
	gªt
 < 
	gMTP_CONTAINER_HEADER_SIZE
)

1120  
	gMTP_RESPONSE_GENERAL_ERROR
;

1121 
	göôülD©a
 = 
ªt
 - 
MTP_CONTAINER_HEADER_SIZE
;

1123 i‡(
	göôülD©a
 > 0) {

1124 
	gªt
 = 
wrôe
(
edô
->
mFD
, 
mD©a
.
gëD©a
(), 
öôülD©a
);

1125 
	goff£t
 +
öôülD©a
;

1126 
	gÀngth
 -
öôülD©a
;

1129 i‡(
	gÀngth
 > 0) {

1130 
mç_fûe_ønge
 
	gm‰
;

1131 
	gm‰
.
	gfd
 = 
edô
->
mFD
;

1132 
	gm‰
.
	goff£t
 = 
off£t
;

1133 
	gm‰
.
	gÀngth
 = 
Àngth
;

1136 
	gªt
 = 
io˘l
(
mFD
, 
MTP_RECEIVE_FILE
, ()&
m‰
);

1137 
ALOGV
("MTP_RECEIVE_FILEÑëu∫ed %d", 
ªt
);

1139 i‡(
	gªt
 < 0) {

1140 
	gmRe•⁄£
.
£tP¨amëî
(1, 0);

1141 i‡(
	gî∫o
 =
ECANCELED
)

1142  
MTP_RESPONSE_TRANSACTION_CANCELLED
;

1144  
	gMTP_RESPONSE_GENERAL_ERROR
;

1148 
	gmD©a
.
ª£t
();

1149 
	gmRe•⁄£
.
£tP¨amëî
(1, 
Àngth
);

1150 
uöt64_t
 
	gíd
 = 
off£t
 + 
Àngth
;

1151 i‡(
	gíd
 > 
	gedô
->
	gmSize
) {

1152 
	gedô
->
	gmSize
 = 
íd
;

1154  
	gMTP_RESPONSE_OK
;

1157 
MçRe•⁄£Code
 
	gMçSîvî
::
doTrunˇãObje˘
() {

1158 
MçObje˘H™dÀ
 
h™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

1159 
Obje˘Edô
* 
	gedô
 = 
gëEdôObje˘
(
h™dÀ
);

1160 i‡(!
	gedô
) {

1161 
ALOGE
("objectÇot open forÉdit in doTruncateObject");

1162  
	gMTP_RESPONSE_GENERAL_ERROR
;

1165 
uöt64_t
 
	goff£t
 = 
mReque°
.
gëP¨amëî
(2);

1166 
uöt64_t
 
	goff£t2
 = 
mReque°
.
gëP¨amëî
(3);

1167 
	goff£t
 |(
off£t2
 << 32);

1168 i‡(
·runˇã
(
edô
->
mFD
, 
off£t
) != 0) {

1169  
MTP_RESPONSE_GENERAL_ERROR
;

1171 
	gedô
->
	gmSize
 = 
off£t
;

1172  
	gMTP_RESPONSE_OK
;

1176 
MçRe•⁄£Code
 
	gMçSîvî
::
doBegöEdôObje˘
() {

1177 
MçObje˘H™dÀ
 
h™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

1178 i‡(
gëEdôObje˘
(
h™dÀ
)) {

1179 
ALOGE
("objectálready open forÉdit in doBeginEditObject");

1180  
	gMTP_RESPONSE_GENERAL_ERROR
;

1183 
MçSåög
 
	g∑th
;

1184 
öt64_t
 
	gfûeLígth
;

1185 
MçObje˘F‹m©
 
	gf‹m©
;

1186 
	gªsu…
 = 
mD©aba£
->
gëObje˘FûeP©h
(
h™dÀ
, 
∑th
, 
fûeLígth
, 
f‹m©
);

1187 i‡(
	gªsu…
 !
MTP_RESPONSE_OK
)

1188  
ªsu…
;

1190 
	gfd
 = 
›í
((c⁄° *)
∑th
, 
O_RDWR
 | 
O_EXCL
);

1191 i‡(
	gfd
 < 0) {

1192 
ALOGE
("›í faûed f‹ %†ö doBegöEdôObje˘ (%d)", (c⁄° *)
∑th
, 
î∫o
);

1193  
	gMTP_RESPONSE_GENERAL_ERROR
;

1196 
addEdôObje˘
(
h™dÀ
, 
∑th
, 
fûeLígth
, 
f‹m©
, 
fd
);

1197  
	gMTP_RESPONSE_OK
;

1200 
MçRe•⁄£Code
 
	gMçSîvî
::
doEndEdôObje˘
() {

1201 
MçObje˘H™dÀ
 
h™dÀ
 = 
mReque°
.
gëP¨amëî
(1);

1202 
Obje˘Edô
* 
	gedô
 = 
gëEdôObje˘
(
h™dÀ
);

1203 i‡(!
	gedô
) {

1204 
ALOGE
("objectÇot open forÉdit in doEndEditObject");

1205  
	gMTP_RESPONSE_GENERAL_ERROR
;

1208 
commôEdô
(
edô
);

1209 
ªmoveEdôObje˘
(
h™dÀ
);

1210  
	gMTP_RESPONSE_OK
;

	@src/MtpServer.h

17 #i‚de‡
_MTP_SERVER_H


18 
	#_MTP_SERVER_H


	)

20 
	~"MçReque°Packë.h
"

21 
	~"MçD©aPackë.h
"

22 
	~"MçRe•⁄£Packë.h
"

23 
	~"MçEvítPackë.h
"

24 
	~"mç.h
"

25 
	~"MçUtûs.h
"

28 
	~<utûs/Muãx.h
>

30 
	~<uni°d.h
>

33 
	#ALOGD
 
¥ötf


	)

34 
	#ALOGE
 
¥ötf


	)

35 
	#ALOGV
 
¥ötf


	)

36 
	~<°dio.h
>

37 
	#PROPERTY_VALUE_MAX
 92

	)

39 
«me•a˚
 
	g™droid
 {

41 
˛ass
 
	gMçD©aba£
;

42 
˛ass
 
	gMçSt‹age
;

44 ˛as†
	cMçSîvî
 {

46 
	g¥iv©e
:

48 
mFD
;

50 
MçD©aba£
* 
	gmD©aba£
;

53 
boﬁ
 
	gmPç
;

56 
	gmFûeGroup
;

58 
	gmFûePîmissi⁄
;

59 
	gmDúe˘‹yPîmissi⁄
;

62 
MçSessi⁄ID
 
	gmSessi⁄ID
;

64 
boﬁ
 
	gmSessi⁄O≥n
;

66 
MçReque°Packë
 
	gmReque°
;

67 
MçD©aPackë
 
	gmD©a
;

68 
MçRe•⁄£Packë
 
	gmRe•⁄£
;

69 
MçEvítPackë
 
	gmEvít
;

71 
MçSt‹ageLi°
 
	gmSt‹ages
;

74 
MçObje˘H™dÀ
 
	gmSídObje˘H™dÀ
;

75 
MçObje˘F‹m©
 
	gmSídObje˘F‹m©
;

76 
MçSåög
 
	gmSídObje˘FûeP©h
;

77 
size_t
 
	gmSídObje˘FûeSize
;

79 
Muãx
 
	gmMuãx
;

83 ˛as†
	cObje˘Edô
 {

84 
	gpublic
:

85 
MçObje˘H™dÀ
 
mH™dÀ
;

86 
MçSåög
 
	gmP©h
;

87 
uöt64_t
 
	gmSize
;

88 
MçObje˘F‹m©
 
	gmF‹m©
;

89 
	gmFD
;

91 
Obje˘Edô
(
MçObje˘H™dÀ
 
h™dÀ
, c⁄° * 
∑th
, 
uöt64_t
 
size
,

92 
MçObje˘F‹m©
 
f‹m©
, 
fd
)

93 : 
mH™dÀ
(
h™dÀ
), 
mP©h
(
∑th
), 
mSize
(
size
), 
mF‹m©
(
f‹m©
), 
mFD
(
fd
) {

96 
	gvútuÆ
 ~
Obje˘Edô
() {

97 
˛o£
(
mFD
);

100 
	gVe˘‹
<
	gObje˘Edô
*> 
	gmObje˘EdôLi°
;

102 
	gpublic
:

103 
MçSîvî
(
fd
, 
MçD©aba£
* 
d©aba£
, 
boﬁ
 
±p
,

104 
fûeGroup
, 
fûePîm
, 
dúe˘‹yPîm
);

105 
	gvútuÆ
 ~
MçSîvî
();

107 
MçSt‹age
* 
gëSt‹age
(
MçSt‹ageID
 
id
);

108 
ölöe
 
boﬁ
 
hasSt‹age
(Ë{  
	gmSt‹ages
.
size
() > 0; }

109 
boﬁ
 
hasSt‹age
(
MçSt‹ageID
 
id
);

110 
addSt‹age
(
MçSt‹age
* 
°‹age
);

111 
ªmoveSt‹age
(
MçSt‹age
* 
°‹age
);

113 
run
();

115 
£ndObje˘Added
(
MçObje˘H™dÀ
 
h™dÀ
);

116 
£ndObje˘Removed
(
MçObje˘H™dÀ
 
h™dÀ
);

118 
	g¥iv©e
:

119 
£ndSt‹eAdded
(
MçSt‹ageID
 
id
);

120 
£ndSt‹eRemoved
(
MçSt‹ageID
 
id
);

121 
£ndEvít
(
MçEvítCode
 
code
, 
uöt32_t
 
∑øm1
);

123 
addEdôObje˘
(
MçObje˘H™dÀ
 
h™dÀ
, 
MçSåög
& 
∑th
,

124 
uöt64_t
 
size
, 
MçObje˘F‹m©
 
f‹m©
, 
fd
);

125 
Obje˘Edô
* 
gëEdôObje˘
(
MçObje˘H™dÀ
 
h™dÀ
);

126 
ªmoveEdôObje˘
(
MçObje˘H™dÀ
 
h™dÀ
);

127 
commôEdô
(
Obje˘Edô
* 
edô
);

129 
boﬁ
 
h™dÀReque°
();

131 
MçRe•⁄£Code
 
doGëDevi˚Info
();

132 
MçRe•⁄£Code
 
doO≥nSessi⁄
();

133 
MçRe•⁄£Code
 
doClo£Sessi⁄
();

134 
MçRe•⁄£Code
 
doGëSt‹ageIDs
();

135 
MçRe•⁄£Code
 
doGëSt‹ageInfo
();

136 
MçRe•⁄£Code
 
doGëObje˘Pr›sSuµ‹ãd
();

137 
MçRe•⁄£Code
 
doGëObje˘H™dÀs
();

138 
MçRe•⁄£Code
 
doGëNumObje˘s
();

139 
MçRe•⁄£Code
 
doGëObje˘Re„ªn˚s
();

140 
MçRe•⁄£Code
 
doSëObje˘Re„ªn˚s
();

141 
MçRe•⁄£Code
 
doGëObje˘Pr›VÆue
();

142 
MçRe•⁄£Code
 
doSëObje˘Pr›VÆue
();

143 
MçRe•⁄£Code
 
doGëDevi˚Pr›VÆue
();

144 
MçRe•⁄£Code
 
doSëDevi˚Pr›VÆue
();

145 
MçRe•⁄£Code
 
doRe£tDevi˚Pr›VÆue
();

146 
MçRe•⁄£Code
 
doGëObje˘Pr›Li°
();

147 
MçRe•⁄£Code
 
doGëObje˘Info
();

148 
MçRe•⁄£Code
 
doGëObje˘
();

149 
MçRe•⁄£Code
 
doGëThumb
();

150 
MçRe•⁄£Code
 
doGëP¨tülObje˘
(
MçO≥øti⁄Code
 
›î©i⁄
);

151 
MçRe•⁄£Code
 
doSídObje˘Info
();

152 
MçRe•⁄£Code
 
doSídObje˘
();

153 
MçRe•⁄£Code
 
doDñëeObje˘
();

154 
MçRe•⁄£Code
 
doGëObje˘Pr›Desc
();

155 
MçRe•⁄£Code
 
doGëDevi˚Pr›Desc
();

156 
MçRe•⁄£Code
 
doSídP¨tülObje˘
();

157 
MçRe•⁄£Code
 
doTrunˇãObje˘
();

158 
MçRe•⁄£Code
 
doBegöEdôObje˘
();

159 
MçRe•⁄£Code
 
doEndEdôObje˘
();

	@src/MtpStorage.cpp

17 
	#LOG_TAG
 "MçSt‹age"

	)

19 
	~"MçDebug.h
"

20 
	~"MçD©aba£.h
"

21 
	~"MçSt‹age.h
"

23 
	~<sys/ty≥s.h
>

24 
	~<sys/°©.h
>

25 
	~<sys/°©fs.h
>

26 
	~<uni°d.h
>

27 
	~<dúít.h
>

28 
	~<î∫o.h
>

29 
	~<°rög.h
>

30 
	~<°dio.h
>

31 
	~<limôs.h
>

34 
	#ALOGV
 
¥ötf


	)

36 
«me•a˚
 
	g™droid
 {

38 
	gMçSt‹age
::
MçSt‹age
(
MçSt‹ageID
 
id
, c⁄° * 
fûeP©h
,

39 c⁄° * 
des¸ùti⁄
, 
uöt64_t
 
ª£rveS∑˚
,

40 
boﬁ
 
ªmovabÀ
, 
uöt64_t
 
maxFûeSize
)

41 : 
mSt‹ageID
(
id
),

42 
mFûeP©h
(
fûeP©h
),

43 
mDes¸ùti⁄
(
des¸ùti⁄
),

44 
mMaxC≠acôy
(0),

45 
mMaxFûeSize
(
maxFûeSize
),

46 
mRe£rveS∑˚
(
ª£rveS∑˚
),

47 
mRemovabÀ
(
ªmovabÀ
)

49 
ALOGV
("MçSt‹agêid: %dÖ©h: %s\n", 
id
, 
fûeP©h
);

52 
	gMçSt‹age
::~
MçSt‹age
() {

55 
MçSt‹age
::
gëTy≥
() const {

56  (
mRemovabÀ
 ? 
MTP_STORAGE_REMOVABLE_RAM
 : 
MTP_STORAGE_FIXED_RAM
);

59 
	gMçSt‹age
::
gëFûeSy°emTy≥
() const {

60  
MTP_STORAGE_FILESYSTEM_HIERARCHICAL
;

63 
	gMçSt‹age
::
gëAc˚ssC≠abûôy
() const {

64  
MTP_STORAGE_READ_WRITE
;

67 
uöt64_t
 
	gMçSt‹age
::
gëMaxC≠acôy
() {

68 i‡(
mMaxC≠acôy
 == 0) {

69 
°©fs
 
°©
;

70 i‡(
°©fs
(
gëP©h
(), &
°©
))

72 
	gmMaxC≠acôy
 = (
uöt64_t
)
°©
.
f_blocks
 * (uöt64_t)°©.
f_bsize
;

74  
	gmMaxC≠acôy
;

77 
uöt64_t
 
	gMçSt‹age
::
gëFªeS∑˚
() {

78 
°©fs
 
°©
;

79 i‡(
°©fs
(
gëP©h
(), &
°©
))

81 
uöt64_t
 
	g‰ìS∑˚
 = (uöt64_t)
°©
.
f_bavaû
 * (uöt64_t)°©.
f_bsize
;

82  (
	g‰ìS∑˚
 > 
	gmRe£rveS∑˚
 ? freeSpace - mReserveSpace : 0);

85 c⁄° * 
	gMçSt‹age
::
gëDes¸ùti⁄
() const {

86  (c⁄° *)
mDes¸ùti⁄
;

	@src/MtpStorage.h

17 #i‚de‡
_MTP_STORAGE_H


18 
	#_MTP_STORAGE_H


	)

20 
	~"MçTy≥s.h
"

21 
	~"mç.h
"

23 
«me•a˚
 
	g™droid
 {

25 
˛ass
 
	gMçD©aba£
;

27 ˛as†
	cMçSt‹age
 {

29 
	g¥iv©e
:

30 
MçSt‹ageID
 
mSt‹ageID
;

31 
MçSåög
 
	gmFûeP©h
;

32 
MçSåög
 
	gmDes¸ùti⁄
;

33 
uöt64_t
 
	gmMaxC≠acôy
;

34 
uöt64_t
 
	gmMaxFûeSize
;

36 
uöt64_t
 
	gmRe£rveS∑˚
;

37 
boﬁ
 
	gmRemovabÀ
;

39 
	gpublic
:

40 
MçSt‹age
(
MçSt‹ageID
 
id
, c⁄° * 
fûeP©h
,

41 c⁄° * 
des¸ùti⁄
, 
uöt64_t
 
ª£rveS∑˚
,

42 
boﬁ
 
ªmovabÀ
, 
uöt64_t
 
maxFûeSize
);

43 
	gvútuÆ
 ~
MçSt‹age
();

45 
ölöe
 
MçSt‹ageID
 
gëSt‹ageID
(Ëc⁄° {  
	gmSt‹ageID
; }

46 
gëTy≥
() const;

47 
gëFûeSy°emTy≥
() const;

48 
gëAc˚ssC≠abûôy
() const;

49 
uöt64_t
 
gëMaxC≠acôy
();

50 
uöt64_t
 
gëFªeS∑˚
();

51 c⁄° * 
gëDes¸ùti⁄
() const;

52 
ölöe
 c⁄° * 
gëP©h
(Ëc⁄° {  (c⁄° *)
	gmFûeP©h
; }

53 
ölöe
 
boﬁ
 
isRemovabÀ
(Ëc⁄° {  
	gmRemovabÀ
; }

54 
ölöe
 
uöt64_t
 
gëMaxFûeSize
(Ëc⁄° {  
	gmMaxFûeSize
; }

	@src/MtpStorageInfo.cpp

17 
	#LOG_TAG
 "MçSt‹ageInfo"

	)

19 
	~"MçDebug.h
"

20 
	~"MçD©aPackë.h
"

21 
	~"MçSt‹ageInfo.h
"

22 
	~"MçSåögBuf„r.h
"

24 
«me•a˚
 
	g™droid
 {

26 
	gMçSt‹ageInfo
::
MçSt‹ageInfo
(
MçSt‹ageID
 
id
)

27 : 
mSt‹ageID
(
id
),

28 
mSt‹ageTy≥
(0),

29 
mFûeSy°emTy≥
(0),

30 
mAc˚ssC≠abûôy
(0),

31 
mMaxC≠acôy
(0),

32 
mFªeS∑˚Byãs
(0),

33 
mFªeS∑˚Obje˘s
(0),

34 
mSt‹ageDes¸ùti⁄
(
NULL
),

35 
mVﬁumeIdítifõr
(
NULL
)

39 
	gMçSt‹ageInfo
::~
MçSt‹ageInfo
() {

40 i‡(
mSt‹ageDes¸ùti⁄
)

41 
‰ì
(
mSt‹ageDes¸ùti⁄
);

42 i‡(
	gmVﬁumeIdítifõr
)

43 
‰ì
(
mVﬁumeIdítifõr
);

46 
	gMçSt‹ageInfo
::
ªad
(
MçD©aPackë
& 
∑ckë
) {

47 
MçSåögBuf„r
 
°rög
;

50 
	gmSt‹ageTy≥
 = 
∑ckë
.
gëUI¡16
();

51 
	gmFûeSy°emTy≥
 = 
∑ckë
.
gëUI¡16
();

52 
	gmAc˚ssC≠abûôy
 = 
∑ckë
.
gëUI¡16
();

53 
	gmMaxC≠acôy
 = 
∑ckë
.
gëUI¡64
();

54 
	gmFªeS∑˚Byãs
 = 
∑ckë
.
gëUI¡64
();

55 
	gmFªeS∑˚Obje˘s
 = 
∑ckë
.
gëUI¡32
();

57 
	g∑ckë
.
gëSåög
(
°rög
);

58 
	gmSt‹ageDes¸ùti⁄
 = 
°rdup
((c⁄° *)
°rög
);

59 
	g∑ckë
.
gëSåög
(
°rög
);

60 
	gmVﬁumeIdítifõr
 = 
°rdup
((c⁄° *)
°rög
);

63 
	gMçSt‹ageInfo
::
¥öt
() {

64 
ALOGD
("Storage Info %08X:\n\tmStorageType: %d\n\tmFileSystemType: %d\n\tmAccessCapability: %d\n",

65 
mSt‹ageID
, 
mSt‹ageTy≥
, 
mFûeSy°emTy≥
, 
mAc˚ssC≠abûôy
);

66 
ALOGD
("\tmMaxCapacity: %lld\n\tmFreeSpaceBytes: %lld\n\tmFreeSpaceObjects: %d\n",

67 
mMaxC≠acôy
, 
mFªeS∑˚Byãs
, 
mFªeS∑˚Obje˘s
);

68 
ALOGD
("\tmStorageDescription: %s\n\tmVolumeIdentifier: %s\n",

69 
mSt‹ageDes¸ùti⁄
, 
mVﬁumeIdítifõr
);

	@src/MtpStorageInfo.h

17 #i‚de‡
_MTP_STORAGE_INFO_H


18 
	#_MTP_STORAGE_INFO_H


	)

20 
	~"MçTy≥s.h
"

22 
«me•a˚
 
	g™droid
 {

24 
˛ass
 
	gMçD©aPackë
;

26 ˛as†
	cMçSt‹ageInfo
 {

27 
	gpublic
:

28 
MçSt‹ageID
 
mSt‹ageID
;

29 
uöt16_t
 
	gmSt‹ageTy≥
;

30 
uöt16_t
 
	gmFûeSy°emTy≥
;

31 
uöt16_t
 
	gmAc˚ssC≠abûôy
;

32 
uöt64_t
 
	gmMaxC≠acôy
;

33 
uöt64_t
 
	gmFªeS∑˚Byãs
;

34 
uöt32_t
 
	gmFªeS∑˚Obje˘s
;

35 * 
	gmSt‹ageDes¸ùti⁄
;

36 * 
	gmVﬁumeIdítifõr
;

38 
	gpublic
:

39 
MçSt‹ageInfo
(
MçSt‹ageID
 
id
);

40 
	gvútuÆ
 ~
MçSt‹ageInfo
();

42 
ªad
(
MçD©aPackë
& 
∑ckë
);

44 
¥öt
();

	@src/MtpStringBuffer.cpp

17 
	#LOG_TAG
 "MçSåögBuf„r"

	)

19 
	~<°rög.h
>

21 
	~"MçD©aPackë.h
"

22 
	~"MçSåögBuf„r.h
"

24 
«me•a˚
 
	g™droid
 {

26 
	gMçSåögBuf„r
::
MçSåögBuf„r
()

27 : 
mCh¨Cou¡
(0),

28 
mByãCou¡
(1)

30 
	gmBuf„r
[0] = 0;

33 
	gMçSåögBuf„r
::
MçSåögBuf„r
(c⁄° * 
§c
)

34 : 
mCh¨Cou¡
(0),

35 
mByãCou¡
(1)

37 
£t
(
§c
);

40 
	gMçSåögBuf„r
::
MçSåögBuf„r
(c⁄° 
uöt16_t
* 
§c
)

41 : 
mCh¨Cou¡
(0),

42 
mByãCou¡
(1)

44 
£t
(
§c
);

47 
	gMçSåögBuf„r
::
MçSåögBuf„r
(c⁄° MçSåögBuf„r& 
§c
)

48 : 
mCh¨Cou¡
(
§c
.mCharCount),

49 
mByãCou¡
(
§c
.mByteCount)

51 
mem˝y
(
mBuf„r
, 
§c
.mBuf„r, 
mByãCou¡
);

55 
	gMçSåögBuf„r
::~
MçSåögBuf„r
() {

58 
MçSåögBuf„r
::
£t
(c⁄° * 
§c
) {

59 
Àngth
 = 
°æí
(
§c
);

60 i‡(
	gÀngth
 >(
mBuf„r
))

61 
Àngth
 = (
mBuf„r
) - 1;

62 
mem˝y
(
mBuf„r
, 
§c
, 
Àngth
);

65 
	gcou¡
 = 0;

66 
	gch
;

67 (
	gch
 = *
§c
++) != 0) {

68 i‡((
ch
 & 0x80) == 0) {

70 } i‡((
ch
 & 0xE0) == 0xC0) {

72 i‡(! *
§c
++) {

74 
Àngth
--;

77 } i‡((
	gch
 & 0xF0) == 0xE0) {

79 i‡(! *
§c
++) {

81 
Àngth
--;

84 i‡(! *
	g§c
++) {

86 
	gÀngth
 -= 2;

90 
	gcou¡
++;

93 
	gmByãCou¡
 = 
Àngth
 + 1;

94 
	gmBuf„r
[
Àngth
] = 0;

95 
	gmCh¨Cou¡
 = 
cou¡
;

98 
	gMçSåögBuf„r
::
£t
(c⁄° 
uöt16_t
* 
§c
) {

99 
cou¡
 = 0;

100 
uöt16_t
 
	gch
;

101 
uöt8_t
* 
	gde°
 = 
mBuf„r
;

103 (
	gch
 = *
§c
++Ë!0 && 
cou¡
 < 255) {

104 i‡(
ch
 >= 0x0800) {

105 *
de°
++ = (
uöt8_t
)(0xE0 | (
ch
 >> 12));

106 *
	gde°
++ = (
uöt8_t
)(0x80 | ((
ch
 >> 6) & 0x3F));

107 *
	gde°
++ = (
uöt8_t
)(0x80 | (
ch
 & 0x3F));

108 } i‡(
	gch
 >= 0x80) {

109 *
de°
++ = (
uöt8_t
)(0xC0 | (
ch
 >> 6));

110 *
	gde°
++ = (
uöt8_t
)(0x80 | (
ch
 & 0x3F));

112 *
	gde°
++ = 
ch
;

114 
	gcou¡
++;

116 *
	gde°
++ = 0;

117 
	gmCh¨Cou¡
 = 
cou¡
;

118 
	gmByãCou¡
 = 
de°
 - 
mBuf„r
;

121 
	gMçSåögBuf„r
::
ªadFromPackë
(
MçD©aPackë
* 
∑ckë
) {

122 
cou¡
 = 
∑ckë
->
gëUI¡8
();

123 
uöt8_t
* 
	gde°
 = 
mBuf„r
;

124 
	gi
 = 0; i < 
	gcou¡
; i++) {

125 
uöt16_t
 
	gch
 = 
∑ckë
->
gëUI¡16
();

126 i‡(
	gch
 >= 0x0800) {

127 *
de°
++ = (
uöt8_t
)(0xE0 | (
ch
 >> 12));

128 *
	gde°
++ = (
uöt8_t
)(0x80 | ((
ch
 >> 6) & 0x3F));

129 *
	gde°
++ = (
uöt8_t
)(0x80 | (
ch
 & 0x3F));

130 } i‡(
	gch
 >= 0x80) {

131 *
de°
++ = (
uöt8_t
)(0xC0 | (
ch
 >> 6));

132 *
	gde°
++ = (
uöt8_t
)(0x80 | (
ch
 & 0x3F));

134 *
	gde°
++ = 
ch
;

137 *
	gde°
++ = 0;

138 
	gmCh¨Cou¡
 = 
cou¡
;

139 
	gmByãCou¡
 = 
de°
 - 
mBuf„r
;

142 
	gMçSåögBuf„r
::
wrôeToPackë
(
MçD©aPackë
* 
∑ckë
) const {

143 
cou¡
 = 
mCh¨Cou¡
;

144 c⁄° 
uöt8_t
* 
	g§c
 = 
mBuf„r
;

145 
	g∑ckë
->
putUI¡8
(
cou¡
 > 0 ? count + 1 : 0);

148 
	gi
 = 0; i < 
	gcou¡
; i++) {

149 
uöt16_t
 
	gch
;

150 
uöt16_t
 
	gch1
 = *
§c
++;

151 i‡((
	gch1
 & 0x80) == 0) {

153 
ch
 = 
ch1
;

154 } i‡((
	gch1
 & 0xE0) == 0xC0) {

156 
uöt16_t
 
ch2
 = *
§c
++;

157 
	gch
 = ((
ch1
 & 0x1FË<< 6Ë| (
ch2
 & 0x3F);

160 
uöt16_t
 
	gch2
 = *
§c
++;

161 
uöt16_t
 
	gch3
 = *
§c
++;

162 
	gch
 = ((
ch1
 & 0x0FË<< 12Ë| ((
ch2
 & 0x3FË<< 6Ë| (
ch3
 & 0x3F);

164 
	g∑ckë
->
putUI¡16
(
ch
);

167 i‡(
	gcou¡
 > 0)

168 
	g∑ckë
->
putUI¡16
(0);

	@src/MtpStringBuffer.h

17 #i‚de‡
_MTP_STRING_BUFFER_H


18 
	#_MTP_STRING_BUFFER_H


	)

20 
	~<°döt.h
>

22 
«me•a˚
 
	g™droid
 {

24 
˛ass
 
	gMçD©aPackë
;

27 ˛as†
	cMçSåögBuf„r
 {

29 
	g¥iv©e
:

32 
uöt8_t
 
mBuf„r
[255 * 3 + 1];

33 
	gmCh¨Cou¡
;

34 
	gmByãCou¡
;

36 
	gpublic
:

37 
MçSåögBuf„r
();

38 
MçSåögBuf„r
(c⁄° * 
§c
);

39 
MçSåögBuf„r
(c⁄° 
uöt16_t
* 
§c
);

40 
MçSåögBuf„r
(c⁄° MçSåögBuf„r& 
§c
);

41 
	gvútuÆ
 ~
MçSåögBuf„r
();

43 
£t
(c⁄° * 
§c
);

44 
£t
(c⁄° 
uöt16_t
* 
§c
);

46 
ªadFromPackë
(
MçD©aPackë
* 
∑ckë
);

47 
wrôeToPackë
(
MçD©aPackë
* 
∑ckë
) const;

49 
ölöe
 
gëCh¨Cou¡
(Ëc⁄° {  
	gmCh¨Cou¡
; }

50 
ölöe
 
gëByãCou¡
(Ëc⁄° {  
	gmByãCou¡
; }

52 
ölöe
 
›î©‹
 c⁄° *(Ëc⁄° {  (c⁄° *)
	gmBuf„r
; }

	@src/MtpTypes.h

17 #i‚de‡
_MTP_TYPES_H


18 
	#_MTP_TYPES_H


	)

20 
	~<°döt.h
>

21 
	~"utûs/Såög8.h
"

22 
	~"utûs/Ve˘‹.h
"

24 
«me•a˚
 
	g™droid
 {

26 
öt32_t
 
	töt128_t
[4];

27 
uöt32_t
 
	tuöt128_t
[4];

29 
uöt16_t
 
	tMçO≥øti⁄Code
;

30 
uöt16_t
 
	tMçRe•⁄£Code
;

31 
uöt16_t
 
	tMçEvítCode
;

32 
uöt32_t
 
	tMçSessi⁄ID
;

33 
uöt32_t
 
	tMçSt‹ageID
;

34 
uöt32_t
 
	tMçTønß˘i⁄ID
;

35 
uöt16_t
 
	tMçPr›îtyCode
;

36 
uöt16_t
 
	tMçD©aTy≥
;

37 
uöt16_t
 
	tMçObje˘F‹m©
;

38 
MçPr›îtyCode
 
	tMçDevi˚Pr›îty
;

39 
MçPr›îtyCode
 
	tMçObje˘Pr›îty
;

44 
uöt32_t
 
	tMçObje˘H™dÀ
;

47 
	#MTP_PARENT_ROOT
 0xFFFFFFFF

48 
	#kInvÆidObje˘H™dÀ
 0xFFFFFFFF

	)

50 
˛ass
 
	gMçSt‹age
;

51 
˛ass
 
	gMçDevi˚
;

52 
˛ass
 
	gMçPr›îty
;

54 
	gVe˘‹
<
	tMçSt‹age
 *> 
	tMçSt‹ageLi°
;

55 
	gVe˘‹
<
	tMçDevi˚
*> 
	tMçDevi˚Li°
;

56 
	gVe˘‹
<
	tMçPr›îty
*> 
	tMçPr›îtyLi°
;

58 
	gVe˘‹
<
	tuöt8_t
> 
	tUI¡8Li°
;

59 
	gVe˘‹
<
	tuöt16_t
> 
	tUI¡16Li°
;

60 
	gVe˘‹
<
	tuöt32_t
> 
	tUI¡32Li°
;

61 
	gVe˘‹
<
	tuöt64_t
> 
	tUI¡64Li°
;

62 
	gVe˘‹
<
	töt8_t
> 
	tI¡8Li°
;

63 
	gVe˘‹
<
	töt16_t
> 
	tI¡16Li°
;

64 
	gVe˘‹
<
	töt32_t
> 
	tI¡32Li°
;

65 
	gVe˘‹
<
	töt64_t
> 
	tI¡64Li°
;

67 
UI¡16Li°
 
	tMçObje˘Pr›îtyLi°
;

68 
UI¡16Li°
 
	tMçDevi˚Pr›îtyLi°
;

69 
UI¡16Li°
 
	tMçObje˘F‹m©Li°
;

70 
UI¡32Li°
 
	tMçObje˘H™dÀLi°
;

71 
UI¡16Li°
 
	tMçObje˘Pr›îtyLi°
;

72 
UI¡32Li°
 
	tMçSt‹ageIDLi°
;

74 
Såög8
 
	tMçSåög
;

	@src/MtpUtils.cpp

17 
	#LOG_TAG
 "MçUtûs"

	)

19 
	~<°dio.h
>

20 
	~<time.h
>

23 
	~"MçUtûs.h
"

25 
«me•a˚
 
	g™droid
 {

36 
boﬁ
 
∑r£D©eTime
(c⁄° * 
d©eTime
, 
time_t
& 
outSec⁄ds
) {

37 
	gyór
, 
	gm⁄th
, 
	gday
, 
	ghour
, 
	gmöuã
, 
	g£c⁄d
;

38 
tm
 
	gtm
;

40 i‡(
ssˇnf
(
d©eTime
, "%04d%02d%02dT%02d%02d%02d",

41 &
yór
, &
m⁄th
, &
day
, &
hour
, &
möuã
, &
£c⁄d
) != 6)

42  
Ál£
;

43 c⁄° * 
	gèû
 = 
d©eTime
 + 15;

45 i‡(
	gèû
[0] ='.' && 
èû
[1])

46 
èû
 += 2;

48 
boﬁ
 
	gu£UTC
 = (
èû
[0] == 'Z');

51 
time_t
 
	gdummy
;

52 
loˇ…ime_r
(&
dummy
, &
tm
);

54 
	gtm
.
	gtm_£c
 = 
£c⁄d
;

55 
	gtm
.
	gtm_mö
 = 
möuã
;

56 
	gtm
.
	gtm_hour
 = 
hour
;

57 
	gtm
.
	gtm_mday
 = 
day
;

58 
	gtm
.
	gtm_m⁄
 = 
m⁄th
 - 1;

59 
	gtm
.
	gtm_yór
 = 
yór
 - 1900;

60 
	gtm
.
	gtm_wday
 = 0;

61 
	gtm
.
	gtm_isd°
 = -1;

63 
	goutSec⁄ds
 = 
mktime
(&
tm
);

67  
	gåue
;

70 
f‹m©D©eTime
(
time_t
 
£c⁄ds
, * 
buf„r
, 
buf„rLígth
) {

71 
tm
 
	gtm
;

73 
loˇ…ime_r
(&
£c⁄ds
, &
tm
);

74 
¢¥ötf
(
buf„r
, 
buf„rLígth
, "%04d%02d%02dT%02d%02d%02d",

75 
tm
.
tm_yór
 + 1900,

76 
tm
.
tm_m⁄
 + 1,

77 
tm
.
tm_mday
,Åm.
tm_hour
,Åm.
tm_mö
,Åm.
tm_£c
);

	@src/MtpUtils.h

17 #i‚de‡
_MTP_UTILS_H


18 
	#_MTP_UTILS_H


	)

20 
	~<°döt.h
>

22 
«me•a˚
 
	g™droid
 {

24 
boﬁ
 
∑r£D©eTime
(c⁄° * 
d©eTime
, 
time_t
& 
outSec⁄ds
);

25 
f‹m©D©eTime
(
time_t
 
£c⁄ds
, * 
buf„r
, 
buf„rLígth
);

	@src/linux/usb/f_mtp.h

18 #i‚de‡
__LINUX_USB_F_MTP_H


19 
	#__LINUX_USB_F_MTP_H


	)

21 #ifde‡
__KERNEL__


23 
	smç_d©a_hódî
 {

25 
uöt32_t
 
	mÀngth
;

27 
uöt16_t
 
	mty≥
;

29 
uöt16_t
 
	mcomm™d
;

31 
uöt32_t
 
	må™ß˘i⁄_id
;

36 
	smç_fûe_ønge
 {

38 
	mfd
;

40 
loff_t
 
	moff£t
;

42 
öt64_t
 
	mÀngth
;

46 
uöt16_t
 
	mcomm™d
;

50 
uöt32_t
 
	må™ß˘i⁄_id
;

53 
	smç_evít
 {

55 
size_t
 
	mÀngth
;

57 *
	md©a
;

61 
	#MTP_SEND_FILE
 
	`_IOW
('M', 0, 
mç_fûe_ønge
)

	)

65 
	#MTP_RECEIVE_FILE
 
	`_IOW
('M', 1, 
mç_fûe_ønge
)

	)

67 
	#MTP_SEND_EVENT
 
	`_IOW
('M', 3, 
mç_evít
)

	)

71 
	#MTP_SEND_FILE_WITH_HEADER
 
	`_IOW
('M', 4, 
mç_fûe_ønge
)

	)

	@src/mtp.h

17 #i‚de‡
_MTP_H


18 
	#_MTP_H


	)

20 
	~<°döt.h
>

21 
	~<°dlib.h
>

23 
	#MTP_STANDARD_VERSION
 100

	)

26 
	#MTP_CONTAINER_TYPE_UNDEFINED
 0

	)

27 
	#MTP_CONTAINER_TYPE_COMMAND
 1

	)

28 
	#MTP_CONTAINER_TYPE_DATA
 2

	)

29 
	#MTP_CONTAINER_TYPE_RESPONSE
 3

	)

30 
	#MTP_CONTAINER_TYPE_EVENT
 4

	)

33 
	#MTP_CONTAINER_LENGTH_OFFSET
 0

	)

34 
	#MTP_CONTAINER_TYPE_OFFSET
 4

	)

35 
	#MTP_CONTAINER_CODE_OFFSET
 6

	)

36 
	#MTP_CONTAINER_TRANSACTION_ID_OFFSET
 8

	)

37 
	#MTP_CONTAINER_PARAMETER_OFFSET
 12

	)

38 
	#MTP_CONTAINER_HEADER_SIZE
 12

	)

41 
	#MTP_TYPE_UNDEFINED
 0x0000

42 
	#MTP_TYPE_INT8
 0x0001

43 
	#MTP_TYPE_UINT8
 0x0002

44 
	#MTP_TYPE_INT16
 0x0003

45 
	#MTP_TYPE_UINT16
 0x0004

46 
	#MTP_TYPE_INT32
 0x0005

47 
	#MTP_TYPE_UINT32
 0x0006

48 
	#MTP_TYPE_INT64
 0x0007

49 
	#MTP_TYPE_UINT64
 0x0008

50 
	#MTP_TYPE_INT128
 0x0009

51 
	#MTP_TYPE_UINT128
 0x000A

52 
	#MTP_TYPE_AINT8
 0x4001

53 
	#MTP_TYPE_AUINT8
 0x4002

54 
	#MTP_TYPE_AINT16
 0x4003

55 
	#MTP_TYPE_AUINT16
 0x4004

56 
	#MTP_TYPE_AINT32
 0x4005

57 
	#MTP_TYPE_AUINT32
 0x4006

58 
	#MTP_TYPE_AINT64
 0x4007

59 
	#MTP_TYPE_AUINT64
 0x4008

60 
	#MTP_TYPE_AINT128
 0x4009

61 
	#MTP_TYPE_AUINT128
 0x400A

62 
	#MTP_TYPE_STR
 0xFFFF

63 

	)

65 
	#MTP_FORMAT_UNDEFINED
 0x3000

66 
	#MTP_FORMAT_ASSOCIATION
 0x3001

67 
	#MTP_FORMAT_SCRIPT
 0x3002

68 
	#MTP_FORMAT_EXECUTABLE
 0x3003

69 
	#MTP_FORMAT_TEXT
 0x3004

70 
	#MTP_FORMAT_HTML
 0x3005

71 
	#MTP_FORMAT_DPOF
 0x3006

72 
	#MTP_FORMAT_AIFF
 0x3007

73 
	#MTP_FORMAT_WAV
 0x3008

74 
	#MTP_FORMAT_MP3
 0x3009

75 
	#MTP_FORMAT_AVI
 0x300A

76 
	#MTP_FORMAT_MPEG
 0x300B

77 
	#MTP_FORMAT_ASF
 0x300C

78 
	#MTP_FORMAT_DEFINED
 0x3800

79 
	#MTP_FORMAT_EXIF_JPEG
 0x3801

80 
	#MTP_FORMAT_TIFF_EP
 0x3802

81 
	#MTP_FORMAT_FLASHPIX
 0x3803

82 
	#MTP_FORMAT_BMP
 0x3804

83 
	#MTP_FORMAT_CIFF
 0x3805

84 
	#MTP_FORMAT_GIF
 0x3807

85 
	#MTP_FORMAT_JFIF
 0x3808

86 
	#MTP_FORMAT_CD
 0x3809

87 
	#MTP_FORMAT_PICT
 0x380A

88 
	#MTP_FORMAT_PNG
 0x380B

89 
	#MTP_FORMAT_TIFF
 0x380D

90 
	#MTP_FORMAT_TIFF_IT
 0x380E

91 
	#MTP_FORMAT_JP2
 0x380F

92 
	#MTP_FORMAT_JPX
 0x3810

93 
	#MTP_FORMAT_UNDEFINED_FIRMWARE
 0xB802

	)

94 
	#MTP_FORMAT_WINDOWS_IMAGE_FORMAT
 0xB881

	)

95 
	#MTP_FORMAT_UNDEFINED_AUDIO
 0xB900

	)

96 
	#MTP_FORMAT_WMA
 0xB901

	)

97 
	#MTP_FORMAT_OGG
 0xB902

	)

98 
	#MTP_FORMAT_AAC
 0xB903

	)

99 
	#MTP_FORMAT_AUDIBLE
 0xB904

	)

100 
	#MTP_FORMAT_FLAC
 0xB906

	)

101 
	#MTP_FORMAT_UNDEFINED_VIDEO
 0xB980

	)

102 
	#MTP_FORMAT_WMV
 0xB981

	)

103 
	#MTP_FORMAT_MP4_CONTAINER
 0xB982

104 
	#MTP_FORMAT_MP2
 0xB983

	)

105 
	#MTP_FORMAT_3GP_CONTAINER
 0xB984

106 
	#MTP_FORMAT_UNDEFINED_COLLECTION
 0xBA00

	)

107 
	#MTP_FORMAT_ABSTRACT_MULTIMEDIA_ALBUM
 0xBA01

	)

108 
	#MTP_FORMAT_ABSTRACT_IMAGE_ALBUM
 0xBA02

	)

109 
	#MTP_FORMAT_ABSTRACT_AUDIO_ALBUM
 0xBA03

	)

110 
	#MTP_FORMAT_ABSTRACT_VIDEO_ALBUM
 0xBA04

	)

111 
	#MTP_FORMAT_ABSTRACT_AV_PLAYLIST
 0xBA05

	)

112 
	#MTP_FORMAT_ABSTRACT_CONTACT_GROUP
 0xBA06

	)

113 
	#MTP_FORMAT_ABSTRACT_MESSAGE_FOLDER
 0xBA07

	)

114 
	#MTP_FORMAT_ABSTRACT_CHAPTERED_PRODUCTION
 0xBA08

	)

115 
	#MTP_FORMAT_ABSTRACT_AUDIO_PLAYLIST
 0xBA09

	)

116 
	#MTP_FORMAT_ABSTRACT_VIDEO_PLAYLIST
 0xBA0A

	)

117 
	#MTP_FORMAT_ABSTRACT_MEDIACAST
 0xBA0B

118 
	#MTP_FORMAT_WPL_PLAYLIST
 0xBA10

	)

119 
	#MTP_FORMAT_M3U_PLAYLIST
 0xBA11

	)

120 
	#MTP_FORMAT_MPL_PLAYLIST
 0xBA12

	)

121 
	#MTP_FORMAT_ASX_PLAYLIST
 0xBA13

	)

122 
	#MTP_FORMAT_PLS_PLAYLIST
 0xBA14

	)

123 
	#MTP_FORMAT_UNDEFINED_DOCUMENT
 0xBA80

	)

124 
	#MTP_FORMAT_ABSTRACT_DOCUMENT
 0xBA81

	)

125 
	#MTP_FORMAT_XML_DOCUMENT
 0xBA82

	)

126 
	#MTP_FORMAT_MS_WORD_DOCUMENT
 0xBA83

	)

127 
	#MTP_FORMAT_MHT_COMPILED_HTML_DOCUMENT
 0xBA84

	)

128 
	#MTP_FORMAT_MS_EXCEL_SPREADSHEET
 0xBA85

	)

129 
	#MTP_FORMAT_MS_POWERPOINT_PRESENTATION
 0xBA86

	)

130 
	#MTP_FORMAT_UNDEFINED_MESSAGE
 0xBB00

	)

131 
	#MTP_FORMAT_ABSTRACT_MESSSAGE
 0xBB01

	)

132 
	#MTP_FORMAT_UNDEFINED_CONTACT
 0xBB80

	)

133 
	#MTP_FORMAT_ABSTRACT_CONTACT
 0xBB81

	)

134 
	#MTP_FORMAT_VCARD_2
 0xBB82

	)

137 
	#MTP_PROPERTY_STORAGE_ID
 0xDC01

	)

138 
	#MTP_PROPERTY_OBJECT_FORMAT
 0xDC02

	)

139 
	#MTP_PROPERTY_PROTECTION_STATUS
 0xDC03

	)

140 
	#MTP_PROPERTY_OBJECT_SIZE
 0xDC04

	)

141 
	#MTP_PROPERTY_ASSOCIATION_TYPE
 0xDC05

	)

142 
	#MTP_PROPERTY_ASSOCIATION_DESC
 0xDC06

	)

143 
	#MTP_PROPERTY_OBJECT_FILE_NAME
 0xDC07

	)

144 
	#MTP_PROPERTY_DATE_CREATED
 0xDC08

	)

145 
	#MTP_PROPERTY_DATE_MODIFIED
 0xDC09

	)

146 
	#MTP_PROPERTY_KEYWORDS
 0xDC0A

	)

147 
	#MTP_PROPERTY_PARENT_OBJECT
 0xDC0B

	)

148 
	#MTP_PROPERTY_ALLOWED_FOLDER_CONTENTS
 0xDC0C

	)

149 
	#MTP_PROPERTY_HIDDEN
 0xDC0D

	)

150 
	#MTP_PROPERTY_SYSTEM_OBJECT
 0xDC0E

	)

151 
	#MTP_PROPERTY_PERSISTENT_UID
 0xDC41

	)

152 
	#MTP_PROPERTY_SYNC_ID
 0xDC42

	)

153 
	#MTP_PROPERTY_PROPERTY_BAG
 0xDC43

	)

154 
	#MTP_PROPERTY_NAME
 0xDC44

	)

155 
	#MTP_PROPERTY_CREATED_BY
 0xDC45

	)

156 
	#MTP_PROPERTY_ARTIST
 0xDC46

	)

157 
	#MTP_PROPERTY_DATE_AUTHORED
 0xDC47

	)

158 
	#MTP_PROPERTY_DESCRIPTION
 0xDC48

	)

159 
	#MTP_PROPERTY_URL_REFERENCE
 0xDC49

	)

160 
	#MTP_PROPERTY_LANGUAGE_LOCALE
 0xDC4A

	)

161 
	#MTP_PROPERTY_COPYRIGHT_INFORMATION
 0xDC4B

	)

162 
	#MTP_PROPERTY_SOURCE
 0xDC4C

	)

163 
	#MTP_PROPERTY_ORIGIN_LOCATION
 0xDC4D

	)

164 
	#MTP_PROPERTY_DATE_ADDED
 0xDC4E

	)

165 
	#MTP_PROPERTY_NON_CONSUMABLE
 0xDC4F

	)

166 
	#MTP_PROPERTY_CORRUPT_UNPLAYABLE
 0xDC50

	)

167 
	#MTP_PROPERTY_PRODUCER_SERIAL_NUMBER
 0xDC51

	)

168 
	#MTP_PROPERTY_REPRESENTATIVE_SAMPLE_FORMAT
 0xDC81

	)

169 
	#MTP_PROPERTY_REPRESENTATIVE_SAMPLE_SIZE
 0xDC82

	)

170 
	#MTP_PROPERTY_REPRESENTATIVE_SAMPLE_HEIGHT
 0xDC83

	)

171 
	#MTP_PROPERTY_REPRESENTATIVE_SAMPLE_WIDTH
 0xDC84

	)

172 
	#MTP_PROPERTY_REPRESENTATIVE_SAMPLE_DURATION
 0xDC85

	)

173 
	#MTP_PROPERTY_REPRESENTATIVE_SAMPLE_DATA
 0xDC86

	)

174 
	#MTP_PROPERTY_WIDTH
 0xDC87

	)

175 
	#MTP_PROPERTY_HEIGHT
 0xDC88

	)

176 
	#MTP_PROPERTY_DURATION
 0xDC89

	)

177 
	#MTP_PROPERTY_RATING
 0xDC8A

	)

178 
	#MTP_PROPERTY_TRACK
 0xDC8B

	)

179 
	#MTP_PROPERTY_GENRE
 0xDC8C

	)

180 
	#MTP_PROPERTY_CREDITS
 0xDC8D

	)

181 
	#MTP_PROPERTY_LYRICS
 0xDC8E

	)

182 
	#MTP_PROPERTY_SUBSCRIPTION_CONTENT_ID
 0xDC8F

	)

183 
	#MTP_PROPERTY_PRODUCED_BY
 0xDC90

	)

184 
	#MTP_PROPERTY_USE_COUNT
 0xDC91

	)

185 
	#MTP_PROPERTY_SKIP_COUNT
 0xDC92

	)

186 
	#MTP_PROPERTY_LAST_ACCESSED
 0xDC93

	)

187 
	#MTP_PROPERTY_PARENTAL_RATING
 0xDC94

	)

188 
	#MTP_PROPERTY_META_GENRE
 0xDC95

	)

189 
	#MTP_PROPERTY_COMPOSER
 0xDC96

	)

190 
	#MTP_PROPERTY_EFFECTIVE_RATING
 0xDC97

	)

191 
	#MTP_PROPERTY_SUBTITLE
 0xDC98

	)

192 
	#MTP_PROPERTY_ORIGINAL_RELEASE_DATE
 0xDC99

	)

193 
	#MTP_PROPERTY_ALBUM_NAME
 0xDC9A

	)

194 
	#MTP_PROPERTY_ALBUM_ARTIST
 0xDC9B

	)

195 
	#MTP_PROPERTY_MOOD
 0xDC9C

	)

196 
	#MTP_PROPERTY_DRM_STATUS
 0xDC9D

	)

197 
	#MTP_PROPERTY_SUB_DESCRIPTION
 0xDC9E

	)

198 
	#MTP_PROPERTY_IS_CROPPED
 0xDCD1

	)

199 
	#MTP_PROPERTY_IS_COLOUR_CORRECTED
 0xDCD2

	)

200 
	#MTP_PROPERTY_IMAGE_BIT_DEPTH
 0xDCD3

	)

201 
	#MTP_PROPERTY_F_NUMBER
 0xDCD4

	)

202 
	#MTP_PROPERTY_EXPOSURE_TIME
 0xDCD5

	)

203 
	#MTP_PROPERTY_EXPOSURE_INDEX
 0xDCD6

	)

204 
	#MTP_PROPERTY_TOTAL_BITRATE
 0xDE91

	)

205 
	#MTP_PROPERTY_BITRATE_TYPE
 0xDE92

	)

206 
	#MTP_PROPERTY_SAMPLE_RATE
 0xDE93

	)

207 
	#MTP_PROPERTY_NUMBER_OF_CHANNELS
 0xDE94

	)

208 
	#MTP_PROPERTY_AUDIO_BIT_DEPTH
 0xDE95

	)

209 
	#MTP_PROPERTY_SCAN_TYPE
 0xDE97

	)

210 
	#MTP_PROPERTY_AUDIO_WAVE_CODEC
 0xDE99

	)

211 
	#MTP_PROPERTY_AUDIO_BITRATE
 0xDE9A

	)

212 
	#MTP_PROPERTY_VIDEO_FOURCC_CODEC
 0xDE9B

	)

213 
	#MTP_PROPERTY_VIDEO_BITRATE
 0xDE9C

	)

214 
	#MTP_PROPERTY_FRAMES_PER_THOUSAND_SECONDS
 0xDE9D

	)

215 
	#MTP_PROPERTY_KEYFRAME_DISTANCE
 0xDE9E

	)

216 
	#MTP_PROPERTY_BUFFER_SIZE
 0xDE9F

	)

217 
	#MTP_PROPERTY_ENCODING_QUALITY
 0xDEA0

	)

218 
	#MTP_PROPERTY_ENCODING_PROFILE
 0xDEA1

	)

219 
	#MTP_PROPERTY_DISPLAY_NAME
 0xDCE0

	)

220 
	#MTP_PROPERTY_BODY_TEXT
 0xDCE1

	)

221 
	#MTP_PROPERTY_SUBJECT
 0xDCE2

	)

222 
	#MTP_PROPERTY_PRIORITY
 0xDCE3

	)

223 
	#MTP_PROPERTY_GIVEN_NAME
 0xDD00

	)

224 
	#MTP_PROPERTY_MIDDLE_NAMES
 0xDD01

	)

225 
	#MTP_PROPERTY_FAMILY_NAME
 0xDD02

	)

226 
	#MTP_PROPERTY_PREFIX
 0xDD03

	)

227 
	#MTP_PROPERTY_SUFFIX
 0xDD04

	)

228 
	#MTP_PROPERTY_PHONETIC_GIVEN_NAME
 0xDD05

	)

229 
	#MTP_PROPERTY_PHONETIC_FAMILY_NAME
 0xDD06

	)

230 
	#MTP_PROPERTY_EMAIL_PRIMARY
 0xDD07

	)

231 
	#MTP_PROPERTY_EMAIL_PERSONAL_1
 0xDD08

	)

232 
	#MTP_PROPERTY_EMAIL_PERSONAL_2
 0xDD09

	)

233 
	#MTP_PROPERTY_EMAIL_BUSINESS_1
 0xDD0A

	)

234 
	#MTP_PROPERTY_EMAIL_BUSINESS_2
 0xDD0B

	)

235 
	#MTP_PROPERTY_EMAIL_OTHERS
 0xDD0C

	)

236 
	#MTP_PROPERTY_PHONE_NUMBER_PRIMARY
 0xDD0D

	)

237 
	#MTP_PROPERTY_PHONE_NUMBER_PERSONAL
 0xDD0E

	)

238 
	#MTP_PROPERTY_PHONE_NUMBER_PERSONAL_2
 0xDD0F

	)

239 
	#MTP_PROPERTY_PHONE_NUMBER_BUSINESS
 0xDD10

	)

240 
	#MTP_PROPERTY_PHONE_NUMBER_BUSINESS_2
 0xDD11

	)

241 
	#MTP_PROPERTY_PHONE_NUMBER_MOBILE
 0xDD12

	)

242 
	#MTP_PROPERTY_PHONE_NUMBER_MOBILE_2
 0xDD13

	)

243 
	#MTP_PROPERTY_FAX_NUMBER_PRIMARY
 0xDD14

	)

244 
	#MTP_PROPERTY_FAX_NUMBER_PERSONAL
 0xDD15

	)

245 
	#MTP_PROPERTY_FAX_NUMBER_BUSINESS
 0xDD16

	)

246 
	#MTP_PROPERTY_PAGER_NUMBER
 0xDD17

	)

247 
	#MTP_PROPERTY_PHONE_NUMBER_OTHERS
 0xDD18

	)

248 
	#MTP_PROPERTY_PRIMARY_WEB_ADDRESS
 0xDD19

	)

249 
	#MTP_PROPERTY_PERSONAL_WEB_ADDRESS
 0xDD1A

	)

250 
	#MTP_PROPERTY_BUSINESS_WEB_ADDRESS
 0xDD1B

	)

251 
	#MTP_PROPERTY_INSTANT_MESSANGER_ADDRESS
 0xDD1C

	)

252 
	#MTP_PROPERTY_INSTANT_MESSANGER_ADDRESS_2
 0xDD1D

	)

253 
	#MTP_PROPERTY_INSTANT_MESSANGER_ADDRESS_3
 0xDD1E

	)

254 
	#MTP_PROPERTY_POSTAL_ADDRESS_PERSONAL_FULL
 0xDD1F

	)

255 
	#MTP_PROPERTY_POSTAL_ADDRESS_PERSONAL_LINE_1
 0xDD20

	)

256 
	#MTP_PROPERTY_POSTAL_ADDRESS_PERSONAL_LINE_2
 0xDD21

	)

257 
	#MTP_PROPERTY_POSTAL_ADDRESS_PERSONAL_CITY
 0xDD22

	)

258 
	#MTP_PROPERTY_POSTAL_ADDRESS_PERSONAL_REGION
 0xDD23

	)

259 
	#MTP_PROPERTY_POSTAL_ADDRESS_PERSONAL_POSTAL_CODE
 0xDD24

	)

260 
	#MTP_PROPERTY_POSTAL_ADDRESS_PERSONAL_COUNTRY
 0xDD25

	)

261 
	#MTP_PROPERTY_POSTAL_ADDRESS_BUSINESS_FULL
 0xDD26

	)

262 
	#MTP_PROPERTY_POSTAL_ADDRESS_BUSINESS_LINE_1
 0xDD27

	)

263 
	#MTP_PROPERTY_POSTAL_ADDRESS_BUSINESS_LINE_2
 0xDD28

	)

264 
	#MTP_PROPERTY_POSTAL_ADDRESS_BUSINESS_CITY
 0xDD29

	)

265 
	#MTP_PROPERTY_POSTAL_ADDRESS_BUSINESS_REGION
 0xDD2A

	)

266 
	#MTP_PROPERTY_POSTAL_ADDRESS_BUSINESS_POSTAL_CODE
 0xDD2B

	)

267 
	#MTP_PROPERTY_POSTAL_ADDRESS_BUSINESS_COUNTRY
 0xDD2C

	)

268 
	#MTP_PROPERTY_POSTAL_ADDRESS_OTHER_FULL
 0xDD2D

	)

269 
	#MTP_PROPERTY_POSTAL_ADDRESS_OTHER_LINE_1
 0xDD2E

	)

270 
	#MTP_PROPERTY_POSTAL_ADDRESS_OTHER_LINE_2
 0xDD2F

	)

271 
	#MTP_PROPERTY_POSTAL_ADDRESS_OTHER_CITY
 0xDD30

	)

272 
	#MTP_PROPERTY_POSTAL_ADDRESS_OTHER_REGION
 0xDD31

	)

273 
	#MTP_PROPERTY_POSTAL_ADDRESS_OTHER_POSTAL_CODE
 0xDD32

	)

274 
	#MTP_PROPERTY_POSTAL_ADDRESS_OTHER_COUNTRY
 0xDD33

	)

275 
	#MTP_PROPERTY_ORGANIZATION_NAME
 0xDD34

	)

276 
	#MTP_PROPERTY_PHONETIC_ORGANIZATION_NAME
 0xDD35

	)

277 
	#MTP_PROPERTY_ROLE
 0xDD36

	)

278 
	#MTP_PROPERTY_BIRTHDATE
 0xDD37

	)

279 
	#MTP_PROPERTY_MESSAGE_TO
 0xDD40

	)

280 
	#MTP_PROPERTY_MESSAGE_CC
 0xDD41

	)

281 
	#MTP_PROPERTY_MESSAGE_BCC
 0xDD42

	)

282 
	#MTP_PROPERTY_MESSAGE_READ
 0xDD43

	)

283 
	#MTP_PROPERTY_MESSAGE_RECEIVED_TIME
 0xDD44

	)

284 
	#MTP_PROPERTY_MESSAGE_SENDER
 0xDD45

	)

285 
	#MTP_PROPERTY_ACTIVITY_BEGIN_TIME
 0xDD50

	)

286 
	#MTP_PROPERTY_ACTIVITY_END_TIME
 0xDD51

	)

287 
	#MTP_PROPERTY_ACTIVITY_LOCATION
 0xDD52

	)

288 
	#MTP_PROPERTY_ACTIVITY_REQUIRED_ATTENDEES
 0xDD54

	)

289 
	#MTP_PROPERTY_ACTIVITY_OPTIONAL_ATTENDEES
 0xDD55

	)

290 
	#MTP_PROPERTY_ACTIVITY_RESOURCES
 0xDD56

	)

291 
	#MTP_PROPERTY_ACTIVITY_ACCEPTED
 0xDD57

	)

292 
	#MTP_PROPERTY_ACTIVITY_TENTATIVE
 0xDD58

	)

293 
	#MTP_PROPERTY_ACTIVITY_DECLINED
 0xDD59

	)

294 
	#MTP_PROPERTY_ACTIVITY_REMAINDER_TIME
 0xDD5A

	)

295 
	#MTP_PROPERTY_ACTIVITY_OWNER
 0xDD5B

	)

296 
	#MTP_PROPERTY_ACTIVITY_STATUS
 0xDD5C

	)

297 
	#MTP_PROPERTY_OWNER
 0xDD5D

	)

298 
	#MTP_PROPERTY_EDITOR
 0xDD5E

	)

299 
	#MTP_PROPERTY_WEBMASTER
 0xDD5F

	)

300 
	#MTP_PROPERTY_URL_SOURCE
 0xDD60

	)

301 
	#MTP_PROPERTY_URL_DESTINATION
 0xDD61

	)

302 
	#MTP_PROPERTY_TIME_BOOKMARK
 0xDD62

	)

303 
	#MTP_PROPERTY_OBJECT_BOOKMARK
 0xDD63

	)

304 
	#MTP_PROPERTY_BYTE_BOOKMARK
 0xDD64

	)

305 
	#MTP_PROPERTY_LAST_BUILD_DATE
 0xDD70

	)

306 
	#MTP_PROPERTY_TIME_TO_LIVE
 0xDD71

	)

307 
	#MTP_PROPERTY_MEDIA_GUID
 0xDD72

	)

310 
	#MTP_DEVICE_PROPERTY_UNDEFINED
 0x5000

	)

311 
	#MTP_DEVICE_PROPERTY_BATTERY_LEVEL
 0x5001

	)

312 
	#MTP_DEVICE_PROPERTY_FUNCTIONAL_MODE
 0x5002

	)

313 
	#MTP_DEVICE_PROPERTY_IMAGE_SIZE
 0x5003

	)

314 
	#MTP_DEVICE_PROPERTY_COMPRESSION_SETTING
 0x5004

	)

315 
	#MTP_DEVICE_PROPERTY_WHITE_BALANCE
 0x5005

	)

316 
	#MTP_DEVICE_PROPERTY_RGB_GAIN
 0x5006

	)

317 
	#MTP_DEVICE_PROPERTY_F_NUMBER
 0x5007

	)

318 
	#MTP_DEVICE_PROPERTY_FOCAL_LENGTH
 0x5008

	)

319 
	#MTP_DEVICE_PROPERTY_FOCUS_DISTANCE
 0x5009

	)

320 
	#MTP_DEVICE_PROPERTY_FOCUS_MODE
 0x500A

	)

321 
	#MTP_DEVICE_PROPERTY_EXPOSURE_METERING_MODE
 0x500B

	)

322 
	#MTP_DEVICE_PROPERTY_FLASH_MODE
 0x500C

	)

323 
	#MTP_DEVICE_PROPERTY_EXPOSURE_TIME
 0x500D

	)

324 
	#MTP_DEVICE_PROPERTY_EXPOSURE_PROGRAM_MODE
 0x500E

	)

325 
	#MTP_DEVICE_PROPERTY_EXPOSURE_INDEX
 0x500F

	)

326 
	#MTP_DEVICE_PROPERTY_EXPOSURE_BIAS_COMPENSATION
 0x5010

	)

327 
	#MTP_DEVICE_PROPERTY_DATETIME
 0x5011

	)

328 
	#MTP_DEVICE_PROPERTY_CAPTURE_DELAY
 0x5012

	)

329 
	#MTP_DEVICE_PROPERTY_STILL_CAPTURE_MODE
 0x5013

	)

330 
	#MTP_DEVICE_PROPERTY_CONTRAST
 0x5014

	)

331 
	#MTP_DEVICE_PROPERTY_SHARPNESS
 0x5015

	)

332 
	#MTP_DEVICE_PROPERTY_DIGITAL_ZOOM
 0x5016

	)

333 
	#MTP_DEVICE_PROPERTY_EFFECT_MODE
 0x5017

	)

334 
	#MTP_DEVICE_PROPERTY_BURST_NUMBER
 0x5018

	)

335 
	#MTP_DEVICE_PROPERTY_BURST_INTERVAL
 0x5019

	)

336 
	#MTP_DEVICE_PROPERTY_TIMELAPSE_NUMBER
 0x501A

	)

337 
	#MTP_DEVICE_PROPERTY_TIMELAPSE_INTERVAL
 0x501B

	)

338 
	#MTP_DEVICE_PROPERTY_FOCUS_METERING_MODE
 0x501C

	)

339 
	#MTP_DEVICE_PROPERTY_UPLOAD_URL
 0x501D

	)

340 
	#MTP_DEVICE_PROPERTY_ARTIST
 0x501E

	)

341 
	#MTP_DEVICE_PROPERTY_COPYRIGHT_INFO
 0x501F

	)

342 
	#MTP_DEVICE_PROPERTY_SYNCHRONIZATION_PARTNER
 0xD401

	)

343 
	#MTP_DEVICE_PROPERTY_DEVICE_FRIENDLY_NAME
 0xD402

	)

344 
	#MTP_DEVICE_PROPERTY_VOLUME
 0xD403

	)

345 
	#MTP_DEVICE_PROPERTY_SUPPORTED_FORMATS_ORDERED
 0xD404

	)

346 
	#MTP_DEVICE_PROPERTY_DEVICE_ICON
 0xD405

	)

347 
	#MTP_DEVICE_PROPERTY_PLAYBACK_RATE
 0xD410

	)

348 
	#MTP_DEVICE_PROPERTY_PLAYBACK_OBJECT
 0xD411

	)

349 
	#MTP_DEVICE_PROPERTY_PLAYBACK_CONTAINER_INDEX
 0xD412

	)

350 
	#MTP_DEVICE_PROPERTY_SESSION_INITIATOR_VERSION_INFO
 0xD406

	)

351 
	#MTP_DEVICE_PROPERTY_PERCEIVED_DEVICE_TYPE
 0xD407

	)

354 
	#MTP_OPERATION_GET_DEVICE_INFO
 0x1001

	)

355 
	#MTP_OPERATION_OPEN_SESSION
 0x1002

	)

356 
	#MTP_OPERATION_CLOSE_SESSION
 0x1003

	)

357 
	#MTP_OPERATION_GET_STORAGE_IDS
 0x1004

	)

358 
	#MTP_OPERATION_GET_STORAGE_INFO
 0x1005

	)

359 
	#MTP_OPERATION_GET_NUM_OBJECTS
 0x1006

	)

360 
	#MTP_OPERATION_GET_OBJECT_HANDLES
 0x1007

	)

361 
	#MTP_OPERATION_GET_OBJECT_INFO
 0x1008

	)

362 
	#MTP_OPERATION_GET_OBJECT
 0x1009

	)

363 
	#MTP_OPERATION_GET_THUMB
 0x100A

	)

364 
	#MTP_OPERATION_DELETE_OBJECT
 0x100B

	)

365 
	#MTP_OPERATION_SEND_OBJECT_INFO
 0x100C

	)

366 
	#MTP_OPERATION_SEND_OBJECT
 0x100D

	)

367 
	#MTP_OPERATION_INITIATE_CAPTURE
 0x100E

	)

368 
	#MTP_OPERATION_FORMAT_STORE
 0x100F

	)

369 
	#MTP_OPERATION_RESET_DEVICE
 0x1010

	)

370 
	#MTP_OPERATION_SELF_TEST
 0x1011

	)

371 
	#MTP_OPERATION_SET_OBJECT_PROTECTION
 0x1012

	)

372 
	#MTP_OPERATION_POWER_DOWN
 0x1013

	)

373 
	#MTP_OPERATION_GET_DEVICE_PROP_DESC
 0x1014

	)

374 
	#MTP_OPERATION_GET_DEVICE_PROP_VALUE
 0x1015

	)

375 
	#MTP_OPERATION_SET_DEVICE_PROP_VALUE
 0x1016

	)

376 
	#MTP_OPERATION_RESET_DEVICE_PROP_VALUE
 0x1017

	)

377 
	#MTP_OPERATION_TERMINATE_OPEN_CAPTURE
 0x1018

	)

378 
	#MTP_OPERATION_MOVE_OBJECT
 0x1019

	)

379 
	#MTP_OPERATION_COPY_OBJECT
 0x101A

	)

380 
	#MTP_OPERATION_GET_PARTIAL_OBJECT
 0x101B

	)

381 
	#MTP_OPERATION_INITIATE_OPEN_CAPTURE
 0x101C

	)

382 
	#MTP_OPERATION_GET_OBJECT_PROPS_SUPPORTED
 0x9801

	)

383 
	#MTP_OPERATION_GET_OBJECT_PROP_DESC
 0x9802

	)

384 
	#MTP_OPERATION_GET_OBJECT_PROP_VALUE
 0x9803

	)

385 
	#MTP_OPERATION_SET_OBJECT_PROP_VALUE
 0x9804

	)

386 
	#MTP_OPERATION_GET_OBJECT_PROP_LIST
 0x9805

	)

387 
	#MTP_OPERATION_SET_OBJECT_PROP_LIST
 0x9806

	)

388 
	#MTP_OPERATION_GET_INTERDEPENDENT_PROP_DESC
 0x9807

	)

389 
	#MTP_OPERATION_SEND_OBJECT_PROP_LIST
 0x9808

	)

390 
	#MTP_OPERATION_GET_OBJECT_REFERENCES
 0x9810

	)

391 
	#MTP_OPERATION_SET_OBJECT_REFERENCES
 0x9811

	)

392 
	#MTP_OPERATION_SKIP
 0x9820

	)

397 
	#MTP_OPERATION_GET_PARTIAL_OBJECT_64
 0x95C1

	)

399 
	#MTP_OPERATION_SEND_PARTIAL_OBJECT
 0x95C2

	)

401 
	#MTP_OPERATION_TRUNCATE_OBJECT
 0x95C3

	)

403 
	#MTP_OPERATION_BEGIN_EDIT_OBJECT
 0x95C4

	)

405 
	#MTP_OPERATION_END_EDIT_OBJECT
 0x95C5

	)

408 
	#MTP_RESPONSE_UNDEFINED
 0x2000

	)

409 
	#MTP_RESPONSE_OK
 0x2001

	)

410 
	#MTP_RESPONSE_GENERAL_ERROR
 0x2002

	)

411 
	#MTP_RESPONSE_SESSION_NOT_OPEN
 0x2003

	)

412 
	#MTP_RESPONSE_INVALID_TRANSACTION_ID
 0x2004

	)

413 
	#MTP_RESPONSE_OPERATION_NOT_SUPPORTED
 0x2005

	)

414 
	#MTP_RESPONSE_PARAMETER_NOT_SUPPORTED
 0x2006

	)

415 
	#MTP_RESPONSE_INCOMPLETE_TRANSFER
 0x2007

	)

416 
	#MTP_RESPONSE_INVALID_STORAGE_ID
 0x2008

	)

417 
	#MTP_RESPONSE_INVALID_OBJECT_HANDLE
 0x2009

	)

418 
	#MTP_RESPONSE_DEVICE_PROP_NOT_SUPPORTED
 0x200A

	)

419 
	#MTP_RESPONSE_INVALID_OBJECT_FORMAT_CODE
 0x200B

	)

420 
	#MTP_RESPONSE_STORAGE_FULL
 0x200C

	)

421 
	#MTP_RESPONSE_OBJECT_WRITE_PROTECTED
 0x200D

	)

422 
	#MTP_RESPONSE_STORE_READ_ONLY
 0x200E

	)

423 
	#MTP_RESPONSE_ACCESS_DENIED
 0x200F

	)

424 
	#MTP_RESPONSE_NO_THUMBNAIL_PRESENT
 0x2010

	)

425 
	#MTP_RESPONSE_SELF_TEST_FAILED
 0x2011

	)

426 
	#MTP_RESPONSE_PARTIAL_DELETION
 0x2012

	)

427 
	#MTP_RESPONSE_STORE_NOT_AVAILABLE
 0x2013

	)

428 
	#MTP_RESPONSE_SPECIFICATION_BY_FORMAT_UNSUPPORTED
 0x2014

	)

429 
	#MTP_RESPONSE_NO_VALID_OBJECT_INFO
 0x2015

	)

430 
	#MTP_RESPONSE_INVALID_CODE_FORMAT
 0x2016

	)

431 
	#MTP_RESPONSE_UNKNOWN_VENDOR_CODE
 0x2017

	)

432 
	#MTP_RESPONSE_CAPTURE_ALREADY_TERMINATED
 0x2018

	)

433 
	#MTP_RESPONSE_DEVICE_BUSY
 0x2019

	)

434 
	#MTP_RESPONSE_INVALID_PARENT_OBJECT
 0x201A

	)

435 
	#MTP_RESPONSE_INVALID_DEVICE_PROP_FORMAT
 0x201B

	)

436 
	#MTP_RESPONSE_INVALID_DEVICE_PROP_VALUE
 0x201C

	)

437 
	#MTP_RESPONSE_INVALID_PARAMETER
 0x201D

	)

438 
	#MTP_RESPONSE_SESSION_ALREADY_OPEN
 0x201E

	)

439 
	#MTP_RESPONSE_TRANSACTION_CANCELLED
 0x201F

	)

440 
	#MTP_RESPONSE_SPECIFICATION_OF_DESTINATION_UNSUPPORTED
 0x2020

	)

441 
	#MTP_RESPONSE_INVALID_OBJECT_PROP_CODE
 0xA801

	)

442 
	#MTP_RESPONSE_INVALID_OBJECT_PROP_FORMAT
 0xA802

	)

443 
	#MTP_RESPONSE_INVALID_OBJECT_PROP_VALUE
 0xA803

	)

444 
	#MTP_RESPONSE_INVALID_OBJECT_REFERENCE
 0xA804

	)

445 
	#MTP_RESPONSE_GROUP_NOT_SUPPORTED
 0xA805

	)

446 
	#MTP_RESPONSE_INVALID_DATASET
 0xA806

	)

447 
	#MTP_RESPONSE_SPECIFICATION_BY_GROUP_UNSUPPORTED
 0xA807

	)

448 
	#MTP_RESPONSE_SPECIFICATION_BY_DEPTH_UNSUPPORTED
 0xA808

	)

449 
	#MTP_RESPONSE_OBJECT_TOO_LARGE
 0xA809

	)

450 
	#MTP_RESPONSE_OBJECT_PROP_NOT_SUPPORTED
 0xA80A

	)

453 
	#MTP_EVENT_UNDEFINED
 0x4000

	)

454 
	#MTP_EVENT_CANCEL_TRANSACTION
 0x4001

	)

455 
	#MTP_EVENT_OBJECT_ADDED
 0x4002

	)

456 
	#MTP_EVENT_OBJECT_REMOVED
 0x4003

	)

457 
	#MTP_EVENT_STORE_ADDED
 0x4004

	)

458 
	#MTP_EVENT_STORE_REMOVED
 0x4005

	)

459 
	#MTP_EVENT_DEVICE_PROP_CHANGED
 0x4006

	)

460 
	#MTP_EVENT_OBJECT_INFO_CHANGED
 0x4007

	)

461 
	#MTP_EVENT_DEVICE_INFO_CHANGED
 0x4008

	)

462 
	#MTP_EVENT_REQUEST_OBJECT_TRANSFER
 0x4009

	)

463 
	#MTP_EVENT_STORE_FULL
 0x400A

	)

464 
	#MTP_EVENT_DEVICE_RESET
 0x400B

	)

465 
	#MTP_EVENT_STORAGE_INFO_CHANGED
 0x400C

	)

466 
	#MTP_EVENT_CAPTURE_COMPLETE
 0x400D

	)

467 
	#MTP_EVENT_UNREPORTED_STATUS
 0x400E

	)

468 
	#MTP_EVENT_OBJECT_PROP_CHANGED
 0xC801

	)

469 
	#MTP_EVENT_OBJECT_PROP_DESC_CHANGED
 0xC802

	)

470 
	#MTP_EVENT_OBJECT_REFERENCES_CHANGED
 0xC803

	)

473 
	#MTP_STORAGE_FIXED_ROM
 0x0001

	)

474 
	#MTP_STORAGE_REMOVABLE_ROM
 0x0002

	)

475 
	#MTP_STORAGE_FIXED_RAM
 0x0003

	)

476 
	#MTP_STORAGE_REMOVABLE_RAM
 0x0004

	)

479 
	#MTP_STORAGE_FILESYSTEM_FLAT
 0x0001

	)

480 
	#MTP_STORAGE_FILESYSTEM_HIERARCHICAL
 0x0002

	)

481 
	#MTP_STORAGE_FILESYSTEM_DCF
 0x0003

	)

484 
	#MTP_STORAGE_READ_WRITE
 0x0000

	)

485 
	#MTP_STORAGE_READ_ONLY_WITHOUT_DELETE
 0x0001

	)

486 
	#MTP_STORAGE_READ_ONLY_WITH_DELETE
 0x0002

	)

489 
	#MTP_ASSOCIATION_TYPE_UNDEFINED
 0x0000

	)

490 
	#MTP_ASSOCIATION_TYPE_GENERIC_FOLDER
 0x0001

	)

	@src/utils/AndroidThreads.h

17 #i‚de‡
_LIBS_UTILS_ANDROID_THREADS_H


18 
	#_LIBS_UTILS_ANDROID_THREADS_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

23 #i‡
deföed
(
HAVE_PTHREADS
)

24 
	~<±hªad.h
>

27 
	~<utûs/ThªadDefs.h
>

32 #ifde‡
__˝lu•lus


37 
™droidCª©eThªad
(
™droid_thªad_func_t
, *);

40 
™droidCª©eThªadEtc
(
™droid_thªad_func_t
 
íåyFun˘i⁄
,

41 *
u£rD©a
,

42 c⁄° * 
thªadName
,

43 
öt32_t
 
thªadPri‹ôy
,

44 
size_t
 
thªadSèckSize
,

45 
™droid_thªad_id_t
 *
thªadId
);

48 
™droid_thªad_id_t
 
™droidGëThªadId
();

52 
™droidCª©eRawThªadEtc
(
™droid_thªad_func_t
 
íåyFun˘i⁄
,

53 *
u£rD©a
,

54 c⁄° * 
thªadName
,

55 
öt32_t
 
thªadPri‹ôy
,

56 
size_t
 
thªadSèckSize
,

57 
™droid_thªad_id_t
 *
thªadId
);

61 (*
	g™droid_¸óã_thªad_‚
)(
	t™droid_thªad_func_t
 
	tíåyFun˘i⁄
,

62 *
	tu£rD©a
,

63 c⁄° * 
	tthªadName
,

64 
	töt32_t
 
	tthªadPri‹ôy
,

65 
	tsize_t
 
	tthªadSèckSize
,

66 
	t™droid_thªad_id_t
 *
	tthªadId
);

68 
™droidSëCª©eThªadFunc
(
™droid_¸óã_thªad_‚
 
func
);

74 
pid_t
 
™droidGëTid
();

76 #ifde‡
HAVE_ANDROID_OS


81 
™droidSëThªadPri‹ôy
(
pid_t
 
tid
, 
¥io
);

85 
™droidGëThªadPri‹ôy
(
pid_t
 
tid
);

88 #ifde‡
__˝lu•lus


94 #ifde‡
__˝lu•lus


95 
«me•a˚
 
	g™droid
 {

99 
ölöe
 
boﬁ
 
¸óãThªad
(
thªad_func_t
 
f
, *
a
) {

100  
™droidCª©eThªad
(
f
, 
a
Ë? 
	gåue
 : 
Ál£
;

104 
ölöe
 
boﬁ
 
¸óãThªadEtc
(
thªad_func_t
 
íåyFun˘i⁄
,

105 *
u£rD©a
,

106 c⁄° * 
thªadName
 = "android:unnamed_thread",

107 
öt32_t
 
thªadPri‹ôy
 = 
PRIORITY_DEFAULT
,

108 
size_t
 
thªadSèckSize
 = 0,

109 
thªad_id_t
 *
thªadId
 = 0)

111  
™droidCª©eThªadEtc
(
íåyFun˘i⁄
, 
u£rD©a
, 
thªadName
,

112 
thªadPri‹ôy
, 
thªadSèckSize
, 
thªadId
Ë? 
åue
 : 
Ál£
;

116 
ölöe
 
thªad_id_t
 
gëThªadId
() {

117  
™droidGëThªadId
();

	@src/utils/Atomic.h

17 #i‚de‡
ANDROID_UTILS_ATOMIC_H


18 
	#ANDROID_UTILS_ATOMIC_H


	)

20 
	~<cutûs/©omic.h
>

	@src/utils/BasicHashtable.h

17 #i‚de‡
ANDROID_BASIC_HASHTABLE_H


18 
	#ANDROID_BASIC_HASHTABLE_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<utûs/Sh¨edBuf„r.h
>

23 
	~<utûs/Ty≥Hñ≥rs.h
>

25 
«me•a˚
 
	g™droid
 {

28 ˛as†
	cBasicHashèbÀIm∂
 {

29 
	g¥Ÿe˘ed
:

30 
	sBuckë
 {

34 c⁄° 
uöt32_t
 
COLLISION
 = 0x80000000UL;

37 c⁄° 
uöt32_t
 
	gPRESENT
 = 0x40000000UL;

42 c⁄° 
uöt32_t
 
	gHASH_MASK
 = 0x3fffffffUL;

46 
uöt32_t
 
	gcookõ
;

49 
	gíåy
[0];

52 
BasicHashèbÀIm∂
(
size_t
 
íåySize
, 
boﬁ
 
hasTrivülDe°ru˘‹
,

53 
size_t
 
möimumInôülC≠acôy
, 
lﬂdFa˘‹
);

54 
BasicHashèbÀIm∂
(c⁄° BasicHashèbÀIm∂& 
Ÿhî
);

56 
di•o£
();

58 
ölöe
 
edô
() {

59 i‡(
	gmBuckës
 && !
	gSh¨edBuf„r
::
buf„rFromD©a
(
mBuckës
)->
⁄lyOw√r
()) {

60 
˛⁄e
();

64 
£tTo
(c⁄° 
BasicHashèbÀIm∂
& 
Ÿhî
);

65 
˛ór
();

67 
ssize_t
 
√xt
(ssize_à
ödex
) const;

68 
ssize_t
 
föd
(ssize_à
ödex
, 
hash_t
 
hash
, c⁄° * 
__ª°ri˘__
 
key
) const;

69 
size_t
 
add
(
hash_t
 
hash
, c⁄° * 
__ª°ri˘__
 
íåy
);

70 
ªmoveAt
(
size_t
 
ödex
);

71 
ªhash
(
size_t
 
möimumC≠acôy
, 
lﬂdFa˘‹
);

73 c⁄° 
size_t
 
	gmBuckëSize
;

74 c⁄° 
boﬁ
 
	gmHasTrivülDe°ru˘‹
;

75 
size_t
 
	gmC≠acôy
;

76 
	gmLﬂdFa˘‹
;

77 
size_t
 
	gmSize
;

78 
size_t
 
	gmFûÀdBuckës
;

79 
size_t
 
	gmBuckëCou¡
;

80 * 
	gmBuckës
;

82 
ölöe
 c⁄° 
	gBuckë
& 
buckëAt
(c⁄° * 
__ª°ri˘__
 
buckës
, 
size_t
 
ödex
) const {

83  *
	gªöãΩªt_ˇ°
<c⁄° 
	gBuckë
*>(

84 
	g°©ic_ˇ°
<c⁄° 
	guöt8_t
*>(
	gbuckës
Ë+ 
ödex
 * 
	gmBuckëSize
);

87 
ölöe
 
	gBuckë
& 
buckëAt
(* 
__ª°ri˘__
 
buckës
, 
size_t
 
ödex
) const {

88  *
	gªöãΩªt_ˇ°
<
	gBuckë
*>(
	g°©ic_ˇ°
<
	guöt8_t
*>(
	gbuckës
Ë+ 
ödex
 * 
	gmBuckëSize
);

91 
vútuÆ
 
boﬁ
 
com∑ªBuckëKey
(c⁄° 
Buckë
& 
buckë
, c⁄° * 
__ª°ri˘__
 
key
) const = 0;

92 
vútuÆ
 
öôülizeBuckëE¡ry
(
Buckë
& 
buckë
, c⁄° * 
__ª°ri˘__
 
íåy
) const = 0;

93 
vútuÆ
 
de°royBuckëE¡ry
(
Buckë
& 
buckë
) const = 0;

95 
	g¥iv©e
:

96 
˛⁄e
();

99 * 
ÆloˇãBuckës
(
size_t
 
cou¡
) const;

102 
ªÀa£Buckës
(* 
__ª°ri˘__
 
buckës
, 
size_t
 
cou¡
) const;

106 
de°royBuckës
(* 
__ª°ri˘__
 
buckës
, 
size_t
 
cou¡
) const;

110 
c›yBuckës
(c⁄° * 
__ª°ri˘__
 
‰omBuckës
,

111 * 
__ª°ri˘__
 
toBuckës
, 
size_t
 
cou¡
) const;

115 
dëîmöeC≠acôy
(
size_t
 
möimumC≠acôy
, 
lﬂdFa˘‹
,

116 
size_t
* 
__ª°ri˘__
 
outBuckëCou¡
, size_t* __ª°ri˘__ 
outC≠acôy
);

119 
ölöe
 
hash_t
 
åimHash
(hash_à
hash
) {

120  (
	ghash
 & 
	gBuckë
::
HASH_MASK
Ë^ (
hash
 >> 30);

126 
ölöe
 
size_t
 
chaöSèπ
(
hash_t
 
hash
, size_à
cou¡
) {

127  
	ghash
 % 
	gcou¡
;

133 
ölöe
 
size_t
 
chaöIn¸emít
(
hash_t
 
hash
, size_à
cou¡
) {

134  ((
	ghash
 >> 7Ë| (hash << 25)Ë% (
	gcou¡
 - 1) + 1;

139 
ölöe
 
size_t
 
chaöSìk
(size_à
ödex
, size_à
ö¸emít
, size_à
cou¡
) {

140  (
	gödex
 + 
	gö¸emít
Ë% 
	gcou¡
;

169 
	gãm∂©e
 <
ty≥«me
 
	gTKey
,Åy≥«mê
	gTE¡ry
>

170 ˛as†
	cBasicHashèbÀ
 : 
¥iv©e
 
BasicHashèbÀIm∂
 {

171 
public
:

180 
BasicHashèbÀ
(
size_t
 
möimumInôülC≠acôy
 = 0, 
lﬂdFa˘‹
 = 0.75f);

185 
BasicHashèbÀ
(c⁄° BasicHashèbÀ& 
Ÿhî
);

189 
	gvútuÆ
 ~
BasicHashèbÀ
();

196 
ölöe
 
	gBasicHashèbÀ
<
	gTKey
, 
	gTE¡ry
>& 
	g›î©‹
 =(c⁄° 
BasicHashèbÀ
<
TKey
, TE¡ry> & 
	gŸhî
) {

197 
£tTo
(
Ÿhî
);

198  *
	gthis
;

203 
ölöe
 
size_t
 
size
() const {

204  
	gmSize
;

210 
ölöe
 
size_t
 
ˇ∑côy
() const {

211  
	gmC≠acôy
;

217 
ölöe
 
size_t
 
buckëCou¡
() const {

218  
	gmBuckëCou¡
;

222 
ölöe
 
lﬂdFa˘‹
() const {

223  
	gmLﬂdFa˘‹
;

231 
ölöe
 c⁄° 
	gTE¡ry
& 
íåyAt
(
size_t
 
ödex
) const {

232  
íåyF‹
(
buckëAt
(
mBuckës
, 
ödex
));

240 
ölöe
 
	gTE¡ry
& 
edôE¡ryAt
(
size_t
 
ödex
) {

241 
edô
();

242  
íåyF‹
(
buckëAt
(
mBuckës
, 
ödex
));

250 
ölöe
 
˛ór
() {

251 
	gBasicHashèbÀIm∂
::
˛ór
();

263 
ölöe
 
ssize_t
 
√xt
(ssize_à
ödex
) const {

264  
	gBasicHashèbÀIm∂
::
√xt
(
ödex
);

279 
ölöe
 
ssize_t
 
föd
(ssize_à
ödex
, 
hash_t
 
hash
, c⁄° 
TKey
& 
key
) const {

280  
	gBasicHashèbÀIm∂
::
föd
(
ödex
, 
hash
, &
key
);

292 
ölöe
 
size_t
 
add
(
hash_t
 
hash
, c⁄° 
TE¡ry
& 
íåy
) {

293  
	gBasicHashèbÀIm∂
::
add
(
hash
, &
íåy
);

306 
ölöe
 
ªmoveAt
(
size_t
 
ödex
) {

307 
	gBasicHashèbÀIm∂
::
ªmoveAt
(
ödex
);

327 
ölöe
 
ªhash
(
size_t
 
möimumC≠acôy
, 
lﬂdFa˘‹
) {

328 
	gBasicHashèbÀIm∂
::
ªhash
(
möimumC≠acôy
, 
lﬂdFa˘‹
);

331 
	g¥Ÿe˘ed
:

332 
ölöe
 c⁄° 
TE¡ry
& 
íåyF‹
(c⁄° 
Buckë
& 
buckë
) {

333  
ªöãΩªt_ˇ°
<c⁄° 
TE¡ry
&>(
buckë
.
íåy
);

336 
ölöe
 
	gTE¡ry
& 
íåyF‹
(
Buckë
& 
buckë
) {

337  
	gªöãΩªt_ˇ°
<
	gTE¡ry
&>(
	gbuckë
.
	gíåy
);

340 
vútuÆ
 
boﬁ
 
com∑ªBuckëKey
(c⁄° 
Buckë
& 
buckë
, c⁄° * 
__ª°ri˘__
 
key
) const;

341 
vútuÆ
 
öôülizeBuckëE¡ry
(
Buckë
& 
buckë
, c⁄° * 
__ª°ri˘__
 
íåy
) const;

342 
vútuÆ
 
de°royBuckëE¡ry
(
Buckë
& 
buckë
) const;

344 
	g¥iv©e
:

346 
‰õnd
 
˛ass
 
BasicHashèbÀTe°
;

347 
ölöe
 
uöt32_t
 
cookõAt
(
size_t
 
ödex
) const {

348  
buckëAt
(
mBuckës
, 
ödex
).
	gcookõ
;

352 
	gãm∂©e
 <
ty≥«me
 
	gTKey
,Åy≥«mê
	gTE¡ry
>

353 
	gBasicHashèbÀ
<
	gTKey
, 
	gTE¡ry
>::
	$BasicHashèbÀ
(
size_t
 
möimumInôülC≠acôy
, 
lﬂdFa˘‹
) :

354 
	`BasicHashèbÀIm∂
((
TE¡ry
), 
åaôs
<TE¡ry>::
has_åivül_dt‹
,

355 
möimumInôülC≠acôy
, 
lﬂdFa˘‹
) {

356 
	}
}

358 
	gãm∂©e
 <
ty≥«me
 
	gTKey
,Åy≥«mê
	gTE¡ry
>

359 
	gBasicHashèbÀ
<
	gTKey
, 
	gTE¡ry
>::
BasicHashèbÀ
(c⁄° BasicHashèbÀ<
TKey
, 
TE¡ry
>& 
Ÿhî
) :

360 
	$BasicHashèbÀIm∂
(
Ÿhî
) {

361 
	}
}

363 
ãm∂©e
 <
ty≥«me
 
TKey
,Åy≥«mê
	gTE¡ry
>

364 
	gBasicHashèbÀ
<
	gTKey
, 
	gTE¡ry
>::~
	$BasicHashèbÀ
() {

365 
	`di•o£
();

366 
	}
}

368 
	gãm∂©e
 <
ty≥«me
 
	gTKey
,Åy≥«mê
	gTE¡ry
>

369 
boﬁ
 
	gBasicHashèbÀ
<
	gTKey
, 
	gTE¡ry
>::
	$com∑ªBuckëKey
(c⁄° 
Buckë
& 
buckë
,

370 c⁄° * 
__ª°ri˘__
 
key
) const {

371  
	`íåyF‹
(
buckë
).
	`gëKey
(Ë=*
°©ic_ˇ°
<c⁄° 
TKey
*>(
key
);

372 
	}
}

374 
	gãm∂©e
 <
ty≥«me
 
	gTKey
,Åy≥«mê
	gTE¡ry
>

375 
	gBasicHashèbÀ
<
	gTKey
, 
	gTE¡ry
>::
	$öôülizeBuckëE¡ry
(
Buckë
& 
buckë
,

376 c⁄° * 
__ª°ri˘__
 
íåy
) const {

377 i‡(!
åaôs
<
TE¡ry
>::
has_åivül_c›y
) {

378 
	`√w
 (&
	`íåyF‹
(
buckë
)Ë
	`TE¡ry
(*(
°©ic_ˇ°
<c⁄° 
TE¡ry
*>(
íåy
)));

380 
	`mem˝y
(&
	`íåyF‹
(
buckë
), 
íåy
, (
TE¡ry
));

382 
	}
}

384 
	gãm∂©e
 <
ty≥«me
 
	gTKey
,Åy≥«mê
	gTE¡ry
>

385 
	gBasicHashèbÀ
<
	gTKey
, 
	gTE¡ry
>::
	$de°royBuckëE¡ry
(
Buckë
& 
buckë
) const {

386 i‡(!
åaôs
<
TE¡ry
>::
has_åivül_dt‹
) {

387 
	`íåyF‹
(
buckë
).~
	`TE¡ry
();

389 
	}
}

	@src/utils/BitSet.h

17 #i‚de‡
UTILS_BITSET_H


18 
	#UTILS_BITSET_H


	)

20 
	~<°döt.h
>

21 
	~<utûs/Ty≥Hñ≥rs.h
>

27 
«me•a˚
 
	g™droid
 {

30 
	sBôSë32
 {

31 
uöt32_t
 
	gvÆue
;

33 
ölöe
 
BôSë32
(Ë: 
vÆue
(0) { }

34 
ex∂icô
 
ölöe
 
BôSë32
(
uöt32_t
 
vÆue
) : value(value) { }

37 
ölöe
 
uöt32_t
 
vÆueF‹Bô
(uöt32_à
n
) {  0x80000000 >>Ç; }

40 
ölöe
 
˛ór
(Ë{ 
	gvÆue
 = 0; }

43 
ölöe
 
uöt32_t
 
cou¡
(Ëc⁄° {  
__buûtö_p›cou¡
(
vÆue
); }

46 
ölöe
 
boﬁ
 
isEm±y
(Ëc⁄° {  ! 
	gvÆue
; }

49 
ölöe
 
boﬁ
 
isFuŒ
(Ëc⁄° {  
	gvÆue
 == 0xffffffff; }

52 
ölöe
 
boﬁ
 
hasBô
(
uöt32_t
 
n
Ëc⁄° {  
	gvÆue
 & 
vÆueF‹Bô
(n); }

55 
ölöe
 
m¨kBô
(
uöt32_t
 
n
Ë{ 
	gvÆue
 |
vÆueF‹Bô
(n); }

58 
ölöe
 
˛órBô
(
uöt32_t
 
n
Ë{ 
	gvÆue
 &~ 
vÆueF‹Bô
(n); }

62 
ölöe
 
uöt32_t
 
fú°M¨kedBô
(Ëc⁄° {  
__buûtö_˛z
(
vÆue
); }

66 
ölöe
 
uöt32_t
 
fú°Unm¨kedBô
(Ëc⁄° {  
__buûtö_˛z
(~ 
vÆue
); }

70 
ölöe
 
uöt32_t
 
œ°M¨kedBô
(Ëc⁄° {  31 - 
__buûtö_˘z
(
vÆue
); }

74 
ölöe
 
uöt32_t
 
˛órFú°M¨kedBô
() {

75 
uöt32_t
 
	gn
 = 
fú°M¨kedBô
();

76 
˛órBô
(
n
);

77  
	gn
;

82 
ölöe
 
uöt32_t
 
m¨kFú°Unm¨kedBô
() {

83 
uöt32_t
 
	gn
 = 
fú°Unm¨kedBô
();

84 
m¨kBô
(
n
);

85  
	gn
;

90 
ölöe
 
uöt32_t
 
˛órLa°M¨kedBô
() {

91 
uöt32_t
 
	gn
 = 
œ°M¨kedBô
();

92 
˛órBô
(
n
);

93  
	gn
;

98 
ölöe
 
uöt32_t
 
gëIndexOfBô
(uöt32_à
n
) const {

99  
__buûtö_p›cou¡
(
vÆue
 & ~(0xffffffffUL >> 
n
));

102 
ölöe
 
boﬁ
 
	g›î©‹
=(c⁄° 
BôSë32
& 
Ÿhî
Ëc⁄° {  
vÆue
 == other.value; }

103 
ölöe
 
boﬁ
 
	g›î©‹
!(c⁄° 
BôSë32
& 
Ÿhî
Ëc⁄° {  
vÆue
 != other.value; }

106 
ANDROID_BASIC_TYPES_TRAITS
(
BôSë32
)

	@src/utils/BlobCache.h

17 #i‚de‡
ANDROID_BLOB_CACHE_H


18 
	#ANDROID_BLOB_CACHE_H


	)

20 
	~<°ddef.h
>

22 
	~<utûs/FœâíabÀ.h
>

23 
	~<utûs/RefBa£.h
>

24 
	~<utûs/S‹ãdVe˘‹.h
>

25 
	~<utûs/thªads.h
>

27 
«me•a˚
 
	g™droid
 {

36 
˛ass
 
	gBlobCache
 : 
public
 
RefBa£
,Öubli¯
	gFœâíabÀ
 {

37 
	gpublic
:

43 
BlobCache
(
size_t
 
maxKeySize
, size_à
maxVÆueSize
, size_à
maxTŸÆSize
);

60 
£t
(c⁄° * 
key
, 
size_t
 
keySize
, c⁄° * 
vÆue
,

61 
size_t
 
vÆueSize
);

79 
size_t
 
gë
(c⁄° * 
key
, size_à
keySize
, * 
vÆue
, size_à
vÆueSize
);

83 
vútuÆ
 
size_t
 
gëFœâíedSize
() const;

88 
vútuÆ
 
size_t
 
gëFdCou¡
() const;

98 
vútuÆ
 
°©us_t
 
Ê©ãn
(* 
buf„r
, 
size_t
 
size
, 
fds
[],

99 
size_t
 
cou¡
) const;

109 
vútuÆ
 
°©us_t
 
unÊ©ãn
(c⁄°* 
buf„r
, 
size_t
 
size
, 
fds
[],

110 
size_t
 
cou¡
);

112 
	g¥iv©e
:

114 
BlobCache
(const BlobCache&);

115 
	g›î©‹
=(c⁄° 
BlobCache
&);

118 
blob_øndom
();

122 
˛ón
();

126 
boﬁ
 
isCÀ™abÀ
() const;

129 ˛as†
	cBlob
 : 
public
 
RefBa£
 {

130 
public
:

131 
Blob
(c⁄° * 
d©a
, 
size_t
 
size
, 
boﬁ
 
c›yD©a
);

132 ~
Blob
();

134 
boﬁ
 
	g›î©‹
<(c⁄° 
	gBlob
& 
	grhs
) const;

136 c⁄° * 
gëD©a
() const;

137 
size_t
 
gëSize
() const;

139 
	g¥iv©e
:

141 
Blob
(const Blob&);

142 
	g›î©‹
=(c⁄° 
Blob
&);

145 c⁄° * 
	gmD©a
;

148 
size_t
 
	gmSize
;

152 
boﬁ
 
	gmOwnsD©a
;

156 ˛as†
	cCacheE¡ry
 {

157 
	gpublic
:

158 
CacheE¡ry
();

159 
CacheE¡ry
(c⁄° 
•
<
Blob
>& 
key
, c⁄° sp<Blob>& 
vÆue
);

160 
CacheE¡ry
(c⁄° CacheE¡ry& 
˚
);

162 
boﬁ
 
	g›î©‹
<(c⁄° 
	gCacheE¡ry
& 
	grhs
) const;

163 c⁄° 
	gCacheE¡ry
& 
	g›î©‹
=(c⁄° 
CacheE¡ry
&);

165 
	g•
<
	gBlob
> 
gëKey
() const;

166 
	g•
<
	gBlob
> 
gëVÆue
() const;

168 
£tVÆue
(c⁄° 
•
<
Blob
>& 
vÆue
);

170 
	g¥iv©e
:

173 
•
<
Blob
> 
mKey
;

176 
	g•
<
	gBlob
> 
	gmVÆue
;

181 
	sHódî
 {

184 
uöt32_t
 
	gmMagicNumbî
;

187 
uöt32_t
 
	gmBlobCacheVîsi⁄
;

191 
uöt32_t
 
	gmDevi˚Vîsi⁄
;

195 
size_t
 
	gmNumE¡rõs
;

207 
	sE¡ryHódî
 {

209 
size_t
 
	gmKeySize
;

212 
size_t
 
	gmVÆueSize
;

216 
uöt8_t
 
	gmD©a
[];

222 c⁄° 
size_t
 
	gmMaxKeySize
;

227 c⁄° 
size_t
 
	gmMaxVÆueSize
;

234 c⁄° 
size_t
 
	gmMaxTŸÆSize
;

238 
size_t
 
	gmTŸÆSize
;

242 
	gmR™dSèã
[3];

246 
	gS‹ãdVe˘‹
<
	gCacheE¡ry
> 
	gmCacheE¡rõs
;

	@src/utils/BufferedTextOutput.h

17 #i‚de‡
ANDROID_BUFFEREDTEXTOUTPUT_H


18 
	#ANDROID_BUFFEREDTEXTOUTPUT_H


	)

20 
	~<utûs/TextOuçut.h
>

21 
	~<utûs/thªads.h
>

22 
	~<cutûs/uio.h
>

25 
«me•a˚
 
	g™droid
 {

27 ˛as†
	cBuf„ªdTextOuçut
 : 
public
 
TextOuçut


29 
public
:

32 
MULTITHREADED
 = 0x0001

35 
Buf„ªdTextOuçut
(
uöt32_t
 
Êags
 = 0);

36 
	gvútuÆ
 ~
Buf„ªdTextOuçut
();

38 
vútuÆ
 
°©us_t
 
¥öt
(c⁄° * 
txt
, 
size_t
 
Àn
);

39 
vútuÆ
 
moveIndít
(
dñè
);

41 
vútuÆ
 
pushBundÀ
();

42 
vútuÆ
 
p›BundÀ
();

44 
	g¥Ÿe˘ed
:

45 
vútuÆ
 
°©us_t
 
wrôeLöes
(c⁄° 
iovec
& 
vec
, 
size_t
 
N
) = 0;

47 
	g¥iv©e
:

48 
Buf„rSèã
;

49 
	gThªadSèã
;

51 
ThªadSèã
*
gëThªadSèã
();

52 
thªadDe°ru˘‹
(*
°
);

54 
Buf„rSèã
*
gëBuf„r
() const;

56 
uöt32_t
 
	gmFœgs
;

57 c⁄° 
öt32_t
 
	gmSeq
;

58 c⁄° 
öt32_t
 
	gmIndex
;

60 
Muãx
 
	gmLock
;

61 
Buf„rSèã
* 
	gmGlobÆSèã
;

	@src/utils/ByteOrder.h

19 #i‚de‡
_LIBS_UTILS_BYTE_ORDER_H


20 
	#_LIBS_UTILS_BYTE_ORDER_H


	)

22 
	~<°döt.h
>

23 
	~<sys/ty≥s.h
>

24 #ifde‡
HAVE_WINSOCK


25 
	~<wösock2.h
>

27 
	~<√töë/ö.h
>

41 
ölöe
 
uöt32_t
 
	$™droid_sw≠_l⁄g
(
uöt32_t
 
v
)

43  (
v
<<24) | ((v<<8)&0x00FF0000) | ((v>>8)&0x0000FF00) | (v>>24);

44 
	}
}

46 
ölöe
 
uöt16_t
 
	$™droid_sw≠_sh‹t
(
uöt16_t
 
v
)

48  (
v
<<8) | (v>>8);

49 
	}
}

51 
	#DEVICE_BYTE_ORDER
 
LITTLE_ENDIAN


	)

53 #i‡
BYTE_ORDER
 =
DEVICE_BYTE_ORDER


55 
	#dtohl
(
x
Ë(x)

	)

56 
	#dtohs
(
x
Ë(x)

	)

57 
	#htodl
(
x
Ë(x)

	)

58 
	#htods
(
x
Ë(x)

	)

62 
	#dtohl
(
x
Ë(
	`™droid_sw≠_l⁄g
(x))

	)

63 
	#dtohs
(
x
Ë(
	`™droid_sw≠_sh‹t
(x))

	)

64 
	#htodl
(
x
Ë(
	`™droid_sw≠_l⁄g
(x))

	)

65 
	#htods
(
x
Ë(
	`™droid_sw≠_sh‹t
(x))

	)

69 #i‡
BYTE_ORDER
 =
LITTLE_ENDIAN


70 
	#‰omÀl
(
x
Ë(x)

	)

71 
	#‰omÀs
(
x
Ë(x)

	)

72 
	#tﬁñ
(
x
Ë(x)

	)

73 
	#tﬁes
(
x
Ë(x)

	)

75 
	#‰omÀl
(
x
Ë(
	`™droid_sw≠_l⁄g
(x))

	)

76 
	#‰omÀs
(
x
Ë(
	`™droid_sw≠_sh‹t
(x))

	)

77 
	#tﬁñ
(
x
Ë(
	`™droid_sw≠_l⁄g
(x))

	)

78 
	#tﬁes
(
x
Ë(
	`™droid_sw≠_sh‹t
(x))

	)

	@src/utils/CallStack.h

17 #i‚de‡
ANDROID_CALLSTACK_H


18 
	#ANDROID_CALLSTACK_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

23 
	~<utûs/Såög8.h
>

24 
	~<c‹ks¸ew/backåa˚.h
>

28 
«me•a˚
 
	g™droid
 {

30 ˛as†
	cCÆlSèck


32 
	gpublic
:

34 
MAX_DEPTH
 = 31

37 
CÆlSèck
();

38 
CÆlSèck
(c⁄° CÆlSèck& 
rhs
);

39 ~
CÆlSèck
();

41 
	gCÆlSèck
& 
	g›î©‹
 = (c⁄° 
CÆlSèck
& 
rhs
);

43 
boﬁ
 
	g›î©‹
 =(c⁄° 
CÆlSèck
& 
rhs
) const;

44 
boﬁ
 
	g›î©‹
 !(c⁄° 
CÆlSèck
& 
rhs
) const;

45 
boﬁ
 
	g›î©‹
 < (c⁄° 
	gCÆlSèck
& 
	grhs
) const;

46 
boﬁ
 
	g›î©‹
 >(c⁄° 
CÆlSèck
& 
rhs
) const;

47 
boﬁ
 
	g›î©‹
 > (c⁄° 
	gCÆlSèck
& 
	grhs
) const;

48 
boﬁ
 
	g›î©‹
 <(c⁄° 
CÆlSèck
& 
rhs
) const;

50 c⁄° * 
	g›î©‹
 [] (
	gödex
) const;

52 
˛ór
();

54 
upd©e
(
öt32_t
 
ign‹eDïth
=1, i¡32_à
maxDïth
=
MAX_DEPTH
);

57 
dump
(c⁄° * 
¥efix
 = 0) const;

60 
Såög8
 
toSåög
(c⁄° * 
¥efix
 = 0) const;

62 
size_t
 
size
(Ëc⁄° {  
	gmCou¡
; }

64 
	g¥iv©e
:

65 
size_t
 
mCou¡
;

66 
backåa˚_‰ame_t
 
	gmSèck
[
MAX_DEPTH
];

	@src/utils/Compat.h

17 #i‚de‡
__LIB_UTILS_COMPAT_H


18 
	#__LIB_UTILS_COMPAT_H


	)

20 
	~<uni°d.h
>

23 #i‚de‡
HAVE_OFF64_T


24 #i‡
_FILE_OFFSET_BITS
 < 64

28 
off_t
 
	toff64_t
;

30 
ölöe
 
off64_t
 
	$l£ek64
(
fd
, 
off64_t
 
off£t
, 
whí˚
) {

31  
	`l£ek
(
fd
, 
off£t
, 
whí˚
);

32 
	}
}

34 #ifde‡
HAVE_PREAD


35 
ölöe
 
ssize_t
 
	$¥ód64
(
fd
, * 
buf
, 
size_t
 
nbyãs
, 
off64_t
 
off£t
) {

36  
	`¥ód
(
fd
, 
buf
, 
nbyãs
, 
off£t
);

37 
	}
}

42 #i‡
HAVE_PRINTF_ZD


43 
	#ZD
 "%zd"

	)

44 
	#ZD_TYPE
 
ssize_t


	)

46 
	#ZD
 "%ld"

	)

47 
	#ZD_TYPE
 

	)

55 #i‚de‡
TEMP_FAILURE_RETRY


57 
	#TEMP_FAILURE_RETRY
(
exp
) ({ \

58 
	`ty≥of
 (
exp
Ë
_rc
; \

60 
_rc
 = (
exp
); \

61 } 
_rc
 =-1 && 
î∫o
 =
EINTR
); \

62 
_rc
; })

	)

	@src/utils/Condition.h

17 #i‚de‡
_LIBS_UTILS_CONDITION_H


18 
	#_LIBS_UTILS_CONDITION_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<time.h
>

24 #i‡
deföed
(
HAVE_PTHREADS
)

25 
	~<±hªad.h
>

28 
	~<utûs/Eº‹s.h
>

29 
	~<utûs/Muãx.h
>

30 
	~<utûs/Timîs.h
>

33 
«me•a˚
 
	g™droid
 {

44 ˛as†
	cC⁄dôi⁄
 {

45 
	gpublic
:

47 
PRIVATE
 = 0,

48 
	gSHARED
 = 1

51 
C⁄dôi⁄
();

52 
C⁄dôi⁄
(
ty≥
);

53 ~
C⁄dôi⁄
();

55 
°©us_t
 
waô
(
Muãx
& 
muãx
);

57 
°©us_t
 
waôRñ©ive
(
Muãx
& 
muãx
, 
n£cs_t
 
ª…ime
);

59 
sig«l
();

61 
brﬂdˇ°
();

63 
	g¥iv©e
:

64 #i‡
deföed
(
HAVE_PTHREADS
)

65 
±hªad_c⁄d_t
 
mC⁄d
;

67 * 
	gmSèã
;

73 #i‡
	$deföed
(
HAVE_PTHREADS
)

75 
ölöe
 
C⁄dôi⁄
::
	$C⁄dôi⁄
() {

76 
	`±hªad_c⁄d_öô
(&
mC⁄d
, 
NULL
);

77 
	}
}

78 
ölöe
 
	gC⁄dôi⁄
::
	$C⁄dôi⁄
(
ty≥
) {

79 i‡(
ty≥
 =
SHARED
) {

80 
±hªad_c⁄d©å_t
 
©å
;

81 
	`±hªad_c⁄d©å_öô
(&
©å
);

82 
	`±hªad_c⁄d©å_£çsh¨ed
(&
©å
, 
PTHREAD_PROCESS_SHARED
);

83 
	`±hªad_c⁄d_öô
(&
mC⁄d
, &
©å
);

84 
	`±hªad_c⁄d©å_de°roy
(&
©å
);

86 
	`±hªad_c⁄d_öô
(&
mC⁄d
, 
NULL
);

88 
	}
}

89 
ölöe
 
	gC⁄dôi⁄
::~
	$C⁄dôi⁄
() {

90 
	`±hªad_c⁄d_de°roy
(&
mC⁄d
);

91 
	}
}

92 
ölöe
 
°©us_t
 
	gC⁄dôi⁄
::
	$waô
(
Muãx
& 
muãx
) {

93  -
	`±hªad_c⁄d_waô
(&
mC⁄d
, &
muãx
.
mMuãx
);

94 
	}
}

95 
ölöe
 
°©us_t
 
	gC⁄dôi⁄
::
	$waôRñ©ive
(
Muãx
& 
muãx
, 
n£cs_t
 
ª…ime
) {

96 #i‡
	`deföed
(
HAVE_PTHREAD_COND_TIMEDWAIT_RELATIVE
)

97 
time•ec
 
ts
;

98 
ts
.
tv_£c
 = 
ª…ime
/1000000000;

99 
ts
.
tv_n£c
 = 
ª…ime
%1000000000;

100  -
	`±hªad_c⁄d_timedwaô_ªœtive_≈
(&
mC⁄d
, &
muãx
.
mMuãx
, &
ts
);

102 
time•ec
 
ts
;

103 #i‡
	`deföed
(
HAVE_POSIX_CLOCKS
)

104 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
ts
);

107 
timevÆ
 
t
;

108 
	`gëtimeofday
(&
t
, 
NULL
);

109 
ts
.
tv_£c
 = 
t
.tv_sec;

110 
ts
.
tv_n£c

t
.
tv_u£c
*1000;

112 
ts
.
tv_£c
 +
ª…ime
/1000000000;

113 
ts
.
tv_n£c
+
ª…ime
%1000000000;

114 i‡(
ts
.
tv_n£c
 >= 1000000000) {

115 
ts
.
tv_n£c
 -= 1000000000;

116 
ts
.
tv_£c
 += 1;

118  -
	`±hªad_c⁄d_timedwaô
(&
mC⁄d
, &
muãx
.
mMuãx
, &
ts
);

120 
	}
}

121 
ölöe
 
	gC⁄dôi⁄
::
	$sig«l
() {

122 
	`±hªad_c⁄d_sig«l
(&
mC⁄d
);

123 
	}
}

124 
ölöe
 
	gC⁄dôi⁄
::
	$brﬂdˇ°
() {

125 
	`±hªad_c⁄d_brﬂdˇ°
(&
mC⁄d
);

126 
	}
}

	@src/utils/Debug.h

17 #i‚de‡
ANDROID_DEBUG_H


18 
	#ANDROID_DEBUG_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

23 
«me•a˚
 
	g™droid
 {

26 #ifde‡
__˝lu•lus


27 
	gãm∂©e
<
	gboﬁ
> 
	gCompûeTimeAs£π
;

28 
	gãm∂©e
<> 
	gCompûeTimeAs£π
<
	gåue
> {};

29 
	#COMPILE_TIME_ASSERT
(
_exp
) \

30 
ãm∂©e
 
˛ass
 
CompûeTimeAs£π
< (
_exp
Ë>;

	)

32 
	#COMPILE_TIME_ASSERT_FUNCTION_SCOPE
(
_exp
) \

33 
CompûeTimeAs£π
<–
_exp
 )>();

	)

37 #ifde‡
__˝lu•lus


38 
	gãm∂©e
<
boﬁ
 
	gC
, 
ty≥«me
 
	gLSH
,Åy≥«mê
	gRHS
> 
	gCompûeTimeIfEl£
;

39 
	gãm∂©e
<
ty≥«me
 
	gLHS
,Åy≥«mê
	gRHS
>

40 
	gCompûeTimeIfEl£
<
	gåue
, 
	gLHS
, 
	gRHS
> { 
LHS
 
	tTYPE
; };

41 
	gãm∂©e
<
ty≥«me
 
	gLHS
,Åy≥«mê
	gRHS
>

42 
	gCompûeTimeIfEl£
<
	gÁl£
, 
	gLHS
, 
	gRHS
> { 
RHS
 
	tTYPE
; };

47 #ifde‡
__˝lu•lus


51 c⁄° * 
°rögF‹Indít
(
öt32_t
 
ödítLevñ
);

53 (*
debugPrötFunc
)(* 
	tcookõ
, c⁄° * 
	ttxt
);

55 
¥ötTy≥Code
(
uöt32_t
 
ty≥Code
,

56 
debugPrötFunc
 
func
 = 0, * 
cookõ
 = 0);

58 
¥ötHexD©a
(
öt32_t
 
ödít
, c⁄° *
buf
, 
size_t
 
Àngth
,

59 
size_t
 
byãsPîLöe
=16, 
öt32_t
 
sögÀLöeByãsCutoff
=16,

60 
size_t
 
Æignmít
=0, 
boﬁ
 
cAºayStyÀ
=
Ál£
,

61 
debugPrötFunc
 
func
 = 0, * 
cookõ
 = 0);

63 #ifde‡
__˝lu•lus


	@src/utils/Endian.h

20 #i‚de‡
_LIBS_UTILS_ENDIAN_H


21 
	#_LIBS_UTILS_ENDIAN_H


	)

23 #i‡
deföed
(
HAVE_ENDIAN_H
)

25 
	~<ídün.h
>

29 
	#__BIG_ENDIAN
 0x1000

	)

30 
	#__LITTLE_ENDIAN
 0x0001

	)

32 #i‡
deföed
(
HAVE_LITTLE_ENDIAN
)

33 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

35 
	#__BYTE_ORDER
 
__BIG_ENDIAN


	)

	@src/utils/Errors.h

17 #i‚de‡
ANDROID_ERRORS_H


18 
	#ANDROID_ERRORS_H


	)

20 
	~<sys/ty≥s.h
>

21 
	~<î∫o.h
>

23 
«me•a˚
 
	g™droid
 {

26 #ifde‡
HAVE_MS_C_RUNTIME


27 
	t°©us_t
;

29 
öt32_t
 
	t°©us_t
;

41 #ifde‡
_WIN32


42 #unde‡
NO_ERROR


46 
	gOK
 = 0,

47 
	gNO_ERROR
 = 0,

49 
	gUNKNOWN_ERROR
 = 0x80000000,

51 
	gNO_MEMORY
 = -
ENOMEM
,

52 
	gINVALID_OPERATION
 = -
ENOSYS
,

53 
	gBAD_VALUE
 = -
EINVAL
,

54 
	gBAD_TYPE
 = 0x80000001,

55 
	gNAME_NOT_FOUND
 = -
ENOENT
,

56 
	gPERMISSION_DENIED
 = -
EPERM
,

57 
	gNO_INIT
 = -
ENODEV
,

58 
	gALREADY_EXISTS
 = -
EEXIST
,

59 
	gDEAD_OBJECT
 = -
EPIPE
,

60 
	gFAILED_TRANSACTION
 = 0x80000002,

61 
	gJPARKS_BROKE_IT
 = -
EPIPE
,

62 #i‡!
deföed
(
HAVE_MS_C_RUNTIME
)

63 
	gBAD_INDEX
 = -
EOVERFLOW
,

64 
	gNOT_ENOUGH_DATA
 = -
ENODATA
,

65 
	gWOULD_BLOCK
 = -
EWOULDBLOCK
,

66 
	gTIMED_OUT
 = -
ETIMEDOUT
,

67 
	gUNKNOWN_TRANSACTION
 = -
EBADMSG
,

69 
	gBAD_INDEX
 = -
E2BIG
,

70 
	gNOT_ENOUGH_DATA
 = 0x80000003,

71 
	gWOULD_BLOCK
 = 0x80000004,

72 
	gTIMED_OUT
 = 0x80000005,

73 
	gUNKNOWN_TRANSACTION
 = 0x80000006,

75 
	gFDS_NOT_ALLOWED
 = 0x80000007,

80 #ifde‡
_WIN32


81 
	#NO_ERROR
 0L

	)

	@src/utils/FileMap.h

20 #i‚de‡
__LIBS_FILE_MAP_H


21 
	#__LIBS_FILE_MAP_H


	)

23 
	~<sys/ty≥s.h
>

25 
	~<utûs/Com∑t.h
>

27 #ifde‡
HAVE_WIN32_FILEMAP


28 
	~<wödows.h
>

31 
«me•a˚
 
	g™droid
 {

47 ˛as†
	cFûeM≠
 {

48 
	gpublic
:

49 
FûeM≠
();

59 
boﬁ
 
¸óã
(c⁄° * 
‹igFûeName
, 
fd
,

60 
off64_t
 
off£t
, 
size_t
 
Àngth
, 
boﬁ
 
ªadO∆y
);

65 c⁄° * 
gëFûeName
(Ëc⁄° {  
	gmFûeName
; }

70 * 
gëD©aPå
(Ëc⁄° {  
	gmD©aPå
; }

75 
size_t
 
gëD©aLígth
(Ëc⁄° {  
	gmD©aLígth
; }

80 
off64_t
 
gëD©aOff£t
(Ëc⁄° {  
	gmD©aOff£t
; }

85 
FûeM≠
* 
acquúe
(Ë{ 
	gmRefCou¡
++;  
	gthis
; }

90 
ªÀa£
() {

91 i‡(--
	gmRefCou¡
 <= 0)

92 
dñëe
 
this
;

99 
	eM≠Advi˚
 {

100 
	gNORMAL
, 
	gRANDOM
, 
	gSEQUENTIAL
, 
	gWILLNEED
, 
	gDONTNEED


108 
advi£
(
M≠Advi˚
 
advi˚
);

110 
	g¥Ÿe˘ed
:

112 ~
FûeM≠
();

114 
	g¥iv©e
:

116 
FûeM≠
(c⁄° FûeM≠& 
§c
);

117 c⁄° 
	gFûeM≠
& 
	g›î©‹
=(c⁄° 
FûeM≠
& 
§c
);

119 
	gmRefCou¡
;

120 * 
	gmFûeName
;

121 * 
	gmBa£På
;

122 
size_t
 
	gmBa£Lígth
;

123 
off64_t
 
	gmD©aOff£t
;

124 * 
	gmD©aPå
;

125 
size_t
 
	gmD©aLígth
;

126 #ifde‡
HAVE_WIN32_FILEMAP


127 
HANDLE
 
	gmFûeH™dÀ
;

128 
HANDLE
 
	gmFûeM≠pög
;

131 
	gmPageSize
;

	@src/utils/Flattenable.h

17 #i‚de‡
ANDROID_UTILS_FLATTENABLE_H


18 
	#ANDROID_UTILS_FLATTENABLE_H


	)

21 
	~<°döt.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<utûs/Eº‹s.h
>

25 
«me•a˚
 
	g™droid
 {

32 ˛as†
	cFœâíabÀ


34 
	gpublic
:

36 
vútuÆ
 
size_t
 
gëFœâíedSize
() const = 0;

39 
vútuÆ
 
size_t
 
gëFdCou¡
() const = 0;

46 
vútuÆ
 
°©us_t
 
Ê©ãn
(* 
buf„r
, 
size_t
 
size
,

47 
fds
[], 
size_t
 
cou¡
) const = 0;

56 
vútuÆ
 
°©us_t
 
unÊ©ãn
(c⁄°* 
buf„r
, 
size_t
 
size
,

57 
fds
[], 
size_t
 
cou¡
) = 0;

59 
	g¥Ÿe˘ed
:

60 
vútuÆ
 ~
FœâíabÀ
() = 0;

72 
	gãm∂©e
 <
ty≥«me
 
	gT
>

73 ˛as†
	cLightFœâíabÀ
 {

74 
	gpublic
:

77 
ölöe
 
boﬁ
 
isFixedSize
() const;

80 
ölöe
 
size_t
 
gëSize
() const;

83 
ölöe
 
°©us_t
 
Ê©ãn
(* 
buf„r
) const;

86 
ölöe
 
°©us_t
 
unÊ©ãn
(c⁄°* 
buf„r
, 
size_t
 
size
);

89 
	gãm∂©e
 <
ty≥«me
 
	gT
>

90 
ölöe
 
boﬁ
 
	gLightFœâíabÀ
<
	gT
>::
	$isFixedSize
() const {

91  
°©ic_ˇ°
<
T
 c⁄°*>(
this
)->T::
	`isFixedSize
();

92 
	}
}

93 
	gãm∂©e
 <
ty≥«me
 
	gT
>

94 
ölöe
 
size_t
 
	gLightFœâíabÀ
<
	gT
>::
	$gëSize
() const {

95  
°©ic_ˇ°
<
T
 c⁄°*>(
this
)->T::
	`gëSize
();

96 
	}
}

97 
	gãm∂©e
 <
ty≥«me
 
	gT
>

98 
ölöe
 
°©us_t
 
	gLightFœâíabÀ
<
	gT
>::
	$Ê©ãn
(* 
buf„r
) const {

99  
°©ic_ˇ°
<
T
 c⁄°*>(
this
)->T::
	`Ê©ãn
(
buf„r
);

100 
	}
}

101 
	gãm∂©e
 <
ty≥«me
 
	gT
>

102 
ölöe
 
°©us_t
 
	gLightFœâíabÀ
<
	gT
>::
	$unÊ©ãn
(c⁄°* 
buf„r
, 
size_t
 
size
) {

103  
°©ic_ˇ°
<
T
*>(
this
)->T::
	`unÊ©ãn
(
buf„r
, 
size
);

104 
	}
}

110 
	gãm∂©e
 <
ty≥«me
 
	gT
>

111 
˛ass
 
	gLightFœâíabÀPod
 : 
public
 
LightFœâíabÀ
<
T
> {

112 
public
:

113 
ölöe
 
boﬁ
 
isFixedSize
() const {

114  
åue
;

117 
ölöe
 
size_t
 
gëSize
() const {

118  (
	gT
);

120 
ölöe
 
°©us_t
 
Ê©ãn
(* 
buf„r
) const {

121 *
	gªöãΩªt_ˇ°
<
	gT
*>(
	gbuf„r
Ë*
°©ic_ˇ°
<
T
 c⁄°*>(
this
);

122  
	gNO_ERROR
;

124 
ölöe
 
°©us_t
 
unÊ©ãn
(c⁄°* 
buf„r
, 
size_t
) {

125 *
	g°©ic_ˇ°
<
	gT
*>(
	gthis
Ë*
ªöãΩªt_ˇ°
<
T
 c⁄°*>(
buf„r
);

126  
	gNO_ERROR
;

	@src/utils/Functor.h

17 #i‚de‡
ANDROID_FUNCTOR_H


18 
	#ANDROID_FUNCTOR_H


	)

20 
	~<utûs/Eº‹s.h
>

22 
«me•a˚
 
	g™droid
 {

24 ˛as†
	cFun˘‹
 {

25 
	gpublic
:

26 
Fun˘‹
() {}

27 
vútuÆ
 ~
Fun˘‹
() {}

28 
vútuÆ
 
°©us_t
 
›î©‹
 ()(
wh©
, * 
	gd©a
Ë{  
	gNO_ERROR
; }

	@src/utils/GenerationCache.h

17 #i‚de‡
ANDROID_UTILS_GENERATION_CACHE_H


18 
	#ANDROID_UTILS_GENERATION_CACHE_H


	)

20 
	~<utûs/KeyedVe˘‹.h
>

21 
	~<utûs/RefBa£.h
>

23 
«me•a˚
 
	g™droid
 {

28 
	gãm∂©e
<
ty≥«me
 
	gE¡ryKey
,Åy≥«mê
	gE¡ryVÆue
>

29 ˛as†
	cOnE¡ryRemoved
 {

30 
	gpublic
:

31 
vútuÆ
 ~
OnE¡ryRemoved
() { };

32 
vútuÆ
 
›î©‹
()(
	gE¡ryKey
& 
	gkey
, 
	gE¡ryVÆue
& 
	gvÆue
) = 0;

35 
	gãm∂©e
<
ty≥«me
 
	gE¡ryKey
,Åy≥«mê
	gE¡ryVÆue
>

36 
	gE¡ry
: 
public
 
LightRefBa£
<
E¡ry
<
E¡ryKey
, 
	gE¡ryVÆue
> > {

37 
E¡ry
(c⁄° E¡ry<
E¡ryKey
, 
E¡ryVÆue
>& 
e
) :

38 
key
(
e
.key), 
vÆue
(e.value),

39 
∑ª¡
(
e
.∑ª¡), 
chûd
(e.child) { }

40 
E¡ry
(c⁄° 
E¡ryKey
& 
key
, c⁄° 
E¡ryVÆue
& 
vÆue
) :

41 
key
(key), 
vÆue
(value) { }

43 
E¡ryKey
 
	gkey
;

44 
E¡ryVÆue
 
	gvÆue
;

46 
	g•
<
	gE¡ry
<
	gE¡ryKey
, 
	gE¡ryVÆue
> > 
	g∑ª¡
;

47 
	g•
<
	gE¡ry
<
	gE¡ryKey
, 
	gE¡ryVÆue
> > 
	gchûd
;

53 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

54 ˛as†
	cGíî©i⁄Cache
 {

55 
	gpublic
:

56 
Gíî©i⁄Cache
(
uöt32_t
 
maxC≠acôy
);

57 
	gvútuÆ
 ~
Gíî©i⁄Cache
();

59 
	eC≠acôy
 {

60 
	gkU∆imôedC≠acôy
,

63 
£tOnE¡ryRemovedLi°íî
(
OnE¡ryRemoved
<
K
, 
V
>* 
li°íî
);

65 
size_t
 
size
() const;

67 
˛ór
();

69 
boﬁ
 
c⁄èös
(c⁄° 
K
& 
key
) const;

70 c⁄° 
	gK
& 
gëKeyAt
(
size_t
 
ödex
) const;

71 c⁄° 
	gV
& 
gëVÆueAt
(
size_t
 
ödex
) const;

73 c⁄° 
	gV
& 
gë
(c⁄° 
K
& 
key
);

74 
boﬁ
 
put
(c⁄° 
K
& 
key
, c⁄° 
V
& 
vÆue
);

76 
ªmoveAt
(
ssize_t
 
ödex
);

77 
boﬁ
 
ªmove
(c⁄° 
K
& 
key
);

78 
boﬁ
 
ªmoveOlde°
();

80 
	g¥iv©e
:

81 
KeyedVe˘‹
<
K
, 
	g•
<
	gE¡ry
<
	gK
, 
	gV
> > > 
	gmCache
;

82 
uöt32_t
 
	gmMaxC≠acôy
;

84 
	gOnE¡ryRemoved
<
	gK
, 
	gV
>* 
	gmLi°íî
;

86 
	g•
<
	gE¡ry
<
	gK
, 
	gV
> > 
	gmOlde°
;

87 
	g•
<
	gE¡ry
<
	gK
, 
	gV
> > 
	gmYounge°
;

89 
©èchToCache
(c⁄° 
•
<
E¡ry
<
K
, 
V
> >& 
íåy
);

90 
dëachFromCache
(c⁄° 
•
<
E¡ry
<
K
, 
V
> >& 
íåy
);

92 c⁄° 
V
 
	gmNuŒVÆue
;

95 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

96 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
	$Gíî©i⁄Cache
(
uöt32_t
 
maxC≠acôy
): 
	`mMaxC≠acôy
(maxCapacity),

97 
	`mLi°íî
(
NULL
), 
	$mNuŒVÆue
(
NULL
) {

98 
	}
};

100 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

101 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::~
	$Gíî©i⁄Cache
() {

102 
	`˛ór
();

103 
	}
};

105 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

106 
uöt32_t
 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
	$size
() const {

107  
mCache
.
	`size
();

108 
	}
}

114 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

115 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
£tOnE¡ryRemovedLi°íî
(
OnE¡ryRemoved
<
K
, 
V
>* 
li°íî
) {

116 
	gmLi°íî
 = 
li°íî
;

119 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

120 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
	$˛ór
() {

121 i‡(
mLi°íî
) {

122 
uöt32_t
 
i
 = 0; i < 
mCache
.
	`size
(); i++) {

123 
•
<
E¡ry
<
K
, 
V
> > 
íåy
 = 
mCache
.
	`vÆueAt
(
i
);

124 i‡(
mLi°íî
) {

125 (*
mLi°íî
)(
íåy
->
key
,É¡ry->
vÆue
);

129 
mCache
.
	`˛ór
();

130 
mYounge°
.
	`˛ór
();

131 
mOlde°
.
	`˛ór
();

132 
	}
}

134 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

135 
boﬁ
 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
	$c⁄èös
(c⁄° 
K
& 
key
) const {

136  
mCache
.
	`ödexOfKey
(
key
) >= 0;

137 
	}
}

139 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

140 c⁄° 
	gK
& 
	gGíî©i⁄Cache
<K, 
	gV
>::
	$gëKeyAt
(
size_t
 
ödex
) const {

141  
mCache
.
	`keyAt
(
ödex
);

142 
	}
}

144 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

145 c⁄° 
	gV
& 
	gGíî©i⁄Cache
<
	gK
, V>::
	$gëVÆueAt
(
size_t
 
ödex
) const {

146  
mCache
.
	`vÆueAt
(
ödex
)->
vÆue
;

147 
	}
}

149 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

150 c⁄° 
	gV
& 
	gGíî©i⁄Cache
<
	gK
, V>::
	$gë
(c⁄° 
K
& 
key
) {

151 
ssize_t
 
ödex
 = 
mCache
.
	`ödexOfKey
(
key
);

152 i‡(
ödex
 >= 0) {

153 c⁄° 
•
<
E¡ry
<
K
, 
V
> >& 
íåy
 = 
mCache
.
	`vÆueAt
(
ödex
);

154 
	`dëachFromCache
(
íåy
);

155 
	`©èchToCache
(
íåy
);

156  
íåy
->
vÆue
;

159  
mNuŒVÆue
;

160 
	}
}

162 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

163 
boﬁ
 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
	$put
(c⁄° 
K
& 
key
, c⁄° 
V
& 
vÆue
) {

164 i‡(
mMaxC≠acôy
 !
kU∆imôedC≠acôy
 && 
mCache
.
	`size
() >= mMaxCapacity) {

165 
	`ªmoveOlde°
();

168 
ssize_t
 
ödex
 = 
mCache
.
	`ödexOfKey
(
key
);

169 i‡(
ödex
 < 0) {

170 
•
<
E¡ry
<
K
, 
V
> > 
íåy
 = 
√w
 E¡ry<K, V>(
key
, 
vÆue
);

171 
mCache
.
	`add
(
key
, 
íåy
);

172 
	`©èchToCache
(
íåy
);

173  
åue
;

176  
Ál£
;

177 
	}
}

179 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

180 
boﬁ
 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
	$ªmove
(c⁄° 
K
& 
key
) {

181 
ssize_t
 
ödex
 = 
mCache
.
	`ödexOfKey
(
key
);

182 i‡(
ödex
 >= 0) {

183 
	`ªmoveAt
(
ödex
);

184  
åue
;

187  
Ál£
;

188 
	}
}

190 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

191 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
	$ªmoveAt
(
ssize_t
 
ödex
) {

192 
•
<
E¡ry
<
K
, 
V
> > 
íåy
 = 
mCache
.
	`vÆueAt
(
ödex
);

193 i‡(
mLi°íî
) {

194 (*
mLi°íî
)(
íåy
->
key
,É¡ry->
vÆue
);

196 
mCache
.
	`ªmoveIãmsAt
(
ödex
, 1);

197 
	`dëachFromCache
(
íåy
);

198 
	}
}

200 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

201 
boﬁ
 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
	$ªmoveOlde°
() {

202 i‡(
mOlde°
.
	`gë
()) {

203 
ssize_t
 
ödex
 = 
mCache
.
	`ödexOfKey
(
mOlde°
->
key
);

204 i‡(
ödex
 >= 0) {

205 
	`ªmoveAt
(
ödex
);

206  
åue
;

208 
	`ALOGE
("GenerationCache:ÑemoveOldest failedÅo findÅhe item inÅhe cache "

213  
Ál£
;

214 
	}
}

216 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

217 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
©èchToCache
(c⁄° 
•
<
E¡ry
<
K
, 
V
> >& 
íåy
) {

218 i‡(!
	gmYounge°
.
gë
()) {

219 
	gmYounge°
 = 
mOlde°
 = 
íåy
;

221 
	gíåy
->
	g∑ª¡
 = 
mYounge°
;

222 
	gmYounge°
->
	gchûd
 = 
íåy
;

223 
	gmYounge°
 = 
íåy
;

227 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

228 
	gGíî©i⁄Cache
<
	gK
, 
	gV
>::
dëachFromCache
(c⁄° 
•
<
E¡ry
<
K
, 
V
> >& 
íåy
) {

229 i‡(
	gíåy
->
	g∑ª¡
.
gë
()) {

230 
	gíåy
->
	g∑ª¡
->
	gchûd
 = 
íåy
->
chûd
;

232 
	gmOlde°
 = 
íåy
->
chûd
;

235 i‡(
	gíåy
->
	gchûd
.
gë
()) {

236 
	gíåy
->
	gchûd
->
	g∑ª¡
 = 
íåy
->
∑ª¡
;

238 
	gmYounge°
 = 
íåy
->
∑ª¡
;

241 
	gíåy
->
	g∑ª¡
.
˛ór
();

242 
	gíåy
->
	gchûd
.
˛ór
();

	@src/utils/KeyedVector.h

17 #i‚de‡
ANDROID_KEYED_VECTOR_H


18 
	#ANDROID_KEYED_VECTOR_H


	)

20 
	~<as£π.h
>

21 
	~<°döt.h
>

22 
	~<sys/ty≥s.h
>

24 
	~<cutûs/log.h
>

26 
	~<utûs/S‹ãdVe˘‹.h
>

27 
	~<utûs/Ty≥Hñ≥rs.h
>

28 
	~<utûs/Eº‹s.h
>

32 
«me•a˚
 
	g™droid
 {

34 
	gãm∂©e
 <
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
>

35 ˛as†
	cKeyedVe˘‹


37 
	gpublic
:

38 
KEY
 
	tkey_ty≥
;

39 
VALUE
 
	tvÆue_ty≥
;

41 
ölöe
 
KeyedVe˘‹
();

47 
ölöe
 
˛ór
(Ë{ 
	gmVe˘‹
.clear(); }

54 
ölöe
 
size_t
 
size
(Ëc⁄° {  
	gmVe˘‹
.size(); }

56 
ölöe
 
boﬁ
 
isEm±y
(Ëc⁄° {  
	gmVe˘‹
.isEmpty(); }

58 
ölöe
 
size_t
 
ˇ∑côy
(Ëc⁄° {  
	gmVe˘‹
.capacity(); }

60 
ölöe
 
ssize_t
 
£tC≠acôy
(
size_t
 
size
Ë{  
	gmVe˘‹
.setCapacity(size); }

63 
ölöe
 
boﬁ
 
isIdítiˇlTo
(c⁄° 
KeyedVe˘‹
& 
rhs
) const;

68 c⁄° 
	gVALUE
& 
vÆueF‹
(c⁄° 
KEY
& 
key
) const;

69 c⁄° 
	gVALUE
& 
vÆueAt
(
size_t
 
ödex
) const;

70 c⁄° 
	gKEY
& 
keyAt
(
size_t
 
ödex
) const;

71 
ssize_t
 
ödexOfKey
(c⁄° 
KEY
& 
key
) const;

72 c⁄° 
	gVALUE
& 
	g›î©‹
[] (
size_t
 
	gödex
) const;

78 
	gVALUE
& 
edôVÆueF‹
(c⁄° 
KEY
& 
key
);

79 
	gVALUE
& 
edôVÆueAt
(
size_t
 
ödex
);

85 
ssize_t
 
add
(c⁄° 
KEY
& 
key
, c⁄° 
VALUE
& 
ôem
);

86 
ssize_t
 
ª∂a˚VÆueF‹
(c⁄° 
KEY
& 
key
, c⁄° 
VALUE
& 
ôem
);

87 
ssize_t
 
ª∂a˚VÆueAt
(
size_t
 
ödex
, c⁄° 
VALUE
& 
ôem
);

93 
ssize_t
 
ªmoveIãm
(c⁄° 
KEY
& 
key
);

94 
ssize_t
 
ªmoveIãmsAt
(
size_t
 
ödex
, size_à
cou¡
 = 1);

96 
	g¥iv©e
:

97 
S‹ãdVe˘‹
< 
key_vÆue_∑ú_t
<
KEY
, 
	gVALUE
> > 
	gmVe˘‹
;

102 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
	gåaô_åivül_move
<
	gKeyedVe˘‹
<KEY, VALUE> > {

103 íum { 
	gvÆue
 = 
åaô_åivül_move
<
S‹ãdVe˘‹
< 
key_vÆue_∑ú_t
<
KEY
, 
	gVALUE
> > >::
vÆue
 };

113 
	gãm∂©e
 <
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
>

114 
˛ass
 
	gDeÁu…KeyedVe˘‹
 : 
public
 
KeyedVe˘‹
<
KEY
, 
	gVALUE
>

116 
	gpublic
:

117 
ölöe
 
DeÁu…KeyedVe˘‹
(c⁄° 
VALUE
& 
defVÆue
 = VALUE());

118 c⁄° 
	gVALUE
& 
vÆueF‹
(c⁄° 
KEY
& 
key
) const;

120 
	g¥iv©e
:

121 
VALUE
 
mDeÁu…
;

126 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


127 
	gKeyedVe˘‹
<
	gKEY
,
	gVALUE
>::
	$KeyedVe˘‹
()

129 
	}
}

131 
ãm∂©e
<
ty≥«me
 
KEY
,Åy≥«mê
	gVALUE
> 
ölöe


132 
boﬁ
 
	gKeyedVe˘‹
<
	gKEY
,
	gVALUE
>::
isIdítiˇlTo
(c⁄° 
KeyedVe˘‹
<
KEY
,
VALUE
>& 
rhs
) const {

133  
	gmVe˘‹
.
¨øy
(Ë=
rhs
.
mVe˘‹
.array();

136 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


137 
ssize_t
 
	gKeyedVe˘‹
<
	gKEY
,
	gVALUE
>::
	$ödexOfKey
(c⁄° 
KEY
& 
key
) const {

138  
mVe˘‹
.
	`ödexOf
–
key_vÆue_∑ú_t
<
KEY
,
VALUE
>(
key
) );

139 
	}
}

141 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


142 c⁄° 
	gVALUE
& 
	gKeyedVe˘‹
<
	gKEY
,VALUE>::
	$vÆueF‹
(c⁄° 
KEY
& 
key
) const {

143 
ssize_t
 
i
 = 
this
->
	`ödexOfKey
(
key
);

144 
	`LOG_ALWAYS_FATAL_IF
(
i
<0, "%s: keyÇŸ found", 
__PRETTY_FUNCTION__
);

145  
mVe˘‹
.
	`ôemAt
(
i
).
vÆue
;

146 
	}
}

148 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


149 c⁄° 
	gVALUE
& 
	gKeyedVe˘‹
<
	gKEY
,VALUE>::
	$vÆueAt
(
size_t
 
ödex
) const {

150  
mVe˘‹
.
	`ôemAt
(
ödex
).
vÆue
;

151 
	}
}

153 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


154 c⁄° 
	gVALUE
& 
	gKeyedVe˘‹
<
	gKEY
,VALUE>::
›î©‹
[] (
size_t
 
ödex
) const {

155  
vÆueAt
(
ödex
);

158 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


159 c⁄° 
	gKEY
& 
	gKeyedVe˘‹
<KEY,
	gVALUE
>::
	$keyAt
(
size_t
 
ödex
) const {

160  
mVe˘‹
.
	`ôemAt
(
ödex
).
key
;

161 
	}
}

163 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


164 
	gVALUE
& 
	gKeyedVe˘‹
<
	gKEY
,VALUE>::
	$edôVÆueF‹
(c⁄° 
KEY
& 
key
) {

165 
ssize_t
 
i
 = 
this
->
	`ödexOfKey
(
key
);

166 
	`LOG_ALWAYS_FATAL_IF
(
i
<0, "%s: keyÇŸ found", 
__PRETTY_FUNCTION__
);

167  
mVe˘‹
.
	`edôIãmAt
(
i
).
vÆue
;

168 
	}
}

170 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


171 
	gVALUE
& 
	gKeyedVe˘‹
<
	gKEY
,VALUE>::
	$edôVÆueAt
(
size_t
 
ödex
) {

172  
mVe˘‹
.
	`edôIãmAt
(
ödex
).
vÆue
;

173 
	}
}

175 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


176 
ssize_t
 
	gKeyedVe˘‹
<
	gKEY
,
	gVALUE
>::
	$add
(c⁄° 
KEY
& 
key
, c⁄° 
VALUE
& 
vÆue
) {

177  
mVe˘‹
.
	`add
–
key_vÆue_∑ú_t
<
KEY
,
VALUE
>(
key
, 
vÆue
) );

178 
	}
}

180 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


181 
ssize_t
 
	gKeyedVe˘‹
<
	gKEY
,
	gVALUE
>::
	$ª∂a˚VÆueF‹
(c⁄° 
KEY
& 
key
, c⁄° 
VALUE
& 
vÆue
) {

182 
key_vÆue_∑ú_t
<
KEY
,
VALUE
> 
	`∑ú
(
key
, 
vÆue
);

183 
mVe˘‹
.
	`ªmove
(
∑ú
);

184  
mVe˘‹
.
	`add
(
∑ú
);

185 
	}
}

187 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


188 
ssize_t
 
	gKeyedVe˘‹
<
	gKEY
,
	gVALUE
>::
	$ª∂a˚VÆueAt
(
size_t
 
ödex
, c⁄° 
VALUE
& 
ôem
) {

189 i‡(
ödex
<
	`size
()) {

190 
mVe˘‹
.
	`edôIãmAt
(
ödex
).
vÆue
 = 
ôem
;

191  
ödex
;

193  
BAD_INDEX
;

194 
	}
}

196 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


197 
ssize_t
 
	gKeyedVe˘‹
<
	gKEY
,
	gVALUE
>::
	$ªmoveIãm
(c⁄° 
KEY
& 
key
) {

198  
mVe˘‹
.
	`ªmove
(
key_vÆue_∑ú_t
<
KEY
,
VALUE
>(
key
));

199 
	}
}

201 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


202 
ssize_t
 
	gKeyedVe˘‹
<
	gKEY
, 
	gVALUE
>::
	$ªmoveIãmsAt
(
size_t
 
ödex
, size_à
cou¡
) {

203  
mVe˘‹
.
	`ªmoveIãmsAt
(
ödex
, 
cou¡
);

204 
	}
}

208 
	gãm∂©e
<
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
> 
ölöe


209 
	gDeÁu…KeyedVe˘‹
<
	gKEY
,
	gVALUE
>::
	$DeÁu…KeyedVe˘‹
(c⁄° 
VALUE
& 
defVÆue
)

210 : 
	$mDeÁu…
(
defVÆue
)

212 
	}
}

214 
ãm∂©e
<
ty≥«me
 
KEY
,Åy≥«mê
	gVALUE
> 
ölöe


215 c⁄° 
	gVALUE
& 
	gDeÁu…KeyedVe˘‹
<
	gKEY
,VALUE>::
	$vÆueF‹
(c⁄° 
KEY
& 
key
) const {

216 
ssize_t
 
i
 = 
this
->
	`ödexOfKey
(
key
);

217  
i
 >0 ? 
KeyedVe˘‹
<
KEY
,
VALUE
>::
	`vÆueAt
(iË: 
mDeÁu…
;

218 
	}
}

	@src/utils/LinearAllocator.h

26 #i‚de‡
ANDROID_LINEARALLOCATOR_H


27 
	#ANDROID_LINEARALLOCATOR_H


	)

29 
	~<°ddef.h
>

31 
«me•a˚
 
	g™droid
 {

33 ˛as†
	cLöórAŒoˇt‹
 {

34 
	gpublic
:

35 * 
Æloc
(
size_t
 
size
) {  0; }

36 
ªwödIfLa°AŒoc
(* 
±r
, 
size_t
 
ÆlocSize
) {}

37 
dumpMem‹ySèts
(c⁄° * 
¥efix
 = "") {}

	@src/utils/LinearTransform.h

17 #i‚de‡
_LIBS_UTILS_LINEAR_TRANSFORM_H


18 
	#_LIBS_UTILS_LINEAR_TRANSFORM_H


	)

20 
	~<°döt.h
>

22 
«me•a˚
 
	g™droid
 {

40 
	sLöórTønsf‹m
 {

41 
öt64_t
 
	ga_zîo
;

42 
öt64_t
 
	gb_zîo
;

43 
öt32_t
 
	ga_to_b_numî
;

44 
uöt32_t
 
	ga_to_b_díom
;

49 
boﬁ
 
doF‹w¨dTønsf‹m
(
öt64_t
 
a_ö
, i¡64_t* 
b_out
) const;

54 
boﬁ
 
doRevî£Tønsf‹m
(
öt64_t
 
b_ö
, i¡64_t* 
a_out
) const;

57 
	gãm∂©e
 <
˛ass
 
	gT
> 
ªdu˚
(
T
* 
N
, T* 
D
);

58 
ªdu˚
(
öt32_t
* 
N
, 
uöt32_t
* 
D
);

	@src/utils/List.h

27 #i‚de‡
_LIBS_UTILS_LIST_H


28 
	#_LIBS_UTILS_LIST_H


	)

30 
	~<°ddef.h
>

31 
	~<°döt.h
>

33 
«me•a˚
 
	g™droid
 {

41 
	gãm∂©e
<
ty≥«me
 
	gT
>

42 ˛as†
	cLi°


44 
	g¥Ÿe˘ed
:

48 ˛as†
	c_Node
 {

49 
public
:

50 
ex∂icô
 
_Node
(c⁄° 
T
& 
vÆ
Ë: 
mVÆ
(val) {}

51 ~
_Node
() {}

52 
ölöe
 
T
& 
gëRef
(Ë{  
mVÆ
; }

53 
ölöe
 c⁄° 
	gT
& 
gëRef
(Ëc⁄° {  
	gmVÆ
; }

54 
ölöe
 
_Node
* 
gëPªv
(Ëc⁄° {  
	gmpPªv
; }

55 
ölöe
 
_Node
* 
gëNext
(Ëc⁄° {  
	gmpNext
; }

56 
ölöe
 
£tVÆ
(c⁄° 
T
& 
vÆ
Ë{ 
	gmVÆ
 = val; }

57 
ölöe
 
£tPªv
(
_Node
* 
±r
Ë{ 
	gmpPªv
 =Ötr; }

58 
ölöe
 
£tNext
(
_Node
* 
±r
Ë{ 
	gmpNext
 =Ötr; }

59 
	g¥iv©e
:

60 
‰õnd
 
˛ass
 
Li°
;

61 
‰õnd
 
˛ass
 
	g_Li°Iãøt‹
;

62 
T
 
	gmVÆ
;

63 
_Node
* 
	gmpPªv
;

64 
_Node
* 
	gmpNext
;

71 
	gãm∂©e
 <
ty≥«me
 
	gTYPE
>

72 
	sCONST_ITERATOR
 {

73 
_Node
 c⁄° * 
	tNodePå
;

74 c⁄° 
	tTYPE
 
	tTy≥
;

77 
	gãm∂©e
 <
ty≥«me
 
	gTYPE
>

78 
	sNON_CONST_ITERATOR
 {

79 
_Node
* 
	tNodePå
;

80 
TYPE
 
	tTy≥
;

83 
	gãm∂©e
<

84 
ty≥«me
 
	gU
,

85 
	gãm∂©e
 <
	g˛ass
> 
˛ass
 
	gC⁄°√ss


87 ˛as†
	c_Li°Iãøt‹
 {

88 
	g_Li°Iãøt‹
<
	tU
, 
	tC⁄°√ss
> 
	t_Iãr
;

89 
ty≥«me
 
	tC⁄°√ss
<
	tU
>::
	tNodePå
 
	t_NodePå
;

90 
ty≥«me
 
	tC⁄°√ss
<
	tU
>::
	tTy≥
 
	t_Ty≥
;

92 
ex∂icô
 
_Li°Iãøt‹
(
_NodePå
 
±r
Ë: 
mpNode
(ptr) {}

94 
public
:

95 
_Li°Iãøt‹
() {}

96 
_Li°Iãøt‹
(c⁄° 
_Iãr
& 
rhs
Ë: 
mpNode
(rhs.mpNode) {}

97 ~
_Li°Iãøt‹
() {}

103 
ãm∂©e
<
ty≥«me
 
V
> 
ex∂icô


104 
_Li°Iãøt‹
(c⁄° 
V
& 
rhs
Ë: 
mpNode
(rhs.mpNode) {}

110 
_Ty≥
& 
›î©‹
*(Ëc⁄° {  
mpNode
->
gëRef
(); }

111 
_Ty≥
* 
	g›î©‹
->(Ëc⁄° {  &(
	gmpNode
->
gëRef
()); }

116 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
_Iãr
& 
right
) const {

117  
mpNode
 =
right
.mpNode; }

119 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
_Iãr
& 
right
) const {

120  
mpNode
 !
right
.mpNode; }

125 
	gãm∂©e
<
ty≥«me
 
	gOTHER
>

126 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
OTHER
& 
right
) const {

127  
mpNode
 =
right
.mpNode; }

129 
	gãm∂©e
<
ty≥«me
 
	gOTHER
>

130 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
OTHER
& 
right
) const {

131  
mpNode
 !
right
.mpNode; }

136 
ölöe
 
	g_Iãr
& 
	g›î©‹
++() {

137 
	gmpNode
 = 
mpNode
->
gëNext
();

138  *
	gthis
;

140 c⁄° 
_Iãr
 
	g›î©‹
++() {

141 
_Iãr
 
tmp
(*
this
);

142 
	gmpNode
 = 
mpNode
->
gëNext
();

143  
	gtmp
;

145 
ölöe
 
	g_Iãr
& 
	g›î©‹
--() {

146 
	gmpNode
 = 
mpNode
->
gëPªv
();

147  *
	gthis
;

149 c⁄° 
_Iãr
 
	g›î©‹
--() {

150 
_Iãr
 
tmp
(*
this
);

151 
	gmpNode
 = 
mpNode
->
gëPªv
();

152  
	gtmp
;

155 
ölöe
 
_NodePå
 
gëNode
(Ëc⁄° {  
	gmpNode
; }

157 
_NodePå
 
	gmpNode
;

158 
	g¥iv©e
:

159 
‰õnd
 
˛ass
 
Li°
;

162 
	gpublic
:

163 
Li°
() {

164 
¥ï
();

166 
Li°
(c⁄° Li°<
T
>& 
§c
) {

167 
¥ï
();

168 
ö£π
(
begö
(), 
§c
.begö(), src.
íd
());

170 
	gvútuÆ
 ~
Li°
() {

171 
˛ór
();

172 
	gdñëe
[] (*Ë
	gmpMiddÀ
;

175 
	g_Li°Iãøt‹
<
	tT
, 
	tNON_CONST_ITERATOR
> 
	tôî©‹
;

176 
	g_Li°Iãøt‹
<
	tT
, 
	tCONST_ITERATOR
> 
	tc⁄°_ôî©‹
;

178 
	gLi°
<
	gT
>& 
	g›î©‹
=(c⁄° 
Li°
<
T
>& 
right
);

181 
ölöe
 
boﬁ
 
em±y
(Ëc⁄° {  
	gmpMiddÀ
->
gëNext
(Ë=
mpMiddÀ
; }

184 
size_t
 
size
() const {

185  
size_t
(
di°™˚
(
begö
(), 
íd
()));

193 
ölöe
 
ôî©‹
 
begö
() {

194  
ôî©‹
(
mpMiddÀ
->
gëNext
());

196 
ölöe
 
c⁄°_ôî©‹
 
begö
() const {

197  
c⁄°_ôî©‹
(
c⁄°_ˇ°
<
_Node
 c⁄°*>(
mpMiddÀ
->
gëNext
()));

199 
ölöe
 
ôî©‹
 
íd
() {

200  
ôî©‹
(
mpMiddÀ
);

202 
ölöe
 
c⁄°_ôî©‹
 
íd
() const {

203  
c⁄°_ôî©‹
(
c⁄°_ˇ°
<
_Node
 c⁄°*>(
mpMiddÀ
));

207 
push_‰⁄t
(c⁄° 
T
& 
vÆ
Ë{ 
ö£π
(
begö
(), val); }

208 
push_back
(c⁄° 
T
& 
vÆ
Ë{ 
ö£π
(
íd
(), val); }

211 
ôî©‹
 
ö£π
(ôî©‹ 
po¢
, c⁄° 
T
& 
vÆ
)

213 
_Node
* 
	g√wNode
 = 
√w
 _Node(
vÆ
);

214 
	g√wNode
->
£tNext
(
po¢
.
gëNode
());

215 
	g√wNode
->
£tPªv
(
po¢
.
gëNode
()->
gëPªv
());

216 
	gpo¢
.
gëNode
()->
gëPªv
()->
£tNext
(
√wNode
);

217 
	gpo¢
.
gëNode
()->
£tPªv
(
√wNode
);

218  
ôî©‹
(
√wNode
);

222 
ö£π
(
ôî©‹
 
po¢
, 
c⁄°_ôî©‹
 
fú°
, c⁄°_ôî©‹ 
œ°
) {

223  ; 
	gfú°
 !
œ°
; ++first)

224 
ö£π
(
po¢
, *
fú°
);

228 
ôî©‹
 
îa£
(ôî©‹ 
po¢
) {

229 
_Node
* 
	gpNext
 = 
po¢
.
gëNode
()->
gëNext
();

230 
_Node
* 
	gpPªv
 = 
po¢
.
gëNode
()->
gëPªv
();

231 
	gpPªv
->
£tNext
(
pNext
);

232 
	gpNext
->
£tPªv
(
pPªv
);

233 
dñëe
 
	gpo¢
.
gëNode
();

234  
ôî©‹
(
pNext
);

238 
ôî©‹
 
îa£
(ôî©‹ 
fú°
, iãøt‹ 
œ°
) {

239 
	gfú°
 !
œ°
)

240 
îa£
(
fú°
++);

241  
ôî©‹
(
œ°
);

245 
˛ór
() {

246 
_Node
* 
	gpCuºít
 = 
mpMiddÀ
->
gëNext
();

247 
_Node
* 
	gpNext
;

249 
	gpCuºít
 !
mpMiddÀ
) {

250 
pNext
 = 
pCuºít
->
gëNext
();

251 
dñëe
 
	gpCuºít
;

252 
	gpCuºít
 = 
pNext
;

254 
	gmpMiddÀ
->
£tPªv
(
mpMiddÀ
);

255 
	gmpMiddÀ
->
£tNext
(
mpMiddÀ
);

268 
	gãm∂©e
<

269 
ty≥«me
 
	gU
,

270 
	gãm∂©e
 <
	g˛ass
> 
˛ass
 
	gCL
,

271 
	gãm∂©e
 <
	g˛ass
> 
˛ass
 
	gCR


273 
±rdiff_t
 
di°™˚
(

274 
_Li°Iãøt‹
<
U
, 
CL
> 
fú°
, _Li°Iãøt‹<U, 
CR
> 
œ°
) const

276 
±rdiff_t
 
	gcou¡
 = 0;

277 
	gfú°
 !
œ°
) {

278 ++
fú°
;

279 ++
	gcou¡
;

281  
	gcou¡
;

284 
	g¥iv©e
:

291 
¥ï
() {

292 
mpMiddÀ
 = (
_Node
*Ë
√w
 [(_Node)];

293 
	gmpMiddÀ
->
£tPªv
(
mpMiddÀ
);

294 
	gmpMiddÀ
->
£tNext
(
mpMiddÀ
);

302 
_Node
* 
	gmpMiddÀ
;

312 
	gãm∂©e
<
˛ass
 
	gT
>

313 
	gLi°
<
	gT
>& Li°<T>::
›î©‹
=(c⁄° 
Li°
<
T
>& 
right
)

315 i‡(
this
 =&
right
)

316  *
this
;

317 
ôî©‹
 
	gfú°D°
 = 
begö
();

318 
ôî©‹
 
	gœ°D°
 = 
íd
();

319 
c⁄°_ôî©‹
 
	gfú°Src
 = 
right
.
begö
();

320 
c⁄°_ôî©‹
 
	gœ°Src
 = 
right
.
íd
();

321 
	gfú°Src
 !
œ°Src
 && 
fú°D°
 !
œ°D°
)

322 *
fú°D°
++ = *
fú°Src
++;

323 i‡(
	gfú°Src
 =
œ°Src
)

324 
îa£
(
fú°D°
, 
œ°D°
);

326 
ö£π
(
œ°D°
, 
fú°Src
, 
œ°Src
);

327  *
	gthis
;

	@src/utils/Log.h

28 #i‚de‡
_LIBS_UTILS_LOG_H


29 
	#_LIBS_UTILS_LOG_H


	)

31 
	~<cutûs/log.h
>

32 
	~<sys/ty≥s.h
>

34 #ifde‡
__˝lu•lus


36 
«me•a˚
 
	g™droid
 {

41 ˛as†
	cLogIfSlow
 {

42 
	gpublic
:

43 
LogIfSlow
(c⁄° * 
èg
, 
™droid_LogPri‹ôy
 
¥i‹ôy
,

44 
timeoutMûlis
, c⁄° * 
mesßge
);

45 ~
LogIfSlow
();

47 
	g¥iv©e
:

48 c⁄° * c⁄° 
mTag
;

49 c⁄° 
™droid_LogPri‹ôy
 
	gmPri‹ôy
;

50 c⁄° 
	gmTimeoutMûlis
;

51 c⁄° * c⁄° 
	gmMesßge
;

52 c⁄° 
öt64_t
 
	gmSèπ
;

64 
	#ALOGD_IF_SLOW
(
timeoutMûlis
, 
mesßge
) \

65 
™droid
::
LogIfSlow
 
	`_logIfSlow
(
LOG_TAG
, 
ANDROID_LOG_DEBUG
, 
timeoutMûlis
, 
mesßge
);

	)

	@src/utils/Looper.h

17 #i‚de‡
UTILS_LOOPER_H


18 
	#UTILS_LOOPER_H


	)

20 
	~<utûs/thªads.h
>

21 
	~<utûs/RefBa£.h
>

22 
	~<utûs/KeyedVe˘‹.h
>

23 
	~<utûs/Timîs.h
>

25 
	~<™droid/lo›î.h
>

27 
	~<sys/ïﬁl.h
>

32 
	sALo›î
 {

35 
«me•a˚
 
	g™droid
 {

40 
	sMesßge
 {

41 
Mesßge
(Ë: 
wh©
(0) { }

42 
Mesßge
(
wh©
) : what(what) { }

45 
wh©
;

57 ˛as†
	cMesßgeH™dÀr
 : 
public
 
vútuÆ
 
RefBa£
 {

58 
¥Ÿe˘ed
:

59 
vútuÆ
 ~
MesßgeH™dÀr
() { }

61 
public
:

65 
vútuÆ
 
h™dÀMesßge
(c⁄° 
Mesßge
& 
mesßge
) = 0;

72 ˛as†
	cWókMesßgeH™dÀr
 : 
public
 
MesßgeH™dÀr
 {

73 
¥Ÿe˘ed
:

74 
vútuÆ
 ~
WókMesßgeH™dÀr
();

76 
	gpublic
:

77 
WókMesßgeH™dÀr
(c⁄° 
wp
<
MesßgeH™dÀr
>& 
h™dÀr
);

78 
vútuÆ
 
h™dÀMesßge
(c⁄° 
Mesßge
& 
mesßge
);

80 
	g¥iv©e
:

81 
wp
<
MesßgeH™dÀr
> 
mH™dÀr
;

88 ˛as†
	cLo›îCÆlback
 : 
public
 
vútuÆ
 
RefBa£
 {

89 
¥Ÿe˘ed
:

90 
vútuÆ
 ~
Lo›îCÆlback
() { }

92 
public
:

102 
vútuÆ
 
h™dÀEvít
(
fd
, 
evíts
, * 
d©a
) = 0;

109 ˛as†
	cSim∂eLo›îCÆlback
 : 
public
 
Lo›îCÆlback
 {

110 
¥Ÿe˘ed
:

111 
vútuÆ
 ~
Sim∂eLo›îCÆlback
();

113 
	gpublic
:

114 
Sim∂eLo›îCÆlback
(
ALo›î_ˇŒbackFunc
 
ˇŒback
);

115 
vútuÆ
 
h™dÀEvít
(
fd
, 
evíts
, * 
d©a
);

117 
	g¥iv©e
:

118 
ALo›î_ˇŒbackFunc
 
mCÆlback
;

128 
˛ass
 
	gLo›î
 : 
public
 
ALo›î
,Öubli¯
	gRefBa£
 {

129 
	g¥Ÿe˘ed
:

130 
vútuÆ
 ~
Lo›î
();

132 
	gpublic
:

140 
Lo›î
(
boﬁ
 
ÆlowN⁄CÆlbacks
);

146 
boﬁ
 
gëAŒowN⁄CÆlbacks
() const;

174 
pﬁlOn˚
(
timeoutMûlis
, * 
outFd
, * 
outEvíts
, ** 
outD©a
);

175 
ölöe
 
pﬁlOn˚
(
timeoutMûlis
) {

176  
pﬁlOn˚
(
timeoutMûlis
, 
NULL
, NULL, NULL);

184 
pﬁlAŒ
(
timeoutMûlis
, * 
outFd
, * 
outEvíts
, ** 
outD©a
);

185 
ölöe
 
pﬁlAŒ
(
timeoutMûlis
) {

186  
pﬁlAŒ
(
timeoutMûlis
, 
NULL
, NULL, NULL);

195 
wake
();

228 
addFd
(
fd
, 
idít
, 
evíts
, 
ALo›î_ˇŒbackFunc
 
ˇŒback
, * 
d©a
);

229 
addFd
(
fd
, 
idít
, 
evíts
, c⁄° 
•
<
Lo›îCÆlback
>& 
ˇŒback
, * 
d©a
);

251 
ªmoveFd
(
fd
);

259 
£ndMesßge
(c⁄° 
•
<
MesßgeH™dÀr
>& 
h™dÀr
, c⁄° 
Mesßge
& 
mesßge
);

269 
£ndMesßgeDñayed
(
n£cs_t
 
u±imeDñay
, c⁄° 
•
<
MesßgeH™dÀr
>& 
h™dÀr
,

270 c⁄° 
Mesßge
& 
mesßge
);

280 
£ndMesßgeAtTime
(
n£cs_t
 
u±ime
, c⁄° 
•
<
MesßgeH™dÀr
>& 
h™dÀr
,

281 c⁄° 
Mesßge
& 
mesßge
);

289 
ªmoveMesßges
(c⁄° 
•
<
MesßgeH™dÀr
>& 
h™dÀr
);

297 
ªmoveMesßges
(c⁄° 
•
<
MesßgeH™dÀr
>& 
h™dÀr
, 
wh©
);

306 
	g•
<
	gLo›î
> 
¥ï¨e
(
›ts
);

314 
£tF‹Thªad
(c⁄° 
•
<
Lo›î
>& 
lo›î
);

320 
	g•
<
	gLo›î
> 
gëF‹Thªad
();

322 
	g¥iv©e
:

323 
	sReque°
 {

324 
fd
;

325 
	gidít
;

326 
	g•
<
	gLo›îCÆlback
> 
	gˇŒback
;

327 * 
	gd©a
;

330 
	sRe•⁄£
 {

331 
	gevíts
;

332 
Reque°
 
	gªque°
;

335 
	sMesßgeEnvñ›e
 {

336 
MesßgeEnvñ›e
(Ë: 
u±ime
(0) { }

338 
MesßgeEnvñ›e
(
n£cs_t
 
u±ime
, c⁄° 
•
<
MesßgeH™dÀr
> 
h™dÀr
,

339 c⁄° 
Mesßge
& 
mesßge
Ë: 
u±ime
(u±ime), 
h™dÀr
(handler), message(message) {

342 
n£cs_t
 
	gu±ime
;

343 
	g•
<
	gMesßgeH™dÀr
> 
	gh™dÀr
;

344 
Mesßge
 
	gmesßge
;

347 c⁄° 
boﬁ
 
	gmAŒowN⁄CÆlbacks
;

349 
	gmWakeRódPùeFd
;

350 
	gmWakeWrôePùeFd
;

351 
Muãx
 
	gmLock
;

353 
	gVe˘‹
<
	gMesßgeEnvñ›e
> 
	gmMesßgeEnvñ›es
;

354 
boﬁ
 
	gmSídögMesßge
;

356 
	gmEpﬁlFd
;

359 
	gKeyedVe˘‹
<, 
	gReque°
> 
	gmReque°s
;

363 
	gVe˘‹
<
	gRe•⁄£
> 
	gmRe•⁄£s
;

364 
size_t
 
	gmRe•⁄£Index
;

365 
n£cs_t
 
	gmNextMesßgeU±ime
;

367 
pﬁlI¬î
(
timeoutMûlis
);

368 
awokí
();

369 
pushRe•⁄£
(
evíts
, c⁄° 
Reque°
& 
ªque°
);

371 
öôTLSKey
();

372 
thªadDe°ru˘‹
(*
°
);

	@src/utils/Mutex.h

17 #i‚de‡
_LIBS_UTILS_MUTEX_H


18 
	#_LIBS_UTILS_MUTEX_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<time.h
>

24 #i‡
deföed
(
HAVE_PTHREADS
)

25 
	~<±hªad.h
>

28 
	~<utûs/Eº‹s.h
>

31 
«me•a˚
 
	g™droid
 {

34 
˛ass
 
	gC⁄dôi⁄
;

42 ˛as†
	cMuãx
 {

43 
	gpublic
:

45 
PRIVATE
 = 0,

46 
	gSHARED
 = 1

49 
Muãx
();

50 
Muãx
(c⁄° * 
«me
);

51 
Muãx
(
ty≥
, c⁄° * 
«me
 = 
NULL
);

52 ~
Muãx
();

55 
°©us_t
 
lock
();

56 
u∆ock
();

59 
°©us_t
 
åyLock
();

63 ˛as†
	cAutﬁock
 {

64 
	gpublic
:

65 
ölöe
 
Autﬁock
(
Muãx
& 
muãx
Ë: 
mLock
(muãxË{ mLock.
lock
(); }

66 
ölöe
 
Autﬁock
(
Muãx
* 
muãx
Ë: 
mLock
(*muãxË{ mLock.
lock
(); }

67 
	gölöe
 ~
Autﬁock
(Ë{ 
	gmLock
.
u∆ock
(); }

68 
	g¥iv©e
:

69 
Muãx
& 
mLock
;

72 
	g¥iv©e
:

73 
‰õnd
 
˛ass
 
C⁄dôi⁄
;

76 
Muãx
(const Mutex&);

77 
	gMuãx
& 
	g›î©‹
 = (c⁄° 
Muãx
&);

79 #i‡
deföed
(
HAVE_PTHREADS
)

80 
±hªad_muãx_t
 
	gmMuãx
;

82 
_öô
();

83 * 
	gmSèã
;

89 #i‡
	$deföed
(
HAVE_PTHREADS
)

91 
ölöe
 
Muãx
::
	$Muãx
() {

92 
	`±hªad_muãx_öô
(&
mMuãx
, 
NULL
);

93 
	}
}

94 
ölöe
 
	gMuãx
::
	$Muãx
(c⁄° * 
«me
) {

95 
	`±hªad_muãx_öô
(&
mMuãx
, 
NULL
);

96 
	}
}

97 
ölöe
 
	gMuãx
::
	$Muãx
(
ty≥
, c⁄° * 
«me
) {

98 i‡(
ty≥
 =
SHARED
) {

99 
±hªad_muãx©å_t
 
©å
;

100 
	`±hªad_muãx©å_öô
(&
©å
);

101 
	`±hªad_muãx©å_£çsh¨ed
(&
©å
, 
PTHREAD_PROCESS_SHARED
);

102 
	`±hªad_muãx_öô
(&
mMuãx
, &
©å
);

103 
	`±hªad_muãx©å_de°roy
(&
©å
);

105 
	`±hªad_muãx_öô
(&
mMuãx
, 
NULL
);

107 
	}
}

108 
ölöe
 
	gMuãx
::~
	$Muãx
() {

109 
	`±hªad_muãx_de°roy
(&
mMuãx
);

110 
	}
}

111 
ölöe
 
°©us_t
 
	gMuãx
::
	$lock
() {

112  -
	`±hªad_muãx_lock
(&
mMuãx
);

113 
	}
}

114 
ölöe
 
	gMuãx
::
	$u∆ock
() {

115 
	`±hªad_muãx_u∆ock
(&
mMuãx
);

116 
	}
}

117 
ölöe
 
°©us_t
 
	gMuãx
::
	$åyLock
() {

118  -
	`±hªad_muãx_åylock
(&
mMuãx
);

119 
	}
}

131 
	gMuãx
::
	tAutﬁock
 
	tAutoMuãx
;

	@src/utils/PropertyMap.h

17 #i‚de‡
_UTILS_PROPERTY_MAP_H


18 
	#_UTILS_PROPERTY_MAP_H


	)

20 
	~<utûs/KeyedVe˘‹.h
>

21 
	~<utûs/Såög8.h
>

22 
	~<utûs/Eº‹s.h
>

23 
	~<utûs/Tokíizî.h
>

25 
«me•a˚
 
	g™droid
 {

48 ˛as†
	cPr›îtyM≠
 {

49 
	gpublic
:

51 
Pr›îtyM≠
();

52 ~
Pr›îtyM≠
();

55 
˛ór
();

60 
addPr›îty
(c⁄° 
Såög8
& 
key
, c⁄° Såög8& 
vÆue
);

63 
boﬁ
 
hasPr›îty
(c⁄° 
Såög8
& 
key
) const;

69 
boﬁ
 
åyGëPr›îty
(c⁄° 
Såög8
& 
key
, Såög8& 
outVÆue
) const;

70 
boﬁ
 
åyGëPr›îty
(c⁄° 
Såög8
& 
key
, boﬁ& 
outVÆue
) const;

71 
boﬁ
 
åyGëPr›îty
(c⁄° 
Såög8
& 
key
, 
öt32_t
& 
outVÆue
) const;

72 
boﬁ
 
åyGëPr›îty
(c⁄° 
Såög8
& 
key
, & 
outVÆue
) const;

75 
addAŒ
(c⁄° 
Pr›îtyM≠
* 
m≠
);

78 
ölöe
 c⁄° 
	gKeyedVe˘‹
<
	gSåög8
, Såög8>& 
gëPr›îtõs
(Ëc⁄° {  
	gmPr›îtõs
; }

81 
°©us_t
 
lﬂd
(c⁄° 
Såög8
& 
fûíame
, 
Pr›îtyM≠
** 
outM≠
);

83 
	g¥iv©e
:

84 ˛as†
	cP¨£r
 {

85 
Pr›îtyM≠
* 
mM≠
;

86 
Tokíizî
* 
	gmTokíizî
;

88 
	gpublic
:

89 
P¨£r
(
Pr›îtyM≠
* 
m≠
, 
Tokíizî
* 
tokíizî
);

90 ~
P¨£r
();

91 
°©us_t
 
∑r£
();

93 
	g¥iv©e
:

94 
°©us_t
 
∑r£Ty≥
();

95 
°©us_t
 
∑r£Key
();

96 
°©us_t
 
∑r£KeyPr›îty
();

97 
°©us_t
 
∑r£Modifõr
(c⁄° 
Såög8
& 
tokí
, 
öt32_t
* 
outMëaSèã
);

98 
°©us_t
 
∑r£Ch¨a˘îLôîÆ
(
ch¨16_t
* 
outCh¨a˘î
);

101 
	gKeyedVe˘‹
<
	gSåög8
, Såög8> 
	gmPr›îtõs
;

	@src/utils/RWLock.h

17 #i‚de‡
_LIBS_UTILS_RWLOCK_H


18 
	#_LIBS_UTILS_RWLOCK_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

23 #i‡
deföed
(
HAVE_PTHREADS
)

24 
	~<±hªad.h
>

27 
	~<utûs/Eº‹s.h
>

28 
	~<utûs/ThªadDefs.h
>

31 
«me•a˚
 
	g™droid
 {

34 #i‡
deföed
(
HAVE_PTHREADS
)

42 ˛as†
	cRWLock
 {

43 
	gpublic
:

45 
PRIVATE
 = 0,

46 
	gSHARED
 = 1

49 
RWLock
();

50 
RWLock
(c⁄° * 
«me
);

51 
RWLock
(
ty≥
, c⁄° * 
«me
 = 
NULL
);

52 ~
RWLock
();

54 
°©us_t
 
ªadLock
();

55 
°©us_t
 
åyRódLock
();

56 
°©us_t
 
wrôeLock
();

57 
°©us_t
 
åyWrôeLock
();

58 
u∆ock
();

60 ˛as†
	cAutoRLock
 {

61 
	gpublic
:

62 
ölöe
 
AutoRLock
(
RWLock
& 
rwlock
Ë: 
mLock
‘wlockË{ mLock.
ªadLock
(); }

63 
	gölöe
 ~
AutoRLock
(Ë{ 
	gmLock
.
u∆ock
(); }

64 
	g¥iv©e
:

65 
RWLock
& 
mLock
;

68 ˛as†
	cAutoWLock
 {

69 
	gpublic
:

70 
ölöe
 
AutoWLock
(
RWLock
& 
rwlock
Ë: 
mLock
‘wlockË{ mLock.
wrôeLock
(); }

71 
	gölöe
 ~
AutoWLock
(Ë{ 
	gmLock
.
u∆ock
(); }

72 
	g¥iv©e
:

73 
RWLock
& 
mLock
;

76 
	g¥iv©e
:

78 
RWLock
(const RWLock&);

79 
	gRWLock
& 
	g›î©‹
 = (c⁄° 
RWLock
&);

81 
±hªad_rwlock_t
 
	gmRWLock
;

84 
ölöe
 
	gRWLock
::
	$RWLock
() {

85 
	`±hªad_rwlock_öô
(&
mRWLock
, 
NULL
);

86 
	}
}

87 
ölöe
 
	gRWLock
::
	$RWLock
(c⁄° * 
«me
) {

88 
	`±hªad_rwlock_öô
(&
mRWLock
, 
NULL
);

89 
	}
}

90 
ölöe
 
	gRWLock
::
	$RWLock
(
ty≥
, c⁄° * 
«me
) {

91 i‡(
ty≥
 =
SHARED
) {

92 
±hªad_rwlock©å_t
 
©å
;

93 
	`±hªad_rwlock©å_öô
(&
©å
);

94 
	`±hªad_rwlock©å_£çsh¨ed
(&
©å
, 
PTHREAD_PROCESS_SHARED
);

95 
	`±hªad_rwlock_öô
(&
mRWLock
, &
©å
);

96 
	`±hªad_rwlock©å_de°roy
(&
©å
);

98 
	`±hªad_rwlock_öô
(&
mRWLock
, 
NULL
);

100 
	}
}

101 
ölöe
 
	gRWLock
::~
	$RWLock
() {

102 
	`±hªad_rwlock_de°roy
(&
mRWLock
);

103 
	}
}

104 
ölöe
 
°©us_t
 
	gRWLock
::
	$ªadLock
() {

105  -
	`±hªad_rwlock_rdlock
(&
mRWLock
);

106 
	}
}

107 
ölöe
 
°©us_t
 
	gRWLock
::
	$åyRódLock
() {

108  -
	`±hªad_rwlock_åyrdlock
(&
mRWLock
);

109 
	}
}

110 
ölöe
 
°©us_t
 
	gRWLock
::
	$wrôeLock
() {

111  -
	`±hªad_rwlock_wæock
(&
mRWLock
);

112 
	}
}

113 
ölöe
 
°©us_t
 
	gRWLock
::
	$åyWrôeLock
() {

114  -
	`±hªad_rwlock_åywæock
(&
mRWLock
);

115 
	}
}

116 
ölöe
 
	gRWLock
::
	$u∆ock
() {

117 
	`±hªad_rwlock_u∆ock
(&
mRWLock
);

118 
	}
}

	@src/utils/RefBase.h

17 #i‚de‡
ANDROID_REF_BASE_H


18 
	#ANDROID_REF_BASE_H


	)

20 
	~<cutûs/©omic.h
>

22 
	~<°döt.h
>

23 
	~<sys/ty≥s.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
	~<utûs/Så⁄gPoöãr.h
>

28 
	~<utûs/Ty≥Hñ≥rs.h
>

31 
«me•a˚
 
	g™droid
 {

33 
˛ass
 
	gTextOuçut
;

34 
	gTextOuçut
& 
¥ötWókPoöãr
(
TextOuçut
& 
to
, c⁄° * 
vÆ
);

38 
	#COMPARE_WEAK
(
_›_
) \

39 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
•
<
T
>& 
o
) const { \

40  
m_±r
 
_›_
 
o
.m_ptr; \

42 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
T
* 
o
) const { \

43  
m_±r
 
_›_
 
o
; \

45 
ãm∂©e
<
ty≥«me
 
U
> \

46 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
•
<
U
>& 
o
) const { \

47  
m_±r
 
_›_
 
o
.m_ptr; \

49 
ãm∂©e
<
ty≥«me
 
U
> \

50 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
U
* 
o
) const { \

51  
m_±r
 
_›_
 
o
; \

52 }

	)

55 
˛ass
 
	gRe„ªn˚Movî
;

56 ˛as†
	cRe„ªn˚C⁄vîãrBa£
 {

57 
	gpublic
:

58 
vútuÆ
 
size_t
 
gëRe„ªn˚Ty≥Size
() const = 0;

59 
vútuÆ
 * 
gëRe„ªn˚Ba£
(const*) const = 0;

60 
ölöe
 
	gvútuÆ
 ~
Re„ªn˚C⁄vîãrBa£
() { }

65 ˛as†
	cRefBa£


67 
	gpublic
:

68 
öcSå⁄g
(c⁄° * 
id
) const;

69 
decSå⁄g
(c⁄° * 
id
) const;

71 
f‹˚IncSå⁄g
(c⁄° * 
id
) const;

74 
öt32_t
 
gëSå⁄gCou¡
() const;

76 ˛as†
	cwókªf_ty≥


78 
	gpublic
:

79 
RefBa£
* 
ªfBa£
() const;

81 
öcWók
(c⁄° * 
id
);

82 
decWók
(c⁄° * 
id
);

85 
boﬁ
 
©ãm±IncSå⁄g
(c⁄° * 
id
);

90 
boﬁ
 
©ãm±IncWók
(c⁄° * 
id
);

93 
öt32_t
 
gëWókCou¡
() const;

96 
¥ötRefs
() const;

105 
åackMe
(
boﬁ
 
íabÀ
, boﬁ 
ªèö
);

108 
wókªf_ty≥
* 
¸óãWók
(c⁄° * 
id
) const;

110 
wókªf_ty≥
* 
gëWókRefs
() const;

113 
ölöe
 
¥ötRefs
(Ëc⁄° { 
gëWókRefs
()->printRefs(); }

116 
ölöe
 
åackMe
(
boﬁ
 
íabÀ
, boﬁ 
ªèö
)

118 
gëWókRefs
()->
åackMe
(
íabÀ
, 
ªèö
);

121 
RefBa£
 
	tba£ty≥
;

123 
	g¥Ÿe˘ed
:

124 
RefBa£
();

125 
	gvútuÆ
 ~
RefBa£
();

129 
	gOBJECT_LIFETIME_STRONG
 = 0x0000,

130 
	gOBJECT_LIFETIME_WEAK
 = 0x0001,

131 
	gOBJECT_LIFETIME_MASK
 = 0x0001

134 
exãndObje˘Li„time
(
öt32_t
 
mode
);

138 
	gFIRST_INC_STRONG
 = 0x0001

141 
vútuÆ
 
⁄Fú°Ref
();

142 
vútuÆ
 
⁄La°Så⁄gRef
(c⁄° * 
id
);

143 
vútuÆ
 
boﬁ
 
⁄IncSå⁄gAâem±ed
(
uöt32_t
 
Êags
, c⁄° * 
id
);

144 
vútuÆ
 
⁄La°WókRef
(c⁄° * 
id
);

146 
	g¥iv©e
:

147 
‰õnd
 
˛ass
 
Re„ªn˚Movî
;

148 
moveRe„ªn˚s
(* 
d
, c⁄°* 
s
, 
size_t
 
n
,

149 c⁄° 
Re„ªn˚C⁄vîãrBa£
& 
ˇ°î
);

151 
	g¥iv©e
:

152 
‰õnd
 
˛ass
 
wókªf_ty≥
;

153 
˛ass
 
	gwókªf_im∂
;

155 
RefBa£
(c⁄° RefBa£& 
o
);

156 
	gRefBa£
& 
	g›î©‹
=(c⁄° 
RefBa£
& 
o
);

158 
wókªf_im∂
* c⁄° 
	gmRefs
;

163 
	gãm∂©e
 <
˛ass
 
	gT
>

164 ˛as†
	cLightRefBa£


166 
	gpublic
:

167 
ölöe
 
LightRefBa£
(Ë: 
mCou¡
(0) { }

168 
ölöe
 
öcSå⁄g
(c⁄° * 
id
) const {

169 
™droid_©omic_öc
(&
mCou¡
);

171 
ölöe
 
decSå⁄g
(c⁄° * 
id
) const {

172 i‡(
™droid_©omic_dec
(&
mCou¡
) == 1) {

173 
dñëe
 
°©ic_ˇ°
<c⁄° 
T
*>(
this
);

177 
ölöe
 
öt32_t
 
gëSå⁄gCou¡
() const {

178  
	gmCou¡
;

181 
	gLightRefBa£
<
	tT
> 
	tba£ty≥
;

183 
	g¥Ÿe˘ed
:

184 
ölöe
 ~
LightRefBa£
() { }

186 
¥iv©e
:

187 
‰õnd
 
˛ass
 
Re„ªn˚Movî
;

188 
ölöe
 
moveRe„ªn˚s
(* 
d
, c⁄°* 
s
, 
size_t
 
n
,

189 c⁄° 
Re„ªn˚C⁄vîãrBa£
& 
ˇ°î
) { }

191 
	g¥iv©e
:

192 
muèbÀ
 vﬁ©ûê
öt32_t
 
mCou¡
;

197 
	gãm∂©e
 <
ty≥«me
 
	gT
>

198 ˛as†
	cwp


200 
	gpublic
:

201 
ty≥«me
 
	tRefBa£
::
	twókªf_ty≥
 weakref_type;

203 
ölöe
 
wp
(Ë: 
m_±r
(0) { }

205 
wp
(
T
* 
Ÿhî
);

206 
wp
(c⁄° wp<
T
>& 
Ÿhî
);

207 
wp
(c⁄° 
•
<
T
>& 
Ÿhî
);

208 
	gãm∂©e
<
ty≥«me
 
	gU
> 
wp
(
U
* 
Ÿhî
);

209 
	gãm∂©e
<
ty≥«me
 
	gU
> 
wp
(c⁄° 
•
<
U
>& 
Ÿhî
);

210 
	gãm∂©e
<
ty≥«me
 
	gU
> 
wp
(c⁄° wp<
U
>& 
Ÿhî
);

212 ~
wp
();

216 
	gwp
& 
	g›î©‹
 = (
T
* 
Ÿhî
);

217 
	gwp
& 
	g›î©‹
 = (c⁄° 
wp
<
T
>& 
Ÿhî
);

218 
	gwp
& 
	g›î©‹
 = (c⁄° 
•
<
T
>& 
Ÿhî
);

220 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gwp
& 
	g›î©‹
 = (
U
* 
Ÿhî
);

221 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gwp
& 
	g›î©‹
 = (c⁄° 
wp
<
U
>& 
Ÿhî
);

222 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gwp
& 
	g›î©‹
 = (c⁄° 
•
<
U
>& 
Ÿhî
);

224 
£t_obje˘_™d_ªfs
(
T
* 
Ÿhî
, 
wókªf_ty≥
* 
ªfs
);

228 
	g•
<
	gT
> 
¥omŸe
() const;

232 
˛ór
();

236 
ölöe
 
wókªf_ty≥
* 
gë_ªfs
(Ëc⁄° {  
	gm_ªfs
; }

238 
ölöe
 
T
* 
unß„_gë
(Ëc⁄° {  
	gm_±r
; }

242 
COMPARE_WEAK
(==)

243 
COMPARE_WEAK
(!=)

244 
COMPARE_WEAK
(>)

245 
COMPARE_WEAK
(<)

246 
COMPARE_WEAK
(<=)

247 
COMPARE_WEAK
(>=)

249 
ölöe
 
boﬁ
 
›î©‹
 =(c⁄° 
wp
<
T
>& 
o
) const {

250  (
m_±r
 =
o
.m_±rË&& (
m_ªfs
 == o.m_refs);

252 
	gãm∂©e
<
ty≥«me
 
	gU
>

253 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
wp
<
U
>& 
o
) const {

254  
m_±r
 =
o
.m_ptr;

257 
ölöe
 
boﬁ
 
	g›î©‹
 > (c⁄° 
	gwp
<
	gT
>& 
	go
) const {

258  (
	gm_±r
 =
o
.
m_±r
Ë? (
m_ªfs
 > o.m_refs) : (m_ptr > o.m_ptr);

260 
	gãm∂©e
<
ty≥«me
 
	gU
>

261 
ölöe
 
boﬁ
 
	g›î©‹
 > (c⁄° 
	gwp
<
	gU
>& 
	go
) const {

262  (
	gm_±r
 =
o
.
m_±r
Ë? (
m_ªfs
 > o.m_refs) : (m_ptr > o.m_ptr);

265 
ölöe
 
boﬁ
 
	g›î©‹
 < (c⁄° 
	gwp
<
	gT
>& 
	go
) const {

266  (
	gm_±r
 =
o
.
m_±r
Ë? (
m_ªfs
 < o.m_refs) : (m_ptr < o.m_ptr);

268 
	gãm∂©e
<
ty≥«me
 
	gU
>

269 
ölöe
 
boﬁ
 
	g›î©‹
 < (c⁄° 
	gwp
<
	gU
>& 
	go
) const {

270  (
	gm_±r
 =
o
.
m_±r
Ë? (
m_ªfs
 < o.m_refs) : (m_ptr < o.m_ptr);

272 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
wp
<
T
>& 
o
Ëc⁄° {  
m_ªfs
 != o.m_refs; }

273 
	gãm∂©e
<
ty≥«me
 
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
wp
<
U
>& 
o
Ëc⁄° {  !
›î©‹
 == (o); }

274 
ölöe
 
boﬁ
 
	g›î©‹
 <(c⁄° 
wp
<
T
>& 
o
Ëc⁄° {  !
›î©‹
 > (o); }

275 
	gãm∂©e
<
ty≥«me
 
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
 <(c⁄° 
wp
<
U
>& 
o
Ëc⁄° {  !
›î©‹
 > (o); }

276 
ölöe
 
boﬁ
 
	g›î©‹
 >(c⁄° 
wp
<
T
>& 
o
Ëc⁄° {  !
›î©‹
 < (o); }

277 
	gãm∂©e
<
ty≥«me
 
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
 >(c⁄° 
wp
<
U
>& 
o
Ëc⁄° {  !
›î©‹
 < (o); }

279 
	g¥iv©e
:

280 
ãm∂©e
<
ty≥«me
 
Y
> 
‰õnd
 
˛ass
 
•
;

281 
	gãm∂©e
<
ty≥«me
 
	gY
> 
‰õnd
 
˛ass
 
	gwp
;

283 
T
* 
	gm_±r
;

284 
wókªf_ty≥
* 
	gm_ªfs
;

287 
	gãm∂©e
 <
ty≥«me
 
	gT
>

288 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, c⁄° 
	gwp
<
	gT
>& 
	gvÆ
);

290 #unde‡
COMPARE_WEAK


295 
	gãm∂©e
<
ty≥«me
 
	gT
>

296 
	gwp
<
	gT
>::
	$wp
(
T
* 
Ÿhî
)

297 : 
	$m_±r
(
Ÿhî
)

299 i‡(
Ÿhî
Ë
m_ªfs
 = othî->
	`¸óãWók
(
this
);

300 
	}
}

302 
	gãm∂©e
<
ty≥«me
 
	gT
>

303 
	gwp
<
	gT
>::
wp
(c⁄° wp<
T
>& 
Ÿhî
)

304 : 
m_±r
(
Ÿhî
.m_±r), 
	$m_ªfs
(
Ÿhî
.
m_ªfs
)

306 i‡(
m_±r
Ë
m_ªfs
->
	`öcWók
(
this
);

307 
	}
}

309 
	gãm∂©e
<
ty≥«me
 
	gT
>

310 
	gwp
<
	gT
>::
wp
(c⁄° 
•
<
T
>& 
Ÿhî
)

311 : 
	$m_±r
(
Ÿhî
.
m_±r
)

313 i‡(
m_±r
) {

314 
m_ªfs
 = 
m_±r
->
	`¸óãWók
(
this
);

316 
	}
}

318 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

319 
	gwp
<
	gT
>::
	$wp
(
U
* 
Ÿhî
)

320 : 
	$m_±r
(
Ÿhî
)

322 i‡(
Ÿhî
Ë
m_ªfs
 = othî->
	`¸óãWók
(
this
);

323 
	}
}

325 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

326 
	gwp
<
	gT
>::
wp
(c⁄° wp<
U
>& 
Ÿhî
)

327 : 
	$m_±r
(
Ÿhî
.
m_±r
)

329 i‡(
m_±r
) {

330 
m_ªfs
 = 
Ÿhî
.m_refs;

331 
m_ªfs
->
	`öcWók
(
this
);

333 
	}
}

335 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

336 
	gwp
<
	gT
>::
wp
(c⁄° 
•
<
U
>& 
Ÿhî
)

337 : 
	$m_±r
(
Ÿhî
.
m_±r
)

339 i‡(
m_±r
) {

340 
m_ªfs
 = 
m_±r
->
	`¸óãWók
(
this
);

342 
	}
}

344 
	gãm∂©e
<
ty≥«me
 
	gT
>

345 
	gwp
<
	gT
>::~
	$wp
()

347 i‡(
m_±r
Ë
m_ªfs
->
	`decWók
(
this
);

348 
	}
}

350 
	gãm∂©e
<
ty≥«me
 
	gT
>

351 
	gwp
<
	gT
>& wp<T>::
›î©‹
 = (
T
* 
Ÿhî
)

353 
wókªf_ty≥
* 
√wRefs
 =

354 
Ÿhî
 ? othî->
¸óãWók
(
this
) : 0;

355 i‡(
	gm_±r
Ë
	gm_ªfs
->
decWók
(
this
);

356 
	gm_±r
 = 
Ÿhî
;

357 
	gm_ªfs
 = 
√wRefs
;

358  *
	gthis
;

361 
	gãm∂©e
<
ty≥«me
 
	gT
>

362 
	gwp
<
	gT
>& wp<T>::
›î©‹
 = (c⁄° 
wp
<
T
>& 
Ÿhî
)

364 
wókªf_ty≥
* 
ŸhîRefs
(
Ÿhî
.
m_ªfs
);

365 
T
* 
ŸhîPå
(
Ÿhî
.
m_±r
);

366 i‡(
	gŸhîPå
Ë
	gŸhîRefs
->
öcWók
(
this
);

367 i‡(
	gm_±r
Ë
	gm_ªfs
->
decWók
(
this
);

368 
	gm_±r
 = 
ŸhîPå
;

369 
	gm_ªfs
 = 
ŸhîRefs
;

370  *
	gthis
;

373 
	gãm∂©e
<
ty≥«me
 
	gT
>

374 
	gwp
<
	gT
>& wp<T>::
›î©‹
 = (c⁄° 
•
<
T
>& 
Ÿhî
)

376 
wókªf_ty≥
* 
√wRefs
 =

377 
Ÿhî
 !
NULL
 ? othî->
¸óãWók
(
this
) : 0;

378 
T
* 
ŸhîPå
(
Ÿhî
.
m_±r
);

379 i‡(
	gm_±r
Ë
	gm_ªfs
->
decWók
(
this
);

380 
	gm_±r
 = 
ŸhîPå
;

381 
	gm_ªfs
 = 
√wRefs
;

382  *
	gthis
;

385 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

386 
	gwp
<
	gT
>& wp<T>::
›î©‹
 = (
U
* 
Ÿhî
)

388 
wókªf_ty≥
* 
√wRefs
 =

389 
Ÿhî
 ? othî->
¸óãWók
(
this
) : 0;

390 i‡(
	gm_±r
Ë
	gm_ªfs
->
decWók
(
this
);

391 
	gm_±r
 = 
Ÿhî
;

392 
	gm_ªfs
 = 
√wRefs
;

393  *
	gthis
;

396 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

397 
	gwp
<
	gT
>& wp<T>::
›î©‹
 = (c⁄° 
wp
<
U
>& 
Ÿhî
)

399 
wókªf_ty≥
* 
ŸhîRefs
(
Ÿhî
.
m_ªfs
);

400 
U
* 
ŸhîPå
(
Ÿhî
.
m_±r
);

401 i‡(
	gŸhîPå
Ë
	gŸhîRefs
->
öcWók
(
this
);

402 i‡(
	gm_±r
Ë
	gm_ªfs
->
decWók
(
this
);

403 
	gm_±r
 = 
ŸhîPå
;

404 
	gm_ªfs
 = 
ŸhîRefs
;

405  *
	gthis
;

408 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

409 
	gwp
<
	gT
>& wp<T>::
›î©‹
 = (c⁄° 
•
<
U
>& 
Ÿhî
)

411 
wókªf_ty≥
* 
√wRefs
 =

412 
Ÿhî
 !
NULL
 ? othî->
¸óãWók
(
this
) : 0;

413 
U
* 
ŸhîPå
(
Ÿhî
.
m_±r
);

414 i‡(
	gm_±r
Ë
	gm_ªfs
->
decWók
(
this
);

415 
	gm_±r
 = 
ŸhîPå
;

416 
	gm_ªfs
 = 
√wRefs
;

417  *
	gthis
;

420 
	gãm∂©e
<
ty≥«me
 
	gT
>

421 
	gwp
<
	gT
>::
	$£t_obje˘_™d_ªfs
(
T
* 
Ÿhî
, 
wókªf_ty≥
* 
ªfs
)

423 i‡(
Ÿhî
Ë
ªfs
->
	`öcWók
(
this
);

424 i‡(
m_±r
Ë
m_ªfs
->
	`decWók
(
this
);

425 
m_±r
 = 
Ÿhî
;

426 
m_ªfs
 = 
ªfs
;

427 
	}
}

429 
	gãm∂©e
<
ty≥«me
 
	gT
>

430 
	g•
<
	gT
> 
	gwp
<T>::
	$¥omŸe
() const

432 
•
<
T
> 
ªsu…
;

433 i‡(
m_±r
 && 
m_ªfs
->
	`©ãm±IncSå⁄g
(&
ªsu…
)) {

434 
ªsu…
.
	`£t_poöãr
(
m_±r
);

436  
ªsu…
;

437 
	}
}

439 
	gãm∂©e
<
ty≥«me
 
	gT
>

440 
	gwp
<
	gT
>::
	$˛ór
()

442 i‡(
m_±r
) {

443 
m_ªfs
->
	`decWók
(
this
);

444 
m_±r
 = 0;

446 
	}
}

448 
	gãm∂©e
 <
ty≥«me
 
	gT
>

449 
ölöe
 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, c⁄° 
	gwp
<
	gT
>& 
	gvÆ
)

451  
¥ötWókPoöãr
(
to
, 
vÆ
.
unß„_gë
());

459 ˛as†
	cRe„ªn˚Movî
 {

464 
	gãm∂©e
 <
ty≥«me
 
	gTYPE
>

465 
	gSå⁄gRe„ªn˚Ca°
 : 
public
 
Re„ªn˚C⁄vîãrBa£
 {

466 
vútuÆ
 
size_t
 
gëRe„ªn˚Ty≥Size
(Ëc⁄° {  –
•
<
TYPE
> ); }

467 
vútuÆ
 * 
gëRe„ªn˚Ba£
(c⁄°* 
p
) const {

468 
	g•
<
	gTYPE
> c⁄°* 
•å
(
ªöãΩªt_ˇ°
<
•
<
TYPE
> c⁄°*>(
p
));

469  
	g°©ic_ˇ°
<
ty≥«me
 
	gTYPE
::
ba£ty≥
 *>(
•å
->
gë
());

473 
	gãm∂©e
 <
ty≥«me
 
	gTYPE
>

474 
	gWókRe„ªn˚Ca°
 : 
public
 
Re„ªn˚C⁄vîãrBa£
 {

475 
vútuÆ
 
size_t
 
gëRe„ªn˚Ty≥Size
(Ëc⁄° {  –
wp
<
TYPE
> ); }

476 
vútuÆ
 * 
gëRe„ªn˚Ba£
(c⁄°* 
p
) const {

477 
	gwp
<
	gTYPE
> c⁄°* 
•å
(
ªöãΩªt_ˇ°
<
wp
<
TYPE
> c⁄°*>(
p
));

478  
	g°©ic_ˇ°
<
ty≥«me
 
	gTYPE
::
ba£ty≥
 *>(
•å
->
unß„_gë
());

482 
	gpublic
:

483 
ãm∂©e
<
ty≥«me
 
TYPE
> 
ölöe


484 
move_ª„ªn˚s
(
•
<
TYPE
>* 
d
, sp<TYPE> c⁄°* 
s
, 
size_t
 
n
) {

485 
memmove
(
d
, 
s
, 
n
*(
•
<
TYPE
>));

486 
	gSå⁄gRe„ªn˚Ca°
<
	gTYPE
> 
	gˇ°î
;

487 
	gTYPE
::
moveRe„ªn˚s
(
d
, 
s
, 
n
, 
ˇ°î
);

489 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


490 
move_ª„ªn˚s
(
wp
<
TYPE
>* 
d
, wp<TYPE> c⁄°* 
s
, 
size_t
 
n
) {

491 
memmove
(
d
, 
s
, 
n
*(
wp
<
TYPE
>));

492 
	gWókRe„ªn˚Ca°
<
	gTYPE
> 
	gˇ°î
;

493 
	gTYPE
::
moveRe„ªn˚s
(
d
, 
s
, 
n
, 
ˇ°î
);

504 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


505 
move_f‹w¨d_ty≥
(
•
<
TYPE
>* 
d
, sp<TYPE> c⁄°* 
s
, 
size_t
 
n
) {

506 
	gRe„ªn˚Movî
::
move_ª„ªn˚s
(
d
, 
s
, 
n
);

509 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


510 
move_backw¨d_ty≥
(
•
<
TYPE
>* 
d
, sp<TYPE> c⁄°* 
s
, 
size_t
 
n
) {

511 
	gRe„ªn˚Movî
::
move_ª„ªn˚s
(
d
, 
s
, 
n
);

514 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


515 
move_f‹w¨d_ty≥
(
wp
<
TYPE
>* 
d
, wp<TYPE> c⁄°* 
s
, 
size_t
 
n
) {

516 
	gRe„ªn˚Movî
::
move_ª„ªn˚s
(
d
, 
s
, 
n
);

519 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


520 
move_backw¨d_ty≥
(
wp
<
TYPE
>* 
d
, wp<TYPE> c⁄°* 
s
, 
size_t
 
n
) {

521 
	gRe„ªn˚Movî
::
move_ª„ªn˚s
(
d
, 
s
, 
n
);

	@src/utils/SharedBuffer.cpp

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~<utûs/Sh¨edBuf„r.h
>

24 
«me•a˚
 
	g™droid
 {

26 
Sh¨edBuf„r
* 
	gSh¨edBuf„r
::
Æloc
(
size_t
 
size
)

28 
Sh¨edBuf„r
* 
sb
 = 
°©ic_ˇ°
<Sh¨edBuf„∏*>(
mÆloc
((Sh¨edBuf„rË+ 
size
));

29 i‡(
	gsb
) {

30 
	gsb
->
	gmRefs
 = 1;

31 
	gsb
->
	gmSize
 = 
size
;

33  
	gsb
;

37 
ssize_t
 
	gSh¨edBuf„r
::
dóŒoc
(c⁄° 
Sh¨edBuf„r
* 
ªÀa£d
)

39 i‡(
ªÀa£d
->
mRefs
 != 0)  -1;

40 
‰ì
(
c⁄°_ˇ°
<
Sh¨edBuf„r
*>(
ªÀa£d
));

44 
Sh¨edBuf„r
* 
	gSh¨edBuf„r
::
edô
() const

46 i‡(
⁄lyOw√r
()) {

47  
c⁄°_ˇ°
<
Sh¨edBuf„r
*>(
this
);

49 
Sh¨edBuf„r
* 
	gsb
 = 
Æloc
(
mSize
);

50 i‡(
	gsb
) {

51 
mem˝y
(
sb
->
d©a
(), d©a(), 
size
());

52 
ªÀa£
();

54  
	gsb
;

57 
Sh¨edBuf„r
* 
	gSh¨edBuf„r
::
edôResize
(
size_t
 
√wSize
) const

59 i‡(
⁄lyOw√r
()) {

60 
Sh¨edBuf„r
* 
buf
 = 
c⁄°_ˇ°
<Sh¨edBuf„r*>(
this
);

61 i‡(
	gbuf
->
	gmSize
 =
√wSize
Ë 
buf
;

62 
	gbuf
 = (
Sh¨edBuf„r
*)
ªÆloc
(
buf
, (Sh¨edBuf„rË+ 
√wSize
);

63 i‡(
	gbuf
 !
NULL
) {

64 
buf
->
mSize
 = 
√wSize
;

65  
	gbuf
;

68 
Sh¨edBuf„r
* 
	gsb
 = 
Æloc
(
√wSize
);

69 i‡(
	gsb
) {

70 c⁄° 
size_t
 
	gmySize
 = 
mSize
;

71 
mem˝y
(
sb
->
d©a
(), d©a(), 
√wSize
 < 
mySize
 ?ÇewSize : mySize);

72 
ªÀa£
();

74  
	gsb
;

77 
Sh¨edBuf„r
* 
	gSh¨edBuf„r
::
©ãm±Edô
() const

79 i‡(
⁄lyOw√r
()) {

80  
c⁄°_ˇ°
<
Sh¨edBuf„r
*>(
this
);

85 
Sh¨edBuf„r
* 
	gSh¨edBuf„r
::
ª£t
(
size_t
 
√w_size
) const

88 
Sh¨edBuf„r
* 
sb
 = 
Æloc
(
√w_size
);

89 i‡(
	gsb
) {

90 
ªÀa£
();

92  
	gsb
;

95 
	gSh¨edBuf„r
::
acquúe
() const {

98 ++
mRefs
;

101 
öt32_t
 
	gSh¨edBuf„r
::
ªÀa£
(
uöt32_t
 
Êags
) const

103 
öt32_t
 
¥ev
 = 1;

106 i‡(
⁄lyOw√r
(Ë|| ((
	g¥ev
 = ++
mRefs
) == 1)) {

107 
mRefs
 = 0;

108 i‡((
	gÊags
 & 
	geKìpSt‹age
) == 0) {

109 
‰ì
(
c⁄°_ˇ°
<
Sh¨edBuf„r
*>(
this
));

112  
	g¥ev
;

	@src/utils/SharedBuffer.h

17 #i‚de‡
ANDROID_SHARED_BUFFER_H


18 
	#ANDROID_SHARED_BUFFER_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

25 
«me•a˚
 
	g™droid
 {

27 ˛as†
	cSh¨edBuf„r


29 
	gpublic
:

33 
eKìpSt‹age
 = 0x00000001

39 
Sh¨edBuf„r
* 
Æloc
(
size_t
 
size
);

46 
ssize_t
 
dóŒoc
(c⁄° 
Sh¨edBuf„r
* 
ªÀa£d
);

49 
ölöe
 c⁄° * 
d©a
() const;

52 
ölöe
 * 
d©a
();

55 
ölöe
 
size_t
 
size
() const;

58 
ölöe
 
Sh¨edBuf„r
* 
buf„rFromD©a
(* 
d©a
);

61 
ölöe
 c⁄° 
Sh¨edBuf„r
* 
buf„rFromD©a
(c⁄° * 
d©a
);

64 
ölöe
 
size_t
 
sizeFromD©a
(c⁄° * 
d©a
);

67 
Sh¨edBuf„r
* 
edô
() const;

70 
Sh¨edBuf„r
* 
edôResize
(
size_t
 
size
) const;

73 
Sh¨edBuf„r
* 
©ãm±Edô
() const;

76 
Sh¨edBuf„r
* 
ª£t
(
size_t
 
size
) const;

79 
acquúe
() const;

85 
öt32_t
 
ªÀa£
(
uöt32_t
 
Êags
 = 0) const;

88 
ölöe
 
boﬁ
 
⁄lyOw√r
() const;

91 
	g¥iv©e
:

92 
ölöe
 
Sh¨edBuf„r
() { }

93 
ölöe
 ~
Sh¨edBuf„r
() { }

94 
Sh¨edBuf„r
(const SharedBuffer&);

95 
	gSh¨edBuf„r
& 
	g›î©‹
 = (c⁄° 
Sh¨edBuf„r
&);

98 
muèbÀ
 
öt32_t
 
	gmRefs
;

99 
size_t
 
	gmSize
;

100 
uöt32_t
 
	gmRe£rved
[2];

105 c⁄° * 
	gSh¨edBuf„r
::
	$d©a
() const {

106  
this
 + 1;

107 
	}
}

109 * 
	gSh¨edBuf„r
::
	$d©a
() {

110  
this
 + 1;

111 
	}
}

113 
size_t
 
	gSh¨edBuf„r
::
	$size
() const {

114  
mSize
;

115 
	}
}

117 
Sh¨edBuf„r
* 
	gSh¨edBuf„r
::
	$buf„rFromD©a
(* 
d©a
) {

118  
d©a
 ? 
°©ic_ˇ°
<
Sh¨edBuf„r
 *>(data)-1 : 0;

119 
	}
}

121 c⁄° 
Sh¨edBuf„r
* 
	gSh¨edBuf„r
::
	$buf„rFromD©a
(c⁄° * 
d©a
) {

122  
d©a
 ? 
°©ic_ˇ°
<c⁄° 
Sh¨edBuf„r
 *>(data)-1 : 0;

123 
	}
}

125 
size_t
 
	gSh¨edBuf„r
::
	$sizeFromD©a
(c⁄° * 
d©a
) {

126  
d©a
 ? 
	`buf„rFromD©a
(d©a)->
mSize
 : 0;

127 
	}
}

129 
boﬁ
 
	gSh¨edBuf„r
::
	$⁄lyOw√r
() const {

130  (
mRefs
 == 1);

131 
	}
}

	@src/utils/Singleton.h

17 #i‚de‡
ANDROID_UTILS_SINGLETON_H


18 
	#ANDROID_UTILS_SINGLETON_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<utûs/thªads.h
>

23 
	~<cutûs/compûî.h
>

25 
«me•a˚
 
	g™droid
 {

28 
	gãm∂©e
 <
ty≥«me
 
	gTYPE
>

29 ˛as†
	cANDROID_API
 
	gSögÀt⁄


31 
	gpublic
:

32 
TYPE
& 
gëIn°™˚
() {

33 
Muãx
::
Autﬁock
 
_l
(
sLock
);

34 
TYPE
* 
	gö°™˚
 = 
sIn°™˚
;

35 i‡(
	gö°™˚
 == 0) {

36 
ö°™˚
 = 
√w
 
TYPE
();

37 
	gsIn°™˚
 = 
ö°™˚
;

39  *
	gö°™˚
;

42 
boﬁ
 
hasIn°™˚
() {

43 
	gMuãx
::
Autﬁock
 
_l
(
sLock
);

44  
	gsIn°™˚
 != 0;

47 
	g¥Ÿe˘ed
:

48 ~
SögÀt⁄
() { };

49 
SögÀt⁄
() { };

51 
	g¥iv©e
:

52 
SögÀt⁄
(const Singleton&);

53 
	gSögÀt⁄
& 
	g›î©‹
 = (c⁄° 
SögÀt⁄
&);

54 
Muãx
 
	gsLock
;

55 
TYPE
* 
	gsIn°™˚
;

67 
	#ANDROID_SINGLETON_STATIC_INSTANCE
(
TYPE
) \

68 
ãm∂©e
<> 
Muãx
 
SögÀt⁄
< 
TYPE
 >::
	`sLock
(Muãx::
PRIVATE
); \

69 
ãm∂©e
<> 
TYPE
* 
SögÀt⁄
< TYPE >::
	`sIn°™˚
(0); \

70 
ãm∂©e
 
˛ass
 
SögÀt⁄
< 
TYPE
 >;

	)

	@src/utils/SortedVector.h

17 #i‚de‡
ANDROID_SORTED_VECTOR_H


18 
	#ANDROID_SORTED_VECTOR_H


	)

20 
	~<as£π.h
>

21 
	~<°döt.h
>

22 
	~<sys/ty≥s.h
>

24 
	~<cutûs/log.h
>

26 
	~<utûs/Ve˘‹.h
>

27 
	~<utûs/Ve˘‹Im∂.h
>

28 
	~<utûs/Ty≥Hñ≥rs.h
>

32 
«me•a˚
 
	g™droid
 {

34 
	gãm∂©e
 <
˛ass
 
	gTYPE
>

35 ˛as†
	cS‹ãdVe˘‹
 : 
¥iv©e
 
S‹ãdVe˘‹Im∂


37 
‰õnd
 
˛ass
 
Ve˘‹
<
TYPE
>;

39 
	gpublic
:

40 
TYPE
 
	tvÆue_ty≥
;

46 
S‹ãdVe˘‹
();

47 
S‹ãdVe˘‹
(c⁄° S‹ãdVe˘‹<
TYPE
>& 
rhs
);

48 
	gvútuÆ
 ~
S‹ãdVe˘‹
();

51 c⁄° 
	gS‹ãdVe˘‹
<
	gTYPE
>& 
	g›î©‹
 = (c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
rhs
) const;

52 
	gS‹ãdVe˘‹
<
	gTYPE
>& 
	g›î©‹
 = (c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
rhs
);

58 
ölöe
 
˛ór
(Ë{ 
	gVe˘‹Im∂
::clear(); }

65 
ölöe
 
size_t
 
size
(Ëc⁄° {  
	gVe˘‹Im∂
::size(); }

67 
ölöe
 
boﬁ
 
isEm±y
(Ëc⁄° {  
	gVe˘‹Im∂
::isEmpty(); }

69 
ölöe
 
size_t
 
ˇ∑côy
(Ëc⁄° {  
	gVe˘‹Im∂
::capacity(); }

71 
ölöe
 
ssize_t
 
£tC≠acôy
(
size_t
 
size
Ë{  
	gVe˘‹Im∂
::setCapacity(size); }

78 
ölöe
 c⁄° 
TYPE
* 
¨øy
() const;

82 
TYPE
* 
edôAºay
();

85 
ssize_t
 
ödexOf
(c⁄° 
TYPE
& 
ôem
) const;

88 
size_t
 
‹dîOf
(c⁄° 
TYPE
& 
ôem
) const;

96 
ölöe
 c⁄° 
	gTYPE
& 
	g›î©‹
 [] (
size_t
 
	gödex
) const;

98 
ölöe
 c⁄° 
	gTYPE
& 
ôemAt
(
size_t
 
ödex
) const;

100 c⁄° 
	gTYPE
& 
t›
() const;

107 
ssize_t
 
add
(c⁄° 
TYPE
& 
ôem
);

110 
	gTYPE
& 
edôIãmAt
(
size_t
 
ödex
) {

111  *–
	g°©ic_ˇ°
<
	gTYPE
 *>(
	gVe˘‹Im∂
::
edôIãmLoˇti⁄
(
ödex
)) );

115 
ssize_t
 
mîge
(c⁄° 
Ve˘‹
<
TYPE
>& 
ve˘‹
);

116 
ssize_t
 
mîge
(c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
ve˘‹
);

119 
ssize_t
 
ªmove
(c⁄° 
TYPE
&);

122 
ölöe
 
ssize_t
 
ªmoveIãmsAt
(
size_t
 
ödex
, size_à
cou¡
 = 1);

124 
ölöe
 
ssize_t
 
ªmoveAt
(
size_t
 
ödex
Ë{  
ªmoveIãmsAt
(index); }

126 
	g¥Ÿe˘ed
:

127 
vútuÆ
 
do_c⁄°ru˘
(* 
°‹age
, 
size_t
 
num
) const;

128 
vútuÆ
 
do_de°roy
(* 
°‹age
, 
size_t
 
num
) const;

129 
vútuÆ
 
do_c›y
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const;

130 
vútuÆ
 
do_•œt
(* 
de°
, c⁄° * 
ôem
, 
size_t
 
num
) const;

131 
vútuÆ
 
do_move_f‹w¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const;

132 
vútuÆ
 
do_move_backw¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const;

133 
vútuÆ
 
do_com∑ª
(c⁄° * 
lhs
, c⁄° * 
rhs
) const;

138 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gåaô_åivül_move
<
	gS‹ãdVe˘‹
<T> > {Énum { 
	gvÆue
 = 
åue
 }; };

144 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


145 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$S‹ãdVe˘‹
()

146 : 
	`S‹ãdVe˘‹Im∂
((
TYPE
),

147 ((
åaôs
<
TYPE
>::
has_åivül_˘‹
 ? 
HAS_TRIVIAL_CTOR
 : 0)

148 |(
åaôs
<
TYPE
>::
has_åivül_dt‹
 ? 
HAS_TRIVIAL_DTOR
 : 0)

149 |(
åaôs
<
TYPE
>::
has_åivül_c›y
 ? 
HAS_TRIVIAL_COPY
 : 0))

152 
	}
}

154 
ãm∂©e
<
˛ass
 
TYPE
> 
ölöe


155 
S‹ãdVe˘‹
<
TYPE
>::S‹ãdVe˘‹(c⁄° S‹ãdVe˘‹<TYPE>& 
rhs
)

156 : 
	$S‹ãdVe˘‹Im∂
(
rhs
) {

157 
	}
}

159 
ãm∂©e
<
˛ass
 
TYPE
> 
ölöe


160 
S‹ãdVe˘‹
<
TYPE
>::~
	$S‹ãdVe˘‹
() {

161 
	`föish_ve˘‹
();

162 
	}
}

164 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


165 
	gS‹ãdVe˘‹
<
	gTYPE
>& S‹ãdVe˘‹<TYPE>::
›î©‹
 = (c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
rhs
) {

166 
S‹ãdVe˘‹Im∂
::
›î©‹
 = (
rhs
);

167  *
	gthis
;

170 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


171 c⁄° 
	gS‹ãdVe˘‹
<
	gTYPE
>& S‹ãdVe˘‹<TYPE>::
›î©‹
 = (c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
rhs
) const {

172 
S‹ãdVe˘‹Im∂
::
›î©‹
 = (
rhs
);

173  *
	gthis
;

176 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


177 c⁄° 
TYPE
* 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$¨øy
() const {

178  
°©ic_ˇ°
<c⁄° 
TYPE
 *>(
	`¨øyIm∂
());

179 
	}
}

181 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


182 
TYPE
* 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$edôAºay
() {

183  
°©ic_ˇ°
<
TYPE
 *>(
	`edôAºayIm∂
());

184 
	}
}

187 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


188 c⁄° 
	gTYPE
& 
	gS‹ãdVe˘‹
<TYPE>::
›î©‹
[](
size_t
 
ödex
) const {

189 
LOG_FATAL_IF
(
ödex
>=
size
(),

190 "%s: index=%u ouào‡øngê(%u)", 
__PRETTY_FUNCTION__
,

191 (
ödex
), (
size
()));

192  *(
¨øy
(Ë+ 
	gödex
);

195 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


196 c⁄° 
	gTYPE
& 
	gS‹ãdVe˘‹
<TYPE>::
	$ôemAt
(
size_t
 
ödex
) const {

197  
›î©‹
[](
ödex
);

198 
	}
}

200 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


201 c⁄° 
	gTYPE
& 
	gS‹ãdVe˘‹
<TYPE>::
	$t›
() const {

202  *(
	`¨øy
(Ë+ 
	`size
() - 1);

203 
	}
}

205 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


206 
ssize_t
 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$add
(c⁄° 
TYPE
& 
ôem
) {

207  
S‹ãdVe˘‹Im∂
::
	`add
(&
ôem
);

208 
	}
}

210 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


211 
ssize_t
 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$ödexOf
(c⁄° 
TYPE
& 
ôem
) const {

212  
S‹ãdVe˘‹Im∂
::
	`ödexOf
(&
ôem
);

213 
	}
}

215 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


216 
size_t
 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$‹dîOf
(c⁄° 
TYPE
& 
ôem
) const {

217  
S‹ãdVe˘‹Im∂
::
	`‹dîOf
(&
ôem
);

218 
	}
}

220 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


221 
ssize_t
 
	gS‹ãdVe˘‹
<
	gTYPE
>::
mîge
(c⁄° 
Ve˘‹
<
TYPE
>& 
ve˘‹
) {

222  
S‹ãdVe˘‹Im∂
::
mîge
(
ªöãΩªt_ˇ°
<c⁄° 
Ve˘‹Im∂
&>(
ve˘‹
));

225 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


226 
ssize_t
 
	gS‹ãdVe˘‹
<
	gTYPE
>::
mîge
(c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
ve˘‹
) {

227  
S‹ãdVe˘‹Im∂
::
mîge
(
ªöãΩªt_ˇ°
<c⁄° S‹ãdVe˘‹Im∂&>(
ve˘‹
));

230 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


231 
ssize_t
 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$ªmove
(c⁄° 
TYPE
& 
ôem
) {

232  
S‹ãdVe˘‹Im∂
::
	`ªmove
(&
ôem
);

233 
	}
}

235 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


236 
ssize_t
 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$ªmoveIãmsAt
(
size_t
 
ödex
, size_à
cou¡
) {

237  
Ve˘‹Im∂
::
	`ªmoveIãmsAt
(
ödex
, 
cou¡
);

238 
	}
}

242 
	gãm∂©e
<
˛ass
 
	gTYPE
>

243 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$do_c⁄°ru˘
(* 
°‹age
, 
size_t
 
num
) const {

244 
	`c⁄°ru˘_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
°‹age
), 
num
 );

245 
	}
}

247 
	gãm∂©e
<
˛ass
 
	gTYPE
>

248 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$do_de°roy
(* 
°‹age
, 
size_t
 
num
) const {

249 
	`de°roy_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
°‹age
), 
num
 );

250 
	}
}

252 
	gãm∂©e
<
˛ass
 
	gTYPE
>

253 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$do_c›y
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const {

254 
	`c›y_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
de°
),ÑeöãΩªt_ˇ°<c⁄° TYPE*>(
‰om
), 
num
 );

255 
	}
}

257 
	gãm∂©e
<
˛ass
 
	gTYPE
>

258 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$do_•œt
(* 
de°
, c⁄° * 
ôem
, 
size_t
 
num
) const {

259 
	`•œt_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
de°
),ÑeöãΩªt_ˇ°<c⁄° TYPE*>(
ôem
), 
num
 );

260 
	}
}

262 
	gãm∂©e
<
˛ass
 
	gTYPE
>

263 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$do_move_f‹w¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const {

264 
	`move_f‹w¨d_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
de°
),ÑeöãΩªt_ˇ°<c⁄° TYPE*>(
‰om
), 
num
 );

265 
	}
}

267 
	gãm∂©e
<
˛ass
 
	gTYPE
>

268 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$do_move_backw¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const {

269 
	`move_backw¨d_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
de°
),ÑeöãΩªt_ˇ°<c⁄° TYPE*>(
‰om
), 
num
 );

270 
	}
}

272 
	gãm∂©e
<
˛ass
 
	gTYPE
>

273 
	gS‹ãdVe˘‹
<
	gTYPE
>::
	$do_com∑ª
(c⁄° * 
lhs
, c⁄° * 
rhs
) const {

274  
	`com∑ª_ty≥
–*
ªöãΩªt_ˇ°
<c⁄° 
TYPE
*>(
lhs
), *ªöãΩªt_ˇ°<c⁄° TYPE*>(
rhs
) );

275 
	}
}

	@src/utils/StopWatch.h

17 #i‚de‡
ANDROID_STOPWATCH_H


18 
	#ANDROID_STOPWATCH_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

23 
	~<utûs/Timîs.h
>

27 
«me•a˚
 
	g™droid
 {

29 ˛as†
	cSt›W©ch


31 
	gpublic
:

32 
St›W©ch
–c⁄° *
«me
,

33 
˛ock
 = 
SYSTEM_TIME_MONOTONIC
,

34 
uöt32_t
 
Êags
 = 0);

35 ~
St›W©ch
();

37 c⁄° * 
«me
() const;

38 
n£cs_t
 
œp
();

39 
n£cs_t
 
ñ≠£dTime
() const;

41 
ª£t
();

43 
	g¥iv©e
:

44 c⁄° * 
mName
;

45 
	gmClock
;

46 
uöt32_t
 
	gmFœgs
;

48 
	sœp_t
 {

49 
n£cs_t
 
	gsoF¨
;

50 
n£cs_t
 
	gthisL≠
;

53 
n£cs_t
 
	gmSèπTime
;

54 
œp_t
 
	gmL≠s
[8];

55 
	gmNumL≠s
;

	@src/utils/String16.h

17 #i‚de‡
ANDROID_STRING16_H


18 
	#ANDROID_STRING16_H


	)

20 
	~<utûs/Eº‹s.h
>

21 
	~<utûs/Sh¨edBuf„r.h
>

22 
	~<utûs/Unicode.h
>

23 
	~<utûs/Ty≥Hñ≥rs.h
>

33 
«me•a˚
 
™droid
 {

37 
˛ass
 
Såög8
;

38 
˛ass
 
TextOuçut
;

41 ˛as†
	cSåög16


43 
public
:

44 
Såög16
();

45 
Såög16
(c⁄° Såög16& 
o
);

46 
Såög16
(c⁄° Såög16& 
o
,

47 
size_t
 
Àn
,

48 
size_t
 
begö
=0);

49 
ex∂icô
 
Såög16
(c⁄° 
ch¨16_t
* 
o
);

50 
ex∂icô
 
Såög16
(c⁄° 
ch¨16_t
* 
o
, 
size_t
 
Àn
);

51 
ex∂icô
 
Såög16
(c⁄° 
Såög8
& 
o
);

52 
ex∂icô
 
Såög16
(c⁄° * 
o
);

53 
ex∂icô
 
Såög16
(c⁄° * 
o
, 
size_t
 
Àn
);

55 ~
Såög16
();

57 
ölöe
 c⁄° 
ch¨16_t
* 
°rög
() const;

58 
ölöe
 
size_t
 
size
() const;

60 
ölöe
 c⁄° 
Sh¨edBuf„r
* 
sh¨edBuf„r
() const;

62 
£tTo
(c⁄° 
Såög16
& 
Ÿhî
);

63 
°©us_t
 
£tTo
(c⁄° 
ch¨16_t
* 
Ÿhî
);

64 
°©us_t
 
£tTo
(c⁄° 
ch¨16_t
* 
Ÿhî
, 
size_t
 
Àn
);

65 
°©us_t
 
£tTo
(c⁄° 
Såög16
& 
Ÿhî
,

66 
size_t
 
Àn
,

67 
size_t
 
begö
=0);

69 
°©us_t
 
≠≥nd
(c⁄° 
Såög16
& 
Ÿhî
);

70 
°©us_t
 
≠≥nd
(c⁄° 
ch¨16_t
* 
Ÿhî
, 
size_t
 
Àn
);

72 
ölöe
 
Såög16
& 
›î©‹
=(c⁄° Såög16& 
Ÿhî
);

74 
ölöe
 
Såög16
& 
›î©‹
+=(c⁄° Såög16& 
Ÿhî
);

75 
ölöe
 
Såög16
 
›î©‹
+(c⁄° Såög16& 
Ÿhî
) const;

77 
°©us_t
 
ö£π
(
size_t
 
pos
, c⁄° 
ch¨16_t
* 
chrs
);

78 
°©us_t
 
ö£π
(
size_t
 
pos
,

79 c⁄° 
ch¨16_t
* 
chrs
, 
size_t
 
Àn
);

81 
ssize_t
 
födFú°
(
ch¨16_t
 
c
) const;

82 
ssize_t
 
födLa°
(
ch¨16_t
 
c
) const;

84 
boﬁ
 
°¨tsWôh
(c⁄° 
Såög16
& 
¥efix
) const;

85 
boﬁ
 
°¨tsWôh
(c⁄° 
ch¨16_t
* 
¥efix
) const;

87 
°©us_t
 
makeLowî
();

89 
°©us_t
 
ª∂a˚AŒ
(
ch¨16_t
 
ª∂a˚This
,

90 
ch¨16_t
 
wôhThis
);

92 
°©us_t
 
ªmove
(
size_t
 
Àn
, size_à
begö
=0);

94 
ölöe
 
com∑ª
(c⁄° 
Såög16
& 
Ÿhî
) const;

96 
ölöe
 
boﬁ
 
›î©‹
<(c⁄° 
Såög16
& 
Ÿhî
) const;

97 
ölöe
 
boﬁ
 
›î©‹
<=(c⁄° 
Såög16
& 
Ÿhî
) const;

98 
ölöe
 
boﬁ
 
›î©‹
==(c⁄° 
Såög16
& 
Ÿhî
) const;

99 
ölöe
 
boﬁ
 
›î©‹
!=(c⁄° 
Såög16
& 
Ÿhî
) const;

100 
ölöe
 
boﬁ
 
›î©‹
>=(c⁄° 
Såög16
& 
Ÿhî
) const;

101 
ölöe
 
boﬁ
 
›î©‹
>(c⁄° 
Såög16
& 
Ÿhî
) const;

103 
ölöe
 
boﬁ
 
›î©‹
<(c⁄° 
ch¨16_t
* 
Ÿhî
) const;

104 
ölöe
 
boﬁ
 
›î©‹
<=(c⁄° 
ch¨16_t
* 
Ÿhî
) const;

105 
ölöe
 
boﬁ
 
›î©‹
==(c⁄° 
ch¨16_t
* 
Ÿhî
) const;

106 
ölöe
 
boﬁ
 
›î©‹
!=(c⁄° 
ch¨16_t
* 
Ÿhî
) const;

107 
ölöe
 
boﬁ
 
›î©‹
>=(c⁄° 
ch¨16_t
* 
Ÿhî
) const;

108 
ölöe
 
boﬁ
 
›î©‹
>(c⁄° 
ch¨16_t
* 
Ÿhî
) const;

110 
ölöe
 
›î©‹
 c⁄° 
ch¨16_t
*() const;

112 
¥iv©e
:

113 c⁄° 
ch¨16_t
* 
mSåög
;

118 
	$ANDROID_TRIVIAL_MOVE_TRAIT
(
Såög16
)

120 
TextOuçut
& 
›î©‹
<<(TextOuçut& 
to
, c⁄° 
Såög16
& 
vÆ
);

125 
ölöe
 
	$com∑ª_ty≥
(c⁄° 
Såög16
& 
lhs
, c⁄° Såög16& 
rhs
)

127  
lhs
.
	`com∑ª
(
rhs
);

128 
	}
}

130 
ölöe
 
	$°ri˘ly_‹dî_ty≥
(c⁄° 
Såög16
& 
lhs
, c⁄° Såög16& 
rhs
)

132  
	`com∑ª_ty≥
(
lhs
, 
rhs
) < 0;

133 
	}
}

135 
ölöe
 c⁄° 
ch¨16_t
* 
Såög16
::
	$°rög
() const

137  
mSåög
;

138 
	}
}

140 
ölöe
 
size_t
 
Såög16
::
	$size
() const

142  
Sh¨edBuf„r
::
	`sizeFromD©a
(
mSåög
)/(
ch¨16_t
)-1;

143 
	}
}

145 
ölöe
 c⁄° 
Sh¨edBuf„r
* 
Såög16
::
	$sh¨edBuf„r
() const

147  
Sh¨edBuf„r
::
	`buf„rFromD©a
(
mSåög
);

148 
	}
}

150 
ölöe
 
Såög16
& Såög16::
›î©‹
=(c⁄° Såög16& 
Ÿhî
)

152 
£tTo
(
Ÿhî
);

153  *
this
;

156 
ölöe
 
Såög16
& Såög16::
›î©‹
+=(c⁄° Såög16& 
Ÿhî
)

158 
≠≥nd
(
Ÿhî
);

159  *
this
;

162 
ölöe
 
Såög16
 Såög16::
›î©‹
+(c⁄° Såög16& 
Ÿhî
) const

164 
Såög16
 
tmp
(*
this
);

165 
tmp
 +
Ÿhî
;

166  
tmp
;

169 
ölöe
 
Såög16
::
	$com∑ª
(c⁄° 
Såög16
& 
Ÿhî
) const

171  
	`°rzcmp16
(
mSåög
, 
	`size
(), 
Ÿhî
.mString, other.size());

172 
	}
}

174 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
<(c⁄° Såög16& 
Ÿhî
) const

176  
°rzcmp16
(
mSåög
, 
size
(), 
Ÿhî
.mString, other.size()) < 0;

179 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
<=(c⁄° Såög16& 
Ÿhî
) const

181  
°rzcmp16
(
mSåög
, 
size
(), 
Ÿhî
.mString, other.size()) <= 0;

184 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
==(c⁄° Såög16& 
Ÿhî
) const

186  
°rzcmp16
(
mSåög
, 
size
(), 
Ÿhî
.mString, other.size()) == 0;

189 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
!=(c⁄° Såög16& 
Ÿhî
) const

191  
°rzcmp16
(
mSåög
, 
size
(), 
Ÿhî
.mString, other.size()) != 0;

194 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
>=(c⁄° Såög16& 
Ÿhî
) const

196  
°rzcmp16
(
mSåög
, 
size
(), 
Ÿhî
.mString, other.size()) >= 0;

199 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
>(c⁄° Såög16& 
Ÿhî
) const

201  
°rzcmp16
(
mSåög
, 
size
(), 
Ÿhî
.mString, other.size()) > 0;

204 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
<(c⁄° 
ch¨16_t
* 
Ÿhî
) const

206  
°rcmp16
(
mSåög
, 
Ÿhî
) < 0;

209 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
<=(c⁄° 
ch¨16_t
* 
Ÿhî
) const

211  
°rcmp16
(
mSåög
, 
Ÿhî
) <= 0;

214 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
==(c⁄° 
ch¨16_t
* 
Ÿhî
) const

216  
°rcmp16
(
mSåög
, 
Ÿhî
) == 0;

219 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
!=(c⁄° 
ch¨16_t
* 
Ÿhî
) const

221  
°rcmp16
(
mSåög
, 
Ÿhî
) != 0;

224 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
>=(c⁄° 
ch¨16_t
* 
Ÿhî
) const

226  
°rcmp16
(
mSåög
, 
Ÿhî
) >= 0;

229 
ölöe
 
boﬁ
 
Såög16
::
›î©‹
>(c⁄° 
ch¨16_t
* 
Ÿhî
) const

231  
°rcmp16
(
mSåög
, 
Ÿhî
) > 0;

234 
ölöe
 
Såög16
::
›î©‹
 c⁄° 
ch¨16_t
*() const

236  
mSåög
;

	@src/utils/String8.cpp

17 
	~<utûs/Såög8.h
>

21 
	#ALOG_ASSERT
(...)

	)

22 
	~<utûs/Unicode.h
>

23 
	~<utûs/Sh¨edBuf„r.h
>

24 
	~<utûs/Såög16.h
>

25 
	~<utûs/TextOuçut.h
>

31 
	~<°dio.h
>

32 
	~<°d¨g.h
>

33 
	~<˘y≥.h
>

41 
«me•a˚
 
	g™droid
 {

45 
	#RES_PATH_SEPARATOR
 '/'

	)

46 
	#OS_PATH_SEPARATOR
 '/'

	)

48 
Sh¨edBuf„r
* 
	ggEm±ySåögBuf
 = 
NULL
;

49 * 
	ggEm±ySåög
 = 
NULL
;

51 
gD¨wöC™tLﬂdAŒObje˘s
;

52 
	ggD¨wöIsRóŒyA¬oyög
;

54 
ölöe
 * 
gëEm±ySåög
()

56 
	ggEm±ySåögBuf
->
acquúe
();

57  
	ggEm±ySåög
;

60 
öôülize_°rög8
()

68 
Sh¨edBuf„r
* 
	gbuf
 = Sh¨edBuf„r::
Æloc
(1);

69 * 
	g°r
 = (*)
buf
->
d©a
();

70 *
	g°r
 = 0;

71 
	ggEm±ySåögBuf
 = 
buf
;

72 
	ggEm±ySåög
 = 
°r
;

75 
ãrmö©e_°rög8
()

77 
	gSh¨edBuf„r
::
buf„rFromD©a
(
gEm±ySåög
)->
ªÀa£
();

78 
	ggEm±ySåögBuf
 = 
NULL
;

79 
	ggEm±ySåög
 = 
NULL
;

84 * 
ÆlocFromUTF8
(c⁄° * 
ö
, 
size_t
 
Àn
)

86 i‡(
	gÀn
 > 0) {

87 
Sh¨edBuf„r
* 
	gbuf
 = Sh¨edBuf„r::
Æloc
(
Àn
+1);

88 
ALOG_ASSERT
(
buf
, "UnableÅoállocate shared buffer");

89 i‡(
	gbuf
) {

90 * 
	g°r
 = (*)
buf
->
d©a
();

91 
mem˝y
(
°r
, 
ö
, 
Àn
);

92 
	g°r
[
Àn
] = 0;

93  
	g°r
;

95  
	gNULL
;

98  
gëEm±ySåög
();

101 * 
ÆlocFromUTF16
(c⁄° 
ch¨16_t
* 
ö
, 
size_t
 
Àn
)

103 i‡(
	gÀn
 =0Ë 
gëEm±ySåög
();

105 c⁄° 
ssize_t
 
	gbyãs
 = 
utf16_to_utf8_Àngth
(
ö
, 
Àn
);

106 i‡(
	gbyãs
 < 0) {

107  
gëEm±ySåög
();

110 
Sh¨edBuf„r
* 
	gbuf
 = Sh¨edBuf„r::
Æloc
(
byãs
+1);

111 
ALOG_ASSERT
(
buf
, "UnableÅoállocate shared buffer");

112 i‡(!
	gbuf
) {

113  
gëEm±ySåög
();

116 * 
	g°r
 = (*)
buf
->
d©a
();

117 
utf16_to_utf8
(
ö
, 
Àn
, 
°r
);

118  
	g°r
;

121 * 
ÆlocFromUTF32
(c⁄° 
ch¨32_t
* 
ö
, 
size_t
 
Àn
)

123 i‡(
	gÀn
 == 0) {

124  
gëEm±ySåög
();

127 c⁄° 
ssize_t
 
	gbyãs
 = 
utf32_to_utf8_Àngth
(
ö
, 
Àn
);

128 i‡(
	gbyãs
 < 0) {

129  
gëEm±ySåög
();

132 
Sh¨edBuf„r
* 
	gbuf
 = Sh¨edBuf„r::
Æloc
(
byãs
+1);

133 
ALOG_ASSERT
(
buf
, "UnableÅoállocate shared buffer");

134 i‡(!
	gbuf
) {

135  
gëEm±ySåög
();

138 * 
	g°r
 = (*Ë
buf
->
d©a
();

139 
utf32_to_utf8
(
ö
, 
Àn
, 
°r
);

141  
	g°r
;

146 
	gSåög8
::
Såög8
()

147 : 
mSåög
(
gëEm±ySåög
())

151 
Såög8
::Såög8(c⁄° Såög8& 
o
)

152 : 
mSåög
(
o
.mString)

154 
Sh¨edBuf„r
::
buf„rFromD©a
(
mSåög
)->
acquúe
();

157 
	gSåög8
::
Såög8
(c⁄° * 
o
)

158 : 
mSåög
(
ÆlocFromUTF8
(
o
, 
°æí
(o)))

160 i‡(
	gmSåög
 =
NULL
) {

161 
mSåög
 = 
gëEm±ySåög
();

165 
	gSåög8
::
Såög8
(c⁄° * 
o
, 
size_t
 
Àn
)

166 : 
mSåög
(
ÆlocFromUTF8
(
o
, 
Àn
))

168 i‡(
	gmSåög
 =
NULL
) {

169 
mSåög
 = 
gëEm±ySåög
();

173 
	gSåög8
::
Såög8
(c⁄° 
Såög16
& 
o
)

174 : 
mSåög
(
ÆlocFromUTF16
(
o
.
°rög
(), o.
size
()))

178 
	gSåög8
::
Såög8
(c⁄° 
ch¨16_t
* 
o
)

179 : 
mSåög
(
ÆlocFromUTF16
(
o
, 
°æí16
(o)))

183 
	gSåög8
::
Såög8
(c⁄° 
ch¨16_t
* 
o
, 
size_t
 
Àn
)

184 : 
mSåög
(
ÆlocFromUTF16
(
o
, 
Àn
))

188 
	gSåög8
::
Såög8
(c⁄° 
ch¨32_t
* 
o
)

189 : 
mSåög
(
ÆlocFromUTF32
(
o
, 
°æí32
(o)))

193 
	gSåög8
::
Såög8
(c⁄° 
ch¨32_t
* 
o
, 
size_t
 
Àn
)

194 : 
mSåög
(
ÆlocFromUTF32
(
o
, 
Àn
))

198 
	gSåög8
::~
Såög8
()

200 
Sh¨edBuf„r
::
buf„rFromD©a
(
mSåög
)->
ªÀa£
();

203 
Såög8
 
	gSåög8
::
f‹m©
(c⁄° * 
fmt
, ...)

205 
va_li°
 
	g¨gs
;

206 
va_°¨t
(
¨gs
, 
fmt
);

208 
Såög8
 
ªsu…
(
f‹m©V
(
fmt
, 
¨gs
));

210 
va_íd
(
¨gs
);

211  
	gªsu…
;

214 
Såög8
 
	gSåög8
::
f‹m©V
(c⁄° * 
fmt
, 
va_li°
 
¨gs
)

216 
Såög8
 
	gªsu…
;

217 
	gªsu…
.
≠≥ndF‹m©V
(
fmt
, 
¨gs
);

218  
	gªsu…
;

221 
	gSåög8
::
˛ór
() {

222 
Sh¨edBuf„r
::
buf„rFromD©a
(
mSåög
)->
ªÀa£
();

223 
	gmSåög
 = 
gëEm±ySåög
();

226 
	gSåög8
::
£tTo
(c⁄° 
Såög8
& 
Ÿhî
)

228 
Sh¨edBuf„r
::
buf„rFromD©a
(
Ÿhî
.
mSåög
)->
acquúe
();

229 
	gSh¨edBuf„r
::
buf„rFromD©a
(
mSåög
)->
ªÀa£
();

230 
	gmSåög
 = 
Ÿhî
.
mSåög
;

233 
°©us_t
 
	gSåög8
::
£tTo
(c⁄° * 
Ÿhî
)

235 c⁄° *
√wSåög
 = 
ÆlocFromUTF8
(
Ÿhî
, 
°æí
(other));

236 
	gSh¨edBuf„r
::
buf„rFromD©a
(
mSåög
)->
ªÀa£
();

237 
	gmSåög
 = 
√wSåög
;

238 i‡(
	gmSåög
Ë 
	gNO_ERROR
;

240 
	gmSåög
 = 
gëEm±ySåög
();

241  
	gNO_MEMORY
;

244 
°©us_t
 
	gSåög8
::
£tTo
(c⁄° * 
Ÿhî
, 
size_t
 
Àn
)

246 c⁄° *
	g√wSåög
 = 
ÆlocFromUTF8
(
Ÿhî
, 
Àn
);

247 
	gSh¨edBuf„r
::
buf„rFromD©a
(
mSåög
)->
ªÀa£
();

248 
	gmSåög
 = 
√wSåög
;

249 i‡(
	gmSåög
Ë 
	gNO_ERROR
;

251 
	gmSåög
 = 
gëEm±ySåög
();

252  
	gNO_MEMORY
;

255 
°©us_t
 
	gSåög8
::
£tTo
(c⁄° 
ch¨16_t
* 
Ÿhî
, 
size_t
 
Àn
)

257 c⁄° *
	g√wSåög
 = 
ÆlocFromUTF16
(
Ÿhî
, 
Àn
);

258 
	gSh¨edBuf„r
::
buf„rFromD©a
(
mSåög
)->
ªÀa£
();

259 
	gmSåög
 = 
√wSåög
;

260 i‡(
	gmSåög
Ë 
	gNO_ERROR
;

262 
	gmSåög
 = 
gëEm±ySåög
();

263  
	gNO_MEMORY
;

266 
°©us_t
 
	gSåög8
::
£tTo
(c⁄° 
ch¨32_t
* 
Ÿhî
, 
size_t
 
Àn
)

268 c⁄° *
	g√wSåög
 = 
ÆlocFromUTF32
(
Ÿhî
, 
Àn
);

269 
	gSh¨edBuf„r
::
buf„rFromD©a
(
mSåög
)->
ªÀa£
();

270 
	gmSåög
 = 
√wSåög
;

271 i‡(
	gmSåög
Ë 
	gNO_ERROR
;

273 
	gmSåög
 = 
gëEm±ySåög
();

274  
	gNO_MEMORY
;

277 
°©us_t
 
	gSåög8
::
≠≥nd
(c⁄° 
Såög8
& 
Ÿhî
)

279 c⁄° 
size_t
 
ŸhîLí
 = 
Ÿhî
.
byãs
();

280 i‡(
byãs
() == 0) {

281 
£tTo
(
Ÿhî
);

282  
	gNO_ERROR
;

283 } i‡(
	gŸhîLí
 == 0) {

284  
NO_ERROR
;

287  
ªÆ_≠≥nd
(
Ÿhî
.
°rög
(), 
ŸhîLí
);

290 
°©us_t
 
	gSåög8
::
≠≥nd
(c⁄° * 
Ÿhî
)

292  
≠≥nd
(
Ÿhî
, 
°æí
(other));

295 
°©us_t
 
	gSåög8
::
≠≥nd
(c⁄° * 
Ÿhî
, 
size_t
 
ŸhîLí
)

297 i‡(
byãs
() == 0) {

298  
£tTo
(
Ÿhî
, 
ŸhîLí
);

299 } i‡(
	gŸhîLí
 == 0) {

300  
NO_ERROR
;

303  
ªÆ_≠≥nd
(
Ÿhî
, 
ŸhîLí
);

306 
°©us_t
 
	gSåög8
::
≠≥ndF‹m©
(c⁄° * 
fmt
, ...)

308 
va_li°
 
	g¨gs
;

309 
va_°¨t
(
¨gs
, 
fmt
);

311 
°©us_t
 
	gªsu…
 = 
≠≥ndF‹m©V
(
fmt
, 
¨gs
);

313 
va_íd
(
¨gs
);

314  
	gªsu…
;

317 
°©us_t
 
	gSåög8
::
≠≥ndF‹m©V
(c⁄° * 
fmt
, 
va_li°
 
¨gs
)

319 
	gªsu…
 = 
NO_ERROR
;

320 
	gn
 = 
v¢¥ötf
(
NULL
, 0, 
fmt
, 
¨gs
);

321 i‡(
	gn
 != 0) {

322 
size_t
 
ﬁdLígth
 = 
Àngth
();

323 * 
	gbuf
 = 
lockBuf„r
(
ﬁdLígth
 + 
n
);

324 i‡(
	gbuf
) {

325 
v¢¥ötf
(
buf
 + 
ﬁdLígth
, 
n
 + 1, 
fmt
, 
¨gs
);

327 
	gªsu…
 = 
NO_MEMORY
;

330  
	gªsu…
;

333 
°©us_t
 
	gSåög8
::
ªÆ_≠≥nd
(c⁄° * 
Ÿhî
, 
size_t
 
ŸhîLí
)

335 c⁄° 
size_t
 
	gmyLí
 = 
byãs
();

337 
Sh¨edBuf„r
* 
	gbuf
 = Sh¨edBuf„r::
buf„rFromD©a
(
mSåög
)

338 ->
edôResize
(
myLí
+
ŸhîLí
+1);

339 i‡(
	gbuf
) {

340 * 
	g°r
 = (*)
buf
->
d©a
();

341 
	gmSåög
 = 
°r
;

342 
	g°r
 +
myLí
;

343 
mem˝y
(
°r
, 
Ÿhî
, 
ŸhîLí
);

344 
	g°r
[
ŸhîLí
] = '\0';

345  
	gNO_ERROR
;

347  
	gNO_MEMORY
;

350 * 
	gSåög8
::
lockBuf„r
(
size_t
 
size
)

352 
Sh¨edBuf„r
* 
buf
 = Sh¨edBuf„r::
buf„rFromD©a
(
mSåög
)

353 ->
edôResize
(
size
+1);

354 i‡(
	gbuf
) {

355 * 
	g°r
 = (*)
buf
->
d©a
();

356 
	gmSåög
 = 
°r
;

357  
	g°r
;

359  
	gNULL
;

362 
	gSåög8
::
u∆ockBuf„r
()

364 
u∆ockBuf„r
(
°æí
(
mSåög
));

367 
°©us_t
 
	gSåög8
::
u∆ockBuf„r
(
size_t
 
size
)

369 i‡(
size
 !
this
->size()) {

370 
Sh¨edBuf„r
* 
buf
 = Sh¨edBuf„r::
buf„rFromD©a
(
mSåög
)

371 ->
edôResize
(
size
+1);

372 i‡(! 
	gbuf
) {

373  
	gNO_MEMORY
;

376 * 
	g°r
 = (*)
buf
->
d©a
();

377 
	g°r
[
size
] = 0;

378 
	gmSåög
 = 
°r
;

381  
	gNO_ERROR
;

384 
ssize_t
 
	gSåög8
::
föd
(c⁄° * 
Ÿhî
, 
size_t
 
°¨t
) const

386 
size_t
 
	gÀn
 = 
size
();

387 i‡(
	g°¨t
 >
Àn
) {

390 c⁄° * 
	gs
 = 
mSåög
+
°¨t
;

391 c⁄° * 
	gp
 = 
°r°r
(
s
, 
Ÿhî
);

392  
	gp
 ?Ö-
	gmSåög
 : -1;

395 
	gSåög8
::
toLowî
()

397 
toLowî
(0, 
size
());

400 
	gSåög8
::
toLowî
(
size_t
 
°¨t
, size_à
Àngth
)

402 c⁄° 
size_t
 
	gÀn
 = 
size
();

403 i‡(
	g°¨t
 >
Àn
) {

406 i‡(
	g°¨t
+
	gÀngth
 > 
	gÀn
) {

407 
	gÀngth
 = 
Àn
-
°¨t
;

409 * 
	gbuf
 = 
lockBuf„r
(
Àn
);

410 
	gbuf
 +
°¨t
;

411 
	gÀngth
 > 0) {

412 *
	gbuf
 = 
tﬁowî
(*
buf
);

413 
	gbuf
++;

414 
	gÀngth
--;

416 
u∆ockBuf„r
(
Àn
);

419 
	gSåög8
::
toUµî
()

421 
toUµî
(0, 
size
());

424 
	gSåög8
::
toUµî
(
size_t
 
°¨t
, size_à
Àngth
)

426 c⁄° 
size_t
 
	gÀn
 = 
size
();

427 i‡(
	g°¨t
 >
Àn
) {

430 i‡(
	g°¨t
+
	gÀngth
 > 
	gÀn
) {

431 
	gÀngth
 = 
Àn
-
°¨t
;

433 * 
	gbuf
 = 
lockBuf„r
(
Àn
);

434 
	gbuf
 +
°¨t
;

435 
	gÀngth
 > 0) {

436 *
	gbuf
 = 
touµî
(*
buf
);

437 
	gbuf
++;

438 
	gÀngth
--;

440 
u∆ockBuf„r
(
Àn
);

443 
size_t
 
	gSåög8
::
gëUtf32Lígth
() const

445  
utf8_to_utf32_Àngth
(
mSåög
, 
Àngth
());

448 
öt32_t
 
	gSåög8
::
gëUtf32At
(
size_t
 
ödex
, size_à*
√xt_ödex
) const

450  
utf32_‰om_utf8_©
(
mSåög
, 
Àngth
(), 
ödex
, 
√xt_ödex
);

453 
	gSåög8
::
gëUtf32
(
ch¨32_t
* 
d°
) const

455 
utf8_to_utf32
(
mSåög
, 
Àngth
(), 
d°
);

458 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, c⁄° 
	gSåög8
& 
	gvÆ
)

460 
	gto
 << 
	gvÆ
.
°rög
();

461  
	gto
;

467 
	gSåög8
::
£tP©hName
(c⁄° * 
«me
)

469 
£tP©hName
(
«me
, 
°æí
(name));

472 
	gSåög8
::
£tP©hName
(c⁄° * 
«me
, 
size_t
 
Àn
)

474 * 
	gbuf
 = 
lockBuf„r
(
Àn
);

476 
mem˝y
(
buf
, 
«me
, 
Àn
);

479 i‡(
	gÀn
 > 0 && 
	gbuf
[
Àn
-1] =
OS_PATH_SEPARATOR
)

480 
Àn
--;

482 
	gbuf
[
Àn
] = '\0';

484 
u∆ockBuf„r
(
Àn
);

487 
Såög8
 
	gSåög8
::
gëP©hLóf
() const

489 c⁄° * 
˝
;

490 c⁄° *c⁄° 
	gbuf
 = 
mSåög
;

492 
	g˝
 = 
°ºchr
(
buf
, 
OS_PATH_SEPARATOR
);

493 i‡(
	g˝
 =
NULL
)

494  
Såög8
(*
this
);

496  
Såög8
(
˝
+1);

499 
Såög8
 
	gSåög8
::
gëP©hDú
() const

501 c⁄° * 
˝
;

502 c⁄° *c⁄° 
	g°r
 = 
mSåög
;

504 
	g˝
 = 
°ºchr
(
°r
, 
OS_PATH_SEPARATOR
);

505 i‡(
	g˝
 =
NULL
)

506  
Såög8
("");

508  
Såög8
(
°r
, 
˝
 - str);

511 
Såög8
 
	gSåög8
::
wÆkP©h
(Såög8* 
outRemaös
) const

513 c⁄° * 
˝
;

514 c⁄° *c⁄° 
	g°r
 = 
mSåög
;

515 c⁄° * 
	gbuf
 = 
°r
;

517 
	g˝
 = 
°rchr
(
buf
, 
OS_PATH_SEPARATOR
);

518 i‡(
	g˝
 =
buf
) {

520 
buf
 = buf+1;

521 
	g˝
 = 
°rchr
(
buf
, 
OS_PATH_SEPARATOR
);

524 i‡(
	g˝
 =
NULL
) {

525 
Såög8
 
ªs
 = 
buf
 !
°r
 ? Såög8(bufË: *
this
;

526 i‡(
	goutRemaös
Ë*outRemaö†
Såög8
("");

527  
	gªs
;

530 
Såög8
 
ªs
(
buf
, 
˝
-buf);

531 i‡(
	goutRemaös
Ë*outRemaö†
Såög8
(
˝
+1);

532  
	gªs
;

540 * 
	gSåög8
::
föd_exãnsi⁄
() const

542 c⁄° * 
œ°Sœsh
;

543 c⁄° * 
	gœ°DŸ
;

544 
	gextLí
;

545 c⁄° * c⁄° 
	g°r
 = 
mSåög
;

548 
	gœ°Sœsh
 = 
°ºchr
(
°r
, 
OS_PATH_SEPARATOR
);

549 i‡(
	gœ°Sœsh
 =
NULL
)

550 
œ°Sœsh
 = 
°r
;

552 
	gœ°Sœsh
++;

555 
	gœ°DŸ
 = 
°ºchr
(
œ°Sœsh
, '.');

556 i‡(
	gœ°DŸ
 =
NULL
)

557  
NULL
;

560  
	gc⁄°_ˇ°
<*>(
	gœ°DŸ
);

563 
Såög8
 
	gSåög8
::
gëP©hExãnsi⁄
() const

565 * 
ext
;

567 
	gext
 = 
föd_exãnsi⁄
();

568 i‡(
	gext
 !
NULL
)

569  
Såög8
(
ext
);

571  
Såög8
("");

574 
Såög8
 
	gSåög8
::
gëBa£P©h
() const

576 * 
ext
;

577 c⁄° * c⁄° 
	g°r
 = 
mSåög
;

579 
	gext
 = 
föd_exãnsi⁄
();

580 i‡(
	gext
 =
NULL
)

581  
Såög8
(*
this
);

583  
Såög8
(
°r
, 
ext
 - str);

586 
	gSåög8
& Såög8::
≠≥ndP©h
(c⁄° * 
«me
)

589 i‡(
«me
[0] !
OS_PATH_SEPARATOR
) {

590 i‡(*
«me
 == '\0') {

592  *
this
;

595 
size_t
 
	gÀn
 = 
Àngth
();

596 i‡(
	gÀn
 == 0) {

598 
£tP©hName
(
«me
);

599  *
	gthis
;

603 
	g√wÀn
 = 
°æí
(
«me
);

605 * 
	gbuf
 = 
lockBuf„r
(
Àn
+1+
√wÀn
);

608 i‡(
	gbuf
[
Àn
-1] !
OS_PATH_SEPARATOR
)

609 
buf
[
Àn
++] = 
OS_PATH_SEPARATOR
;

611 
mem˝y
(
buf
+
Àn
, 
«me
, 
√wÀn
+1);

612 
	gÀn
 +
√wÀn
;

614 
u∆ockBuf„r
(
Àn
);

616  *
	gthis
;

618 
£tP©hName
(
«me
);

619  *
	gthis
;

623 
	gSåög8
& Såög8::
c⁄vîtToResP©h
()

625 #i‡
OS_PATH_SEPARATOR
 !
RES_PATH_SEPARATOR


626 
size_t
 
Àn
 = 
Àngth
();

627 i‡(
	gÀn
 > 0) {

628 * 
	gbuf
 = 
lockBuf„r
(
Àn
);

629 * 
	gíd
 = 
buf
 + 
Àn
; 
	gbuf
 <Énd; ++buf) {

630 i‡(*
	gbuf
 =
OS_PATH_SEPARATOR
)

631 *
buf
 = 
RES_PATH_SEPARATOR
;

633 
u∆ockBuf„r
(
Àn
);

636  *
	gthis
;

	@src/utils/String8.h

17 #i‚de‡
ANDROID_STRING8_H


18 
	#ANDROID_STRING8_H


	)

20 
	~<utûs/Eº‹s.h
>

21 
	~<utûs/Sh¨edBuf„r.h
>

22 
	~<utûs/Unicode.h
>

23 
	~<utûs/Ty≥Hñ≥rs.h
>

25 
	~<°rög.h
>

26 
	~<°d¨g.h
>

30 
«me•a˚
 
	g™droid
 {

32 
˛ass
 
	gSåög16
;

33 
˛ass
 
	gTextOuçut
;

37 ˛as†
	cSåög8


39 
	gpublic
:

40 
Såög8
();

41 
Såög8
(c⁄° Såög8& 
o
);

42 
ex∂icô
 
Såög8
(c⁄° * 
o
);

43 
ex∂icô
 
Såög8
(c⁄° * 
o
, 
size_t
 
numCh¨s
);

45 
ex∂icô
 
Såög8
(c⁄° 
Såög16
& 
o
);

46 
ex∂icô
 
Såög8
(c⁄° 
ch¨16_t
* 
o
);

47 
ex∂icô
 
Såög8
(c⁄° 
ch¨16_t
* 
o
, 
size_t
 
numCh¨s
);

48 
ex∂icô
 
Såög8
(c⁄° 
ch¨32_t
* 
o
);

49 
ex∂icô
 
Såög8
(c⁄° 
ch¨32_t
* 
o
, 
size_t
 
numCh¨s
);

50 ~
Såög8
();

52 
ölöe
 c⁄° 
Såög8
 
em±y
();

54 
Såög8
 
f‹m©
(c⁄° * 
fmt
, ...Ë
__©åibuã__
((f‹m© (
¥ötf
, 1, 2)));

55 
Såög8
 
f‹m©V
(c⁄° * 
fmt
, 
va_li°
 
¨gs
);

57 
ölöe
 c⁄° * 
°rög
() const;

58 
ölöe
 
size_t
 
size
() const;

59 
ölöe
 
size_t
 
Àngth
() const;

60 
ölöe
 
size_t
 
byãs
() const;

61 
ölöe
 
boﬁ
 
isEm±y
() const;

63 
ölöe
 c⁄° 
Sh¨edBuf„r
* 
sh¨edBuf„r
() const;

65 
˛ór
();

67 
£tTo
(c⁄° 
Såög8
& 
Ÿhî
);

68 
°©us_t
 
£tTo
(c⁄° * 
Ÿhî
);

69 
°©us_t
 
£tTo
(c⁄° * 
Ÿhî
, 
size_t
 
numCh¨s
);

70 
°©us_t
 
£tTo
(c⁄° 
ch¨16_t
* 
Ÿhî
, 
size_t
 
numCh¨s
);

71 
°©us_t
 
£tTo
(c⁄° 
ch¨32_t
* 
Ÿhî
,

72 
size_t
 
Àngth
);

74 
°©us_t
 
≠≥nd
(c⁄° 
Såög8
& 
Ÿhî
);

75 
°©us_t
 
≠≥nd
(c⁄° * 
Ÿhî
);

76 
°©us_t
 
≠≥nd
(c⁄° * 
Ÿhî
, 
size_t
 
numCh¨s
);

78 
°©us_t
 
≠≥ndF‹m©
(c⁄° * 
fmt
, ...)

79 
__©åibuã__
((
f‹m©
 (
¥ötf
, 2, 3)));

80 
°©us_t
 
≠≥ndF‹m©V
(c⁄° * 
fmt
, 
va_li°
 
¨gs
);

84 
size_t
 
gëUtf32Lígth
() const;

85 
öt32_t
 
gëUtf32At
(
size_t
 
ödex
,

86 
size_t
 *
√xt_ödex
) const;

87 
gëUtf32
(
ch¨32_t
* 
d°
) const;

89 
ölöe
 
	gSåög8
& 
	g›î©‹
=(c⁄° 
Såög8
& 
Ÿhî
);

90 
ölöe
 
	gSåög8
& 
	g›î©‹
=(c⁄° * 
Ÿhî
);

92 
ölöe
 
	gSåög8
& 
	g›î©‹
+=(c⁄° 
Såög8
& 
Ÿhî
);

93 
ölöe
 
Såög8
 
	g›î©‹
+(c⁄° 
	gSåög8
& 
	gŸhî
) const;

95 
ölöe
 
	gSåög8
& 
	g›î©‹
+=(c⁄° * 
Ÿhî
);

96 
ölöe
 
Såög8
 
	g›î©‹
+(c⁄° * 
	gŸhî
) const;

98 
ölöe
 
com∑ª
(c⁄° 
Såög8
& 
Ÿhî
) const;

100 
ölöe
 
boﬁ
 
	g›î©‹
<(c⁄° 
	gSåög8
& 
	gŸhî
) const;

101 
ölöe
 
boﬁ
 
	g›î©‹
<=(c⁄° 
Såög8
& 
Ÿhî
) const;

102 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Såög8
& 
Ÿhî
) const;

103 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Såög8
& 
Ÿhî
) const;

104 
ölöe
 
boﬁ
 
	g›î©‹
>=(c⁄° 
Såög8
& 
Ÿhî
) const;

105 
ölöe
 
boﬁ
 
	g›î©‹
>(c⁄° 
	gSåög8
& 
	gŸhî
) const;

107 
ölöe
 
boﬁ
 
	g›î©‹
<(c⁄° * 
	gŸhî
) const;

108 
ölöe
 
boﬁ
 
	g›î©‹
<=(c⁄° * 
Ÿhî
) const;

109 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° * 
Ÿhî
) const;

110 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° * 
Ÿhî
) const;

111 
ölöe
 
boﬁ
 
	g›î©‹
>=(c⁄° * 
Ÿhî
) const;

112 
ölöe
 
boﬁ
 
	g›î©‹
>(c⁄° * 
	gŸhî
) const;

114 
ölöe
 
›î©‹
 const *() const;

116 * 
lockBuf„r
(
size_t
 
size
);

117 
u∆ockBuf„r
();

118 
°©us_t
 
u∆ockBuf„r
(
size_t
 
size
);

122 
ssize_t
 
föd
(c⁄° * 
Ÿhî
, 
size_t
 
°¨t
 = 0) const;

124 
toLowî
();

125 
toLowî
(
size_t
 
°¨t
, size_à
numCh¨s
);

126 
toUµî
();

127 
toUµî
(
size_t
 
°¨t
, size_à
numCh¨s
);

138 
£tP©hName
(c⁄° * 
«me
);

139 
£tP©hName
(c⁄° * 
«me
, 
size_t
 
numCh¨s
);

146 
Såög8
 
gëP©hLóf
() const;

156 
Såög8
 
gëP©hDú
() const;

166 
Såög8
 
wÆkP©h
(Såög8* 
outRemaös
 = 
NULL
) const;

179 
Såög8
 
gëP©hExãnsi⁄
() const;

187 
Såög8
 
gëBa£P©h
() const;

197 
	gSåög8
& 
≠≥ndP©h
(c⁄° * 
Àaf
);

198 
	gSåög8
& 
≠≥ndP©h
(c⁄° 
Såög8
& 
Àaf
Ë{ áµídP©h÷óf.
°rög
()); }

203 
Såög8
 
≠≥ndP©hC›y
(c⁄° * 
Àaf
) const

204 { 
Såög8
 
p
(*
this
); 
	gp
.
≠≥ndP©h
(
Àaf
); Ö; }

205 
Såög8
 
≠≥ndP©hC›y
(c⁄° Såög8& 
Àaf
Ëc⁄° { áµídP©hC›y÷óf.
°rög
()); }

214 
	gSåög8
& 
c⁄vîtToResP©h
();

216 
	g¥iv©e
:

217 
°©us_t
 
ªÆ_≠≥nd
(c⁄° * 
Ÿhî
, 
size_t
 
numCh¨s
);

218 * 
föd_exãnsi⁄
() const;

220 c⁄° * 
	gmSåög
;

225 
	$ANDROID_TRIVIAL_MOVE_TRAIT
(
Såög8
)

227 
TextOuçut
& 
›î©‹
<<(TextOuçut& 
to
, c⁄° 
Såög16
& 
vÆ
);

232 
ölöe
 
	$com∑ª_ty≥
(c⁄° 
Såög8
& 
lhs
, c⁄° Såög8& 
rhs
)

234  
lhs
.
	`com∑ª
(
rhs
);

235 
	}
}

237 
ölöe
 
	$°ri˘ly_‹dî_ty≥
(c⁄° 
Såög8
& 
lhs
, c⁄° Såög8& 
rhs
)

239  
	`com∑ª_ty≥
(
lhs
, 
rhs
) < 0;

240 
	}
}

242 
ölöe
 c⁄° 
Såög8
 
	gSåög8
::
	$em±y
() {

243  
	`Såög8
();

244 
	}
}

246 
ölöe
 c⁄° * 
	gSåög8
::
	$°rög
() const

248  
mSåög
;

249 
	}
}

251 
ölöe
 
size_t
 
	gSåög8
::
	$Àngth
() const

253  
Sh¨edBuf„r
::
	`sizeFromD©a
(
mSåög
)-1;

254 
	}
}

256 
ölöe
 
size_t
 
	gSåög8
::
	$size
() const

258  
	`Àngth
();

259 
	}
}

261 
ölöe
 
boﬁ
 
	gSåög8
::
	$isEm±y
() const

263  
	`Àngth
() == 0;

264 
	}
}

266 
ölöe
 
size_t
 
	gSåög8
::
	$byãs
() const

268  
Sh¨edBuf„r
::
	`sizeFromD©a
(
mSåög
)-1;

269 
	}
}

271 
ölöe
 c⁄° 
Sh¨edBuf„r
* 
	gSåög8
::
	$sh¨edBuf„r
() const

273  
Sh¨edBuf„r
::
	`buf„rFromD©a
(
mSåög
);

274 
	}
}

276 
ölöe
 
	gSåög8
& Såög8::
›î©‹
=(c⁄° 
Såög8
& 
Ÿhî
)

278 
£tTo
(
Ÿhî
);

279  *
	gthis
;

282 
ölöe
 
	gSåög8
& Såög8::
›î©‹
=(c⁄° * 
Ÿhî
)

284 
£tTo
(
Ÿhî
);

285  *
	gthis
;

288 
ölöe
 
	gSåög8
& Såög8::
›î©‹
+=(c⁄° 
Såög8
& 
Ÿhî
)

290 
≠≥nd
(
Ÿhî
);

291  *
	gthis
;

294 
ölöe
 
Såög8
 
	gSåög8
::
›î©‹
+(c⁄° Såög8& 
Ÿhî
) const

296 
Såög8
 
tmp
(*
this
);

297 
	gtmp
 +
Ÿhî
;

298  
	gtmp
;

301 
ölöe
 
	gSåög8
& Såög8::
›î©‹
+=(c⁄° * 
Ÿhî
)

303 
≠≥nd
(
Ÿhî
);

304  *
	gthis
;

307 
ölöe
 
Såög8
 
	gSåög8
::
›î©‹
+(c⁄° * 
Ÿhî
) const

309 
Såög8
 
tmp
(*
this
);

310 
	gtmp
 +
Ÿhî
;

311  
	gtmp
;

314 
ölöe
 
	gSåög8
::
	$com∑ª
(c⁄° 
Såög8
& 
Ÿhî
) const

316  
	`°rcmp
(
mSåög
, 
Ÿhî
.mString);

317 
	}
}

319 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
<(c⁄° 
Såög8
& 
Ÿhî
) const

321  
°rcmp
(
mSåög
, 
Ÿhî
.mString) < 0;

324 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
<=(c⁄° 
Såög8
& 
Ÿhî
) const

326  
°rcmp
(
mSåög
, 
Ÿhî
.mString) <= 0;

329 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
==(c⁄° 
Såög8
& 
Ÿhî
) const

331  
°rcmp
(
mSåög
, 
Ÿhî
.mString) == 0;

334 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
!=(c⁄° 
Såög8
& 
Ÿhî
) const

336  
°rcmp
(
mSåög
, 
Ÿhî
.mString) != 0;

339 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
>=(c⁄° 
Såög8
& 
Ÿhî
) const

341  
°rcmp
(
mSåög
, 
Ÿhî
.mString) >= 0;

344 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
>(c⁄° 
Såög8
& 
Ÿhî
) const

346  
°rcmp
(
mSåög
, 
Ÿhî
.mString) > 0;

349 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
<(c⁄° * 
Ÿhî
) const

351  
°rcmp
(
mSåög
, 
Ÿhî
) < 0;

354 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
<=(c⁄° * 
Ÿhî
) const

356  
°rcmp
(
mSåög
, 
Ÿhî
) <= 0;

359 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
==(c⁄° * 
Ÿhî
) const

361  
°rcmp
(
mSåög
, 
Ÿhî
) == 0;

364 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
!=(c⁄° * 
Ÿhî
) const

366  
°rcmp
(
mSåög
, 
Ÿhî
) != 0;

369 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
>=(c⁄° * 
Ÿhî
) const

371  
°rcmp
(
mSåög
, 
Ÿhî
) >= 0;

374 
ölöe
 
boﬁ
 
	gSåög8
::
›î©‹
>(c⁄° * 
Ÿhî
) const

376  
°rcmp
(
mSåög
, 
Ÿhî
) > 0;

379 
ölöe
 
	gSåög8
::
›î©‹
 const *() const

381  
mSåög
;

	@src/utils/StringArray.h

20 #i‚de‡
_LIBS_UTILS_STRING_ARRAY_H


21 
	#_LIBS_UTILS_STRING_ARRAY_H


	)

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 
«me•a˚
 
	g™droid
 {

31 ˛as†
	cSåögAºay
 {

32 
	gpublic
:

33 
SåögAºay
();

34 
	gvútuÆ
 ~
SåögAºay
();

39 
boﬁ
 
push_back
(c⁄° * 
°r
);

44 
îa£
(
idx
);

49 
s‹t
((*
com∑ª
)(const *, const *));

54 
cmpAs˚ndögAÕha
(c⁄° * 
p°r1
, c⁄° * 
p°r2
);

59 
ölöe
 
size
(Ëc⁄° {  
	gmCuºít
; }

65 c⁄° * 
gëE¡ry
(
idx
) const {

66  ((
	gidx
Ë>(
mCuºít
)Ë? 
NULL
 : 
mAºay
[
idx
];

73 
£tE¡ry
(
idx
, c⁄° * 
°r
);

75 
	g¥iv©e
:

76 
mMax
;

77 
	gmCuºít
;

78 ** 
	gmAºay
;

	@src/utils/StrongPointer.h

17 #i‚de‡
ANDROID_STRONG_POINTER_H


18 
	#ANDROID_STRONG_POINTER_H


	)

20 
	~<cutûs/©omic.h
>

22 
	~<°döt.h
>

23 
	~<sys/ty≥s.h
>

24 
	~<°dlib.h
>

27 
«me•a˚
 
	g™droid
 {

29 
˛ass
 
	gTextOuçut
;

30 
	gTextOuçut
& 
¥ötSå⁄gPoöãr
(
TextOuçut
& 
to
, c⁄° * 
vÆ
);

32 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gwp
;

36 
	#COMPARE
(
_›_
) \

37 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
•
<
T
>& 
o
) const { \

38  
m_±r
 
_›_
 
o
.m_ptr; \

40 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
T
* 
o
) const { \

41  
m_±r
 
_›_
 
o
; \

43 
ãm∂©e
<
ty≥«me
 
U
> \

44 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
•
<
U
>& 
o
) const { \

45  
m_±r
 
_›_
 
o
.m_ptr; \

47 
ãm∂©e
<
ty≥«me
 
U
> \

48 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
U
* 
o
) const { \

49  
m_±r
 
_›_
 
o
; \

51 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
wp
<
T
>& 
o
) const { \

52  
m_±r
 
_›_
 
o
.m_ptr; \

54 
ãm∂©e
<
ty≥«me
 
U
> \

55 
ölöe
 
boﬁ
 
›î©‹
 
	`_›_
 (c⁄° 
wp
<
U
>& 
o
) const { \

56  
m_±r
 
_›_
 
o
.m_ptr; \

57 }

	)

61 
	gãm∂©e
 <
ty≥«me
 
	gT
>

62 ˛as†
	c•


64 
	gpublic
:

65 
ölöe
 
•
(Ë: 
m_±r
(0) { }

67 
•
(
T
* 
Ÿhî
);

68 
•
(c⁄° sp<
T
>& 
Ÿhî
);

69 
	gãm∂©e
<
ty≥«me
 
	gU
> 
•
(
U
* 
Ÿhî
);

70 
	gãm∂©e
<
ty≥«me
 
	gU
> 
•
(c⁄° sp<
U
>& 
Ÿhî
);

72 ~
•
();

76 
	g•
& 
	g›î©‹
 = (
T
* 
Ÿhî
);

77 
	g•
& 
	g›î©‹
 = (c⁄° 
•
<
T
>& 
Ÿhî
);

79 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	g•
& 
	g›î©‹
 = (c⁄° 
•
<
U
>& 
Ÿhî
);

80 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	g•
& 
	g›î©‹
 = (
U
* 
Ÿhî
);

83 
f‹˚_£t
(
T
* 
Ÿhî
);

87 
˛ór
();

91 
ölöe
 
	gT
& 
	g›î©‹
* (Ëc⁄° {  *
	gm_±r
; }

92 
ölöe
 
T
* 
	g›î©‹
-> (Ëc⁄° {  
	gm_±r
; }

93 
ölöe
 
T
* 
gë
(Ëc⁄° {  
	gm_±r
; }

97 
COMPARE
(==)

98 
COMPARE
(!=)

99 
COMPARE
(>)

100 
COMPARE
(<)

101 
COMPARE
(<=)

102 
COMPARE
(>=)

104 
¥iv©e
:

105 
ãm∂©e
<
ty≥«me
 
Y
> 
‰õnd
 
˛ass
 
•
;

106 
	gãm∂©e
<
ty≥«me
 
	gY
> 
‰õnd
 
˛ass
 
	gwp
;

107 
£t_poöãr
(
T
* 
±r
);

108 
T
* 
	gm_±r
;

111 #unde‡
COMPARE


113 
	gãm∂©e
 <
ty≥«me
 
	gT
>

114 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, c⁄° 
	g•
<
	gT
>& 
	gvÆ
);

119 
	gãm∂©e
<
ty≥«me
 
	gT
>

120 
	g•
<
	gT
>::
	$•
(
T
* 
Ÿhî
)

121 : 
	$m_±r
(
Ÿhî
)

123 i‡(
Ÿhî
ËŸhî->
	`öcSå⁄g
(
this
);

124 
	}
}

126 
	gãm∂©e
<
ty≥«me
 
	gT
>

127 
	g•
<
	gT
>::
•
(c⁄° sp<
T
>& 
Ÿhî
)

128 : 
	$m_±r
(
Ÿhî
.
m_±r
)

130 i‡(
m_±r
Ëm_±r->
	`öcSå⁄g
(
this
);

131 
	}
}

133 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

134 
	g•
<
	gT
>::
	$•
(
U
* 
Ÿhî
Ë: 
	$m_±r
(
Ÿhî
)

136 i‡(
Ÿhî
Ë((
T
*)Ÿhî)->
	`öcSå⁄g
(
this
);

137 
	}
}

139 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

140 
	g•
<
	gT
>::
•
(c⁄° sp<
U
>& 
Ÿhî
)

141 : 
	$m_±r
(
Ÿhî
.
m_±r
)

143 i‡(
m_±r
Ëm_±r->
	`öcSå⁄g
(
this
);

144 
	}
}

146 
	gãm∂©e
<
ty≥«me
 
	gT
>

147 
	g•
<
	gT
>::~
	$•
()

149 i‡(
m_±r
Ëm_±r->
	`decSå⁄g
(
this
);

150 
	}
}

152 
	gãm∂©e
<
ty≥«me
 
	gT
>

153 
	g•
<
	gT
>& sp<T>::
›î©‹
 = (c⁄° 
•
<
T
>& 
Ÿhî
) {

154 
T
* 
ŸhîPå
(
Ÿhî
.
m_±r
);

155 i‡(
	gŸhîPå
ËŸhîPå->
öcSå⁄g
(
this
);

156 i‡(
	gm_±r
Ëm_±r->
decSå⁄g
(
this
);

157 
	gm_±r
 = 
ŸhîPå
;

158  *
	gthis
;

161 
	gãm∂©e
<
ty≥«me
 
	gT
>

162 
	g•
<
	gT
>& sp<T>::
›î©‹
 = (
T
* 
Ÿhî
)

164 i‡(
Ÿhî
ËŸhî->
öcSå⁄g
(
this
);

165 i‡(
	gm_±r
Ëm_±r->
decSå⁄g
(
this
);

166 
	gm_±r
 = 
Ÿhî
;

167  *
	gthis
;

170 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

171 
	g•
<
	gT
>& sp<T>::
›î©‹
 = (c⁄° 
•
<
U
>& 
Ÿhî
)

173 
T
* 
ŸhîPå
(
Ÿhî
.
m_±r
);

174 i‡(
	gŸhîPå
ËŸhîPå->
öcSå⁄g
(
this
);

175 i‡(
	gm_±r
Ëm_±r->
decSå⁄g
(
this
);

176 
	gm_±r
 = 
ŸhîPå
;

177  *
	gthis
;

180 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
>

181 
	g•
<
	gT
>& sp<T>::
›î©‹
 = (
U
* 
Ÿhî
)

183 i‡(
Ÿhî
Ë((
T
*)Ÿhî)->
öcSå⁄g
(
this
);

184 i‡(
	gm_±r
Ëm_±r->
decSå⁄g
(
this
);

185 
	gm_±r
 = 
Ÿhî
;

186  *
	gthis
;

189 
	gãm∂©e
<
ty≥«me
 
	gT
>

190 
	g•
<
	gT
>::
	$f‹˚_£t
(
T
* 
Ÿhî
)

192 
Ÿhî
->
	`f‹˚IncSå⁄g
(
this
);

193 
m_±r
 = 
Ÿhî
;

194 
	}
}

196 
	gãm∂©e
<
ty≥«me
 
	gT
>

197 
	g•
<
	gT
>::
	$˛ór
()

199 i‡(
m_±r
) {

200 
m_±r
->
	`decSå⁄g
(
this
);

201 
m_±r
 = 0;

203 
	}
}

205 
	gãm∂©e
<
ty≥«me
 
	gT
>

206 
	g•
<
	gT
>::
	$£t_poöãr
(
T
* 
±r
) {

207 
m_±r
 = 
±r
;

208 
	}
}

210 
	gãm∂©e
 <
ty≥«me
 
	gT
>

211 
ölöe
 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, c⁄° 
	g•
<
	gT
>& 
	gvÆ
)

213  
¥ötSå⁄gPoöãr
(
to
, 
vÆ
.
gë
());

	@src/utils/SystemClock.h

17 #i‚de‡
ANDROID_UTILS_SYSTEMCLOCK_H


18 
	#ANDROID_UTILS_SYSTEMCLOCK_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

23 
«me•a˚
 
	g™droid
 {

25 
£tCuºítTimeMûlis
(
öt64_t
 
mûlis
);

26 
öt64_t
 
u±imeMûlis
();

27 
öt64_t
 
ñ≠£dRó…ime
();

28 
öt64_t
 
ñ≠£dRó…imeN™o
();

	@src/utils/TextOutput.h

17 #i‚de‡
ANDROID_TEXTOUTPUT_H


18 
	#ANDROID_TEXTOUTPUT_H


	)

20 
	~<utûs/Eº‹s.h
>

22 
	~<°döt.h
>

23 
	~<°rög.h
>

26 
«me•a˚
 
	g™droid
 {

28 ˛as†
	cTextOuçut


30 
	gpublic
:

31 
TextOuçut
();

32 
	gvútuÆ
 ~
TextOuçut
();

34 
vútuÆ
 
°©us_t
 
¥öt
(c⁄° * 
txt
, 
size_t
 
Àn
) = 0;

35 
vútuÆ
 
moveIndít
(
dñè
) = 0;

37 ˛as†
	cBundÀ
 {

38 
	gpublic
:

39 
ölöe
 
BundÀ
(
TextOuçut
& 
to
Ë: 
mTO
—oË{Åo.
pushBundÀ
(); }

40 
	gölöe
 ~
BundÀ
(Ë{ 
	gmTO
.
p›BundÀ
(); }

41 
	g¥iv©e
:

42 
TextOuçut
& 
mTO
;

45 
vútuÆ
 
pushBundÀ
() = 0;

46 
vútuÆ
 
p›BundÀ
() = 0;

52 
TextOuçut
& 
Æog
;

55 
TextOuçut
& 
aout
;

58 
TextOuçut
& 
´º
;

60 
	gTextOuçut
& (*
	tTextOuçutM™ùFunc
)(
	tTextOuçut
&);

62 
	gTextOuçut
& 
ídl
(
TextOuçut
& 
to
);

63 
	gTextOuçut
& 
ödít
(
TextOuçut
& 
to
);

64 
	gTextOuçut
& 
dedít
(
TextOuçut
& 
to
);

66 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, c⁄° * 
	g°r
);

67 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, );

68 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, 
	gboﬁ
);

69 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, );

70 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, );

71 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, );

72 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, );

73 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, );

74 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, );

75 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, );

76 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, );

77 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, 
TextOuçutM™ùFunc
 
	gfunc
);

78 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, const *);

80 ˛as†
	cTy≥Code


82 
	gpublic
:

83 
ölöe
 
Ty≥Code
(
uöt32_t
 
code
);

84 
	gölöe
 ~
Ty≥Code
();

86 
ölöe
 
uöt32_t
 
ty≥Code
() const;

88 
	g¥iv©e
:

89 
uöt32_t
 
mCode
;

92 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, c⁄° 
	gTy≥Code
& 
	gvÆ
);

94 ˛as†
	cHexDump


96 
	gpublic
:

97 
HexDump
(c⁄° *
buf
, 
size_t
 
size
, size_à
byãsPîLöe
=16);

98 
	gölöe
 ~
HexDump
();

100 
ölöe
 
	gHexDump
& 
£tByãsPîLöe
(
size_t
 
byãsPîLöe
);

101 
ölöe
 
	gHexDump
& 
£tSögÀLöeCutoff
(
öt32_t
 
byãs
);

102 
ölöe
 
	gHexDump
& 
£tAlignmít
(
size_t
 
Æignmít
);

103 
ölöe
 
	gHexDump
& 
£tCAºayStyÀ
(
boﬁ
 
íabÀd
);

105 
ölöe
 c⁄° * 
buf„r
() const;

106 
ölöe
 
size_t
 
size
() const;

107 
ölöe
 
size_t
 
byãsPîLöe
() const;

108 
ölöe
 
öt32_t
 
sögÀLöeCutoff
() const;

109 
ölöe
 
size_t
 
Æignmít
() const;

110 
ölöe
 
boﬁ
 
ˇºayStyÀ
() const;

112 
	g¥iv©e
:

113 c⁄° * 
mBuf„r
;

114 
size_t
 
	gmSize
;

115 
size_t
 
	gmByãsPîLöe
;

116 
öt32_t
 
	gmSögÀLöeCutoff
;

117 
size_t
 
	gmAlignmít
;

118 
boﬁ
 
	gmCAºayStyÀ
;

121 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, c⁄° 
	gHexDump
& 
	gvÆ
);

126 
ölöe
 
	gTextOuçut
& 
	$ídl
(
TextOuçut
& 
to
)

128 
to
.
	`¥öt
("\n", 1);

129  
to
;

130 
	}
}

132 
ölöe
 
	gTextOuçut
& 
	$ödít
(
TextOuçut
& 
to
)

134 
to
.
	`moveIndít
(1);

135  
to
;

136 
	}
}

138 
ölöe
 
	gTextOuçut
& 
	$dedít
(
TextOuçut
& 
to
)

140 
to
.
	`moveIndít
(-1);

141  
to
;

142 
	}
}

144 
ölöe
 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, c⁄° * 
	g°r
)

146 
	gto
.
¥öt
(
°r
, 
°æí
(str));

147  
	gto
;

150 
ölöe
 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, 
	gc
)

152 
	gto
.
¥öt
(&
c
, 1);

153  
	gto
;

156 
ölöe
 
	gTextOuçut
& 
	g›î©‹
<<(TextOuçut& 
	gto
, 
TextOuçutM™ùFunc
 
	gfunc
)

158  (*
	gfunc
)(
	gto
);

161 
ölöe
 
	gTy≥Code
::
	$Ty≥Code
(
uöt32_t
 
code
Ë: 
	$mCode
(
code
Ë{ 
	}
}

162 
ölöe
 
Ty≥Code
::~
	$Ty≥Code
(Ë{ 
	}
}

163 
ölöe
 
uöt32_t
 
Ty≥Code
::
	$ty≥Code
(Ëc⁄° {  
mCode
; 
	}
}

165 
ölöe
 
	gHexDump
::~
	$HexDump
(Ë{ 
	}
}

167 
ölöe
 
HexDump
& HexDump::
	$£tByãsPîLöe
(
size_t
 
byãsPîLöe
) {

168 
mByãsPîLöe
 = 
byãsPîLöe
;  *
this
;

169 
	}
}

170 
ölöe
 
	gHexDump
& HexDump::
	$£tSögÀLöeCutoff
(
öt32_t
 
byãs
) {

171 
mSögÀLöeCutoff
 = 
byãs
;  *
this
;

172 
	}
}

173 
ölöe
 
	gHexDump
& HexDump::
	$£tAlignmít
(
size_t
 
Æignmít
) {

174 
mAlignmít
 = 
Æignmít
;  *
this
;

175 
	}
}

176 
ölöe
 
	gHexDump
& HexDump::
	$£tCAºayStyÀ
(
boﬁ
 
íabÀd
) {

177 
mCAºayStyÀ
 = 
íabÀd
;  *
this
;

178 
	}
}

180 
ölöe
 c⁄° * 
	gHexDump
::
	$buf„r
(Ëc⁄° {  
mBuf„r
; 
	}
}

181 
ölöe
 
size_t
 
	gHexDump
::
	$size
(Ëc⁄° {  
mSize
; 
	}
}

182 
ölöe
 
size_t
 
	gHexDump
::
	$byãsPîLöe
(Ëc⁄° {  
mByãsPîLöe
; 
	}
}

183 
ölöe
 
öt32_t
 
	gHexDump
::
	$sögÀLöeCutoff
(Ëc⁄° {  
mSögÀLöeCutoff
; 
	}
}

184 
ölöe
 
size_t
 
	gHexDump
::
	$Æignmít
(Ëc⁄° {  
mAlignmít
; 
	}
}

185 
ölöe
 
boﬁ
 
	gHexDump
::
	$ˇºayStyÀ
(Ëc⁄° {  
mCAºayStyÀ
; 
	}
}

	@src/utils/Thread.h

17 #i‚de‡
_LIBS_UTILS_THREAD_H


18 
	#_LIBS_UTILS_THREAD_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<time.h
>

24 #i‡
deföed
(
HAVE_PTHREADS
)

25 
	~<±hªad.h
>

28 
	~<utûs/C⁄dôi⁄.h
>

29 
	~<utûs/Eº‹s.h
>

30 
	~<utûs/Muãx.h
>

31 
	~<utûs/RefBa£.h
>

32 
	~<utûs/Timîs.h
>

33 
	~<utûs/ThªadDefs.h
>

36 
«me•a˚
 
	g™droid
 {

39 ˛as†
	cThªad
 : 
vútuÆ
 
public
 
RefBa£


41 
public
:

44 
Thªad
(
boﬁ
 
ˇnCÆlJava
 = 
åue
);

45 
	gvútuÆ
 ~
Thªad
();

48 
vútuÆ
 
°©us_t
 
run
–c⁄° * 
«me
 = 0,

49 
öt32_t
 
¥i‹ôy
 = 
PRIORITY_DEFAULT
,

50 
size_t
 
°ack
 = 0);

55 
vútuÆ
 
ªque°Exô
();

58 
vútuÆ
 
°©us_t
 
ªadyToRun
();

64 
°©us_t
 
ªque°ExôAndWaô
();

68 
°©us_t
 
joö
();

70 #ifde‡
HAVE_ANDROID_OS


73 
pid_t
 
gëTid
() const;

76 
	g¥Ÿe˘ed
:

78 
boﬁ
 
exôPídög
() const;

80 
	g¥iv©e
:

86 
vútuÆ
 
boﬁ
 
thªadLo›
() = 0;

88 
	g¥iv©e
:

89 
Thªad
& 
›î©‹
=(const Thread&);

90 
_thªadLo›
(* 
u£r
);

91 c⁄° 
boﬁ
 
	gmC™CÆlJava
;

93 
thªad_id_t
 
	gmThªad
;

94 
muèbÀ
 
Muãx
 
	gmLock
;

95 
C⁄dôi⁄
 
	gmThªadExôedC⁄dôi⁄
;

96 
°©us_t
 
	gmSètus
;

98 vﬁ©ûê
boﬁ
 
	gmExôPídög
;

99 vﬁ©ûê
boﬁ
 
	gmRu¬ög
;

100 
	g•
<
	gThªad
> 
	gmHﬁdSñf
;

101 #ifde‡
HAVE_ANDROID_OS


104 
pid_t
 
	gmTid
;

	@src/utils/ThreadDefs.h

17 #i‚de‡
_LIBS_UTILS_THREAD_DEFS_H


18 
	#_LIBS_UTILS_THREAD_DEFS_H


	)

20 
	~<°döt.h
>

21 
	~<sys/ty≥s.h
>

27 #ifde‡
__˝lu•lus


31 * 
	t™droid_thªad_id_t
;

33 (*
™droid_thªad_func_t
)(*);

50 
ANDROID_PRIORITY_LOWEST
 = 19,

53 
ANDROID_PRIORITY_BACKGROUND
 = 10,

56 
ANDROID_PRIORITY_NORMAL
 = 0,

59 
ANDROID_PRIORITY_FOREGROUND
 = -2,

62 
ANDROID_PRIORITY_DISPLAY
 = -4,

65 
ANDROID_PRIORITY_URGENT_DISPLAY
 = 
HAL_PRIORITY_URGENT_DISPLAY
,

68 
ANDROID_PRIORITY_AUDIO
 = -16,

71 
ANDROID_PRIORITY_URGENT_AUDIO
 = -19,

75 
ANDROID_PRIORITY_HIGHEST
 = -20,

77 
ANDROID_PRIORITY_DEFAULT
 = 
ANDROID_PRIORITY_NORMAL
,

78 
ANDROID_PRIORITY_MORE_FAVORABLE
 = -1,

79 
ANDROID_PRIORITY_LESS_FAVORABLE
 = +1,

82 #ifde‡
__˝lu•lus


88 #ifde‡
__˝lu•lus


89 
«me•a˚
 
™droid
 {

92 
™droid_thªad_id_t
 
	tthªad_id_t
;

93 
™droid_thªad_func_t
 
	tthªad_func_t
;

96 
PRIORITY_LOWEST
 = 
ANDROID_PRIORITY_LOWEST
,

97 
PRIORITY_BACKGROUND
 = 
ANDROID_PRIORITY_BACKGROUND
,

98 
PRIORITY_NORMAL
 = 
ANDROID_PRIORITY_NORMAL
,

99 
PRIORITY_FOREGROUND
 = 
ANDROID_PRIORITY_FOREGROUND
,

100 
PRIORITY_DISPLAY
 = 
ANDROID_PRIORITY_DISPLAY
,

101 
PRIORITY_URGENT_DISPLAY
 = 
ANDROID_PRIORITY_URGENT_DISPLAY
,

102 
PRIORITY_AUDIO
 = 
ANDROID_PRIORITY_AUDIO
,

103 
PRIORITY_URGENT_AUDIO
 = 
ANDROID_PRIORITY_URGENT_AUDIO
,

104 
PRIORITY_HIGHEST
 = 
ANDROID_PRIORITY_HIGHEST
,

105 
PRIORITY_DEFAULT
 = 
ANDROID_PRIORITY_DEFAULT
,

106 
PRIORITY_MORE_FAVORABLE
 = 
ANDROID_PRIORITY_MORE_FAVORABLE
,

107 
PRIORITY_LESS_FAVORABLE
 = 
ANDROID_PRIORITY_LESS_FAVORABLE
,

	@src/utils/Timers.h

20 #i‚de‡
_LIBS_UTILS_TIMERS_H


21 
	#_LIBS_UTILS_TIMERS_H


	)

23 
	~<°döt.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<sys/time.h
>

30 #ifde‡
__˝lu•lus


34 
öt64_t
 
	tn£cs_t
;

36 
ölöe
 
n£cs_t
 
£c⁄ds_to_«no£c⁄ds
“£cs_à
£cs
)

38  
£cs
*1000000000;

41 
ölöe
 
n£cs_t
 
mûli£c⁄ds_to_«no£c⁄ds
“£cs_à
£cs
)

43  
£cs
*1000000;

46 
ölöe
 
n£cs_t
 
mi¸o£c⁄ds_to_«no£c⁄ds
“£cs_à
£cs
)

48  
£cs
*1000;

51 
ölöe
 
n£cs_t
 
«no£c⁄ds_to_£c⁄ds
“£cs_à
£cs
)

53  
£cs
/1000000000;

56 
ölöe
 
n£cs_t
 
«no£c⁄ds_to_mûli£c⁄ds
“£cs_à
£cs
)

58  
£cs
/1000000;

61 
ölöe
 
n£cs_t
 
«no£c⁄ds_to_mi¸o£c⁄ds
“£cs_à
£cs
)

63  
£cs
/1000;

66 
ölöe
 
n£cs_t
 
s2ns
“£cs_à
v
Ë{ 
£c⁄ds_to_«no£c⁄ds
(v);}

67 
ölöe
 
n£cs_t
 
ms2ns
“£cs_à
v
Ë{ 
mûli£c⁄ds_to_«no£c⁄ds
(v);}

68 
ölöe
 
n£cs_t
 
us2ns
“£cs_à
v
Ë{ 
mi¸o£c⁄ds_to_«no£c⁄ds
(v);}

69 
ölöe
 
n£cs_t
 
ns2s
“£cs_à
v
Ë{ 
«no£c⁄ds_to_£c⁄ds
(v);}

70 
ölöe
 
n£cs_t
 
ns2ms
“£cs_à
v
Ë{ 
«no£c⁄ds_to_mûli£c⁄ds
(v);}

71 
ölöe
 
n£cs_t
 
ns2us
“£cs_à
v
Ë{ 
«no£c⁄ds_to_mi¸o£c⁄ds
(v);}

73 
ölöe
 
n£cs_t
 
£c⁄ds
“£cs_à
v
Ë{  
s2ns
(v); }

74 
ölöe
 
n£cs_t
 
mûli£c⁄ds
“£cs_à
v
Ë{  
ms2ns
(v); }

75 
ölöe
 
n£cs_t
 
mi¸o£c⁄ds
“£cs_à
v
Ë{  
us2ns
(v); }

78 
SYSTEM_TIME_REALTIME
 = 0,

79 
SYSTEM_TIME_MONOTONIC
 = 1,

80 
SYSTEM_TIME_PROCESS
 = 2,

81 
SYSTEM_TIME_THREAD
 = 3,

82 
SYSTEM_TIME_BOOTTIME
 = 4

86 #ifde‡
__˝lu•lus


87 
n£cs_t
 
sy°emTime
(
˛ock
 = 
SYSTEM_TIME_MONOTONIC
);

89 
n£cs_t
 
sy°emTime
(
˛ock
);

100 
toMûli£c⁄dTimeoutDñay
(
n£cs_t
 
ª„ªn˚Time
,Ç£cs_à
timeoutTime
);

102 #ifde‡
__˝lu•lus


109 #ifde‡
__˝lu•lus


111 
«me•a˚
 
™droid
 {

117 ˛as†
	cDuøti⁄Timî
 {

118 
public
:

119 
Duøti⁄Timî
() {}

120 ~
Duøti⁄Timî
() {}

123 
°¨t
();

125 
°›
();

127 
duøti⁄U£cs
() const;

131 
subåa˘TimevÆs
(c⁄° 
timevÆ
* 
±v1
,

132 c⁄° 
timevÆ
* 
±v2
);

135 
addToTimevÆ
(
timevÆ
* 
±v
, 
u£c
);

137 
¥iv©e
:

138 
timevÆ
 
mSèπWhí
;

139 
timevÆ
 
mSt›Whí
;

	@src/utils/Tokenizer.h

17 #i‚de‡
_UTILS_TOKENIZER_H


18 
	#_UTILS_TOKENIZER_H


	)

20 
	~<as£π.h
>

21 
	~<utûs/Eº‹s.h
>

22 
	~<utûs/FûeM≠.h
>

23 
	~<utûs/Såög8.h
>

25 
«me•a˚
 
	g™droid
 {

30 ˛as†
	cTokíizî
 {

31 
Tokíizî
(c⁄° 
Såög8
& 
fûíame
, 
FûeM≠
* 
fûeM≠
, * 
buf„r
,

32 
boﬁ
 
ownBuf„r
, 
size_t
 
Àngth
);

34 
	gpublic
:

35 ~
Tokíizî
();

43 
°©us_t
 
›í
(c⁄° 
Såög8
& 
fûíame
, 
Tokíizî
** 
outTokíizî
);

51 
°©us_t
 
‰omC⁄ã¡s
(c⁄° 
Såög8
& 
fûíame
,

52 c⁄° * 
c⁄ã¡s
, 
Tokíizî
** 
outTokíizî
);

57 
ölöe
 
boﬁ
 
isEof
(Ëc⁄° {  
	gmCuºít
 =
gëEnd
(); }

62 
ölöe
 
boﬁ
 
isEﬁ
(Ëc⁄° {  
isEof
(Ë|| *
	gmCuºít
 == '\n'; }

67 
ölöe
 
Såög8
 
gëFûíame
(Ëc⁄° {  
	gmFûíame
; }

72 
ölöe
 
öt32_t
 
gëLöeNumbî
(Ëc⁄° {  
	gmLöeNumbî
; }

78 
Såög8
 
gëLoˇti⁄
() const;

84 
ölöe
 
≥ekCh¨
(Ëc⁄° {  
isEof
(Ë? '\0' : *
mCuºít
; }

89 
Såög8
 
≥ekRemaödîOfLöe
() const;

95 
ölöe
 
√xtCh¨
(Ë{  
isEof
(Ë? '\0' : *(
mCuºít
++); }

104 
Såög8
 
√xtTokí
(c⁄° * 
dñimôîs
);

110 
√xtLöe
();

116 
skùDñimôîs
(c⁄° * 
dñimôîs
);

118 
	g¥iv©e
:

119 
Tokíizî
(c⁄° Tokíizî& 
Ÿhî
);

121 
Såög8
 
	gmFûíame
;

122 
FûeM≠
* 
	gmFûeM≠
;

123 * 
	gmBuf„r
;

124 
boﬁ
 
	gmOwnBuf„r
;

125 
size_t
 
	gmLígth
;

127 c⁄° * 
	gmCuºít
;

128 
öt32_t
 
	gmLöeNumbî
;

130 
ölöe
 c⁄° * 
gëEnd
(Ëc⁄° {  
	gmBuf„r
 + 
	gmLígth
; }

	@src/utils/Trace.h

17 #i‚de‡
ANDROID_TRACE_H


18 
	#ANDROID_TRACE_H


	)

20 
	~<f˙é.h
>

21 
	~<°döt.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

24 
	~<sys/°©.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<uni°d.h
>

28 
	~<cutûs/compûî.h
>

29 
	~<utûs/thªads.h
>

43 
	#ATRACE_TAG_NEVER
 0

44 
	#ATRACE_TAG_ALWAYS
 (1<<0)

45 
	#ATRACE_TAG_GRAPHICS
 (1<<1)

	)

46 
	#ATRACE_TAG_INPUT
 (1<<2)

	)

47 
	#ATRACE_TAG_VIEW
 (1<<3)

	)

48 
	#ATRACE_TAG_WEBVIEW
 (1<<4)

	)

49 
	#ATRACE_TAG_WINDOW_MANAGER
 (1<<5)

	)

50 
	#ATRACE_TAG_ACTIVITY_MANAGER
 (1<<6)

	)

51 
	#ATRACE_TAG_SYNC_MANAGER
 (1<<7)

	)

52 
	#ATRACE_TAG_AUDIO
 (1<<8)

	)

53 
	#ATRACE_TAG_VIDEO
 (1<<9)

	)

54 
	#ATRACE_TAG_CAMERA
 (1<<10)

	)

55 
	#ATRACE_TAG_LAST
 
ATRACE_TAG_CAMERA


	)

57 
	#ATRACE_TAG_NOT_READY
 (1LL<<63)

58 

	)

59 
	#ATRACE_TAG_VALID_MASK
 ((
ATRACE_TAG_LAST
 - 1Ë| ATRACE_TAG_LAST)

	)

61 #i‚de‡
ATRACE_TAG


62 
	#ATRACE_TAG
 
ATRACE_TAG_NEVER


	)

63 #ñi‡
ATRACE_TAG
 > 
ATRACE_TAG_LAST


64 #îr‹ 
ATRACE_TAG
 
mu°
 
be
 
deföed
 
to
 bê
⁄e
 
of
 
the
 
ègs
 deföed 
ö
 
utûs
/
Tø˚
.
h


70 
	#ATRACE_CALL
(Ë
™droid
::
Sc›edTø˚
 
	`___åa˚r
(
ATRACE_TAG
, 
__FUNCTION__
)

	)

75 
	#ATRACE_NAME
(
«me
Ë
™droid
::
Sc›edTø˚
 
	`___åa˚r
(
ATRACE_TAG
,Çame)

	)

79 
	#ATRACE_INT
(
«me
, 
vÆue
Ë
™droid
::
Tø˚r
::
	`åa˚Cou¡î
(
ATRACE_TAG
,Çame, vÆue)

	)

83 
	#ATRACE_ENABLED
(Ë
™droid
::
Tø˚r
::
	`isTagE«bÀd
(
ATRACE_TAG
)

	)

85 
«me•a˚
 
	g™droid
 {

87 ˛as†
	cTø˚r
 {

89 
	gpublic
:

91 
uöt64_t
 
gëE«bÀdTags
() {

92 
öôIfNìded
();

93  
	gsE«bÀdTags
;

96 
ölöe
 
boﬁ
 
isTagE«bÀd
(
uöt64_t
 
èg
) {

97 
öôIfNìded
();

98  
	gsE«bÀdTags
 & 
	gèg
;

101 
ölöe
 
åa˚Cou¡î
(
uöt64_t
 
èg
, c⁄° * 
«me
,

102 
öt32_t
 
vÆue
) {

103 i‡(
CC_UNLIKELY
(
isTagE«bÀd
(
èg
))) {

104 
	gbuf
[1024];

105 
¢¥ötf
(
buf
, 1024, "C|%d|%s|%d", 
gëpid
(), 
«me
, 
vÆue
);

106 
wrôe
(
sTø˚FD
, 
buf
, 
°æí
(buf));

110 
ölöe
 
åa˚Begö
(
uöt64_t
 
èg
, c⁄° * 
«me
) {

111 i‡(
CC_UNLIKELY
(
isTagE«bÀd
(
èg
))) {

112 
	gbuf
[1024];

113 
size_t
 
	gÀn
 = 
¢¥ötf
(
buf
, 1024, "B|%d|%s", 
gëpid
(), 
«me
);

114 
wrôe
(
sTø˚FD
, 
buf
, 
Àn
);

118 
ölöe
 
åa˚End
(
uöt64_t
 
èg
) {

119 i‡(
CC_UNLIKELY
(
isTagE«bÀd
(
èg
))) {

120 
	gbuf
 = 'E';

121 
wrôe
(
sTø˚FD
, &
buf
, 1);

125 
	g¥iv©e
:

127 
ölöe
 
öôIfNìded
() {

128 i‡(!
™droid_©omic_acquúe_lﬂd
(&
sIsRódy
)) {

129 
öô
();

133 
ch™geCÆlback
();

138 
öô
();

141 
lﬂdSy°emPr›îty
();

151 vﬁ©ûê
öt32_t
 
	gsIsRódy
;

159 
	gsTø˚FD
;

170 
uöt64_t
 
	gsE«bÀdTags
;

173 
Muãx
 
	gsMuãx
;

176 ˛as†
	cSc›edTø˚
 {

178 
	gpublic
:

179 
ölöe
 
Sc›edTø˚
(
uöt64_t
 
èg
, c⁄° * 
«me
) :

180 
mTag
(
èg
) {

181 
Tø˚r
::
åa˚Begö
(
mTag
, 
«me
);

184 
	gölöe
 ~
Sc›edTø˚
() {

185 
	gTø˚r
::
åa˚End
(
mTag
);

188 
	g¥iv©e
:

190 
uöt64_t
 
mTag
;

	@src/utils/TypeHelpers.h

17 #i‚de‡
ANDROID_TYPE_HELPERS_H


18 
	#ANDROID_TYPE_HELPERS_H


	)

20 
	~<√w
>

21 
	~<°döt.h
>

22 
	~<°rög.h
>

23 
	~<sys/ty≥s.h
>

27 
«me•a˚
 
	g™droid
 {

33 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	såaô_åivül_˘‹
 {Énum { 
	gvÆue
 = 
Ál£
 }; };

34 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	såaô_åivül_dt‹
 {Énum { 
	gvÆue
 = 
Ál£
 }; };

35 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	såaô_åivül_c›y
 {Énum { 
	gvÆue
 = 
Ál£
 }; };

36 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	såaô_åivül_move
 {Énum { 
	gvÆue
 = 
Ál£
 }; };

37 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	såaô_poöãr
 {Énum { 
	gvÆue
 = 
Ál£
 }; };

38 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gåaô_poöãr
<T*> {Énum { 
	gvÆue
 = 
åue
 }; };

40 
	gãm∂©e
 <
ty≥«me
 
	gTYPE
>

41 
	såaôs
 {

44 
	gis_poöãr
 = 
åaô_poöãr
<
TYPE
>::
vÆue
,

46 
	ghas_åivül_˘‹
 = 
is_poöãr
 || 
åaô_åivül_˘‹
<
TYPE
>::
vÆue
,

48 
	ghas_åivül_dt‹
 = 
is_poöãr
 || 
åaô_åivül_dt‹
<
TYPE
>::
vÆue
,

50 
	ghas_åivül_c›y
 = 
is_poöãr
 || 
åaô_åivül_c›y
<
TYPE
>::
vÆue
,

52 
	ghas_åivül_move
 = 
is_poöãr
 || 
åaô_åivül_move
<
TYPE
>::
vÆue


56 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

57 
	saggªg©e_åaôs
 {

59 
	gis_poöãr
 = 
Ál£
,

60 
	ghas_åivül_˘‹
 =

61 
åaôs
<
T
>::
has_åivül_˘‹
 &&Åøôs<
U
>::has_trivial_ctor,

62 
	ghas_åivül_dt‹
 =

63 
åaôs
<
T
>::
has_åivül_dt‹
 &&Åøôs<
U
>::has_trivial_dtor,

64 
	ghas_åivül_c›y
 =

65 
åaôs
<
T
>::
has_åivül_c›y
 &&Åøôs<
U
>::has_trivial_copy,

66 
	ghas_åivül_move
 =

67 
åaôs
<
T
>::
has_åivül_move
 &&Åøôs<
U
>::has_trivial_move

71 
	#ANDROID_TRIVIAL_CTOR_TRAIT
–
T
 ) \

72 
ãm∂©e
<> 
åaô_åivül_˘‹
< 
T
 > {Énum { 
vÆue
 = 
åue
 }; };

	)

74 
	#ANDROID_TRIVIAL_DTOR_TRAIT
–
T
 ) \

75 
ãm∂©e
<> 
åaô_åivül_dt‹
< 
T
 > {Énum { 
vÆue
 = 
åue
 }; };

	)

77 
	#ANDROID_TRIVIAL_COPY_TRAIT
–
T
 ) \

78 
ãm∂©e
<> 
åaô_åivül_c›y
< 
T
 > {Énum { 
vÆue
 = 
åue
 }; };

	)

80 
	#ANDROID_TRIVIAL_MOVE_TRAIT
–
T
 ) \

81 
ãm∂©e
<> 
åaô_åivül_move
< 
T
 > {Énum { 
vÆue
 = 
åue
 }; };

	)

83 
	#ANDROID_BASIC_TYPES_TRAITS
–
T
 ) \

84 
	`ANDROID_TRIVIAL_CTOR_TRAIT
–
T
 ) \

85 
	`ANDROID_TRIVIAL_DTOR_TRAIT
–
T
 ) \

86 
	`ANDROID_TRIVIAL_COPY_TRAIT
–
T
 ) \

87 
	`ANDROID_TRIVIAL_MOVE_TRAIT
–
T
 )

	)

95 
ANDROID_BASIC_TYPES_TRAITS
( )

96 
ANDROID_BASIC_TYPES_TRAITS
–
boﬁ
 )

97 
ANDROID_BASIC_TYPES_TRAITS
( )

98 
ANDROID_BASIC_TYPES_TRAITS
( )

99 
ANDROID_BASIC_TYPES_TRAITS
( )

100 
ANDROID_BASIC_TYPES_TRAITS
( )

101 
ANDROID_BASIC_TYPES_TRAITS
( )

102 
ANDROID_BASIC_TYPES_TRAITS
( )

103 
ANDROID_BASIC_TYPES_TRAITS
( )

104 
ANDROID_BASIC_TYPES_TRAITS
( )

105 
ANDROID_BASIC_TYPES_TRAITS
( )

106 
ANDROID_BASIC_TYPES_TRAITS
( )

107 
ANDROID_BASIC_TYPES_TRAITS
( )

108 
ANDROID_BASIC_TYPES_TRAITS
( )

117 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


118 
°ri˘ly_‹dî_ty≥
(c⁄° 
TYPE
& 
lhs
, c⁄° TYPE& 
rhs
) {

119  (
	glhs
 < 
	grhs
) ? 1 : 0;

122 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


123 
com∑ª_ty≥
(c⁄° 
TYPE
& 
lhs
, c⁄° TYPE& 
rhs
) {

124  
°ri˘ly_‹dî_ty≥
(
rhs
, 
lhs
) - strictly_order_type(lhs,Ñhs);

131 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


132 
c⁄°ru˘_ty≥
(
TYPE
* 
p
, 
size_t
 
n
) {

133 i‡(!
	gåaôs
<
	gTYPE
>::
has_åivül_˘‹
) {

134 
n
--) {

135 
√w
(
p
++Ë
TYPE
;

140 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


141 
de°roy_ty≥
(
TYPE
* 
p
, 
size_t
 
n
) {

142 i‡(!
	gåaôs
<
	gTYPE
>::
has_åivül_dt‹
) {

143 
n
--) {

144 
p
->~
TYPE
();

145 
	gp
++;

150 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


151 
c›y_ty≥
(
TYPE
* 
d
, c⁄° TYPE* 
s
, 
size_t
 
n
) {

152 i‡(!
	gåaôs
<
	gTYPE
>::
has_åivül_c›y
) {

153 
n
--) {

154 
√w
(
d
Ë
TYPE
(*
s
);

155 
	gd
++, 
	gs
++;

158 
mem˝y
(
d
,
s
,
n
*(
TYPE
));

162 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


163 
•œt_ty≥
(
TYPE
* 
whîe
, c⁄° TYPE* 
wh©
, 
size_t
 
n
) {

164 i‡(!
	gåaôs
<
	gTYPE
>::
has_åivül_c›y
) {

165 
n
--) {

166 
√w
(
whîe
Ë
TYPE
(*
wh©
);

167 
	gwhîe
++;

170 
	gn
--) {

171 *
	gwhîe
++ = *
wh©
;

176 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


177 
move_f‹w¨d_ty≥
(
TYPE
* 
d
, c⁄° TYPE* 
s
, 
size_t
 
n
 = 1) {

178 i‡((
åaôs
<
TYPE
>::
has_åivül_dt‹
 &&Åøôs<TYPE>::
has_åivül_c›y
)

179 || 
åaôs
<
TYPE
>::
has_åivül_move
)

181 
memmove
(
d
,
s
,
n
*(
TYPE
));

183 
	gd
 +
n
;

184 
	gs
 +
n
;

185 
	gn
--) {

186 --
	gd
, --
	gs
;

187 i‡(!
	gåaôs
<
	gTYPE
>::
has_åivül_c›y
) {

188 
√w
(
d
Ë
TYPE
(*
s
);

190 *
	gd
 = *
s
;

192 i‡(!
	gåaôs
<
	gTYPE
>::
has_åivül_dt‹
) {

193 
s
->~
TYPE
();

199 
	gãm∂©e
<
ty≥«me
 
	gTYPE
> 
ölöe


200 
move_backw¨d_ty≥
(
TYPE
* 
d
, c⁄° TYPE* 
s
, 
size_t
 
n
 = 1) {

201 i‡((
åaôs
<
TYPE
>::
has_åivül_dt‹
 &&Åøôs<TYPE>::
has_åivül_c›y
)

202 || 
åaôs
<
TYPE
>::
has_åivül_move
)

204 
memmove
(
d
,
s
,
n
*(
TYPE
));

206 
	gn
--) {

207 i‡(!
	gåaôs
<
	gTYPE
>::
has_åivül_c›y
) {

208 
√w
(
d
Ë
TYPE
(*
s
);

210 *
	gd
 = *
s
;

212 i‡(!
	gåaôs
<
	gTYPE
>::
has_åivül_dt‹
) {

213 
s
->~
TYPE
();

215 
	gd
++, 
	gs
++;

226 
	gãm∂©e
 <
ty≥«me
 
	gKEY
,Åy≥«mê
	gVALUE
>

227 
	skey_vÆue_∑ú_t
 {

228 
KEY
 
	tkey_t
;

229 
VALUE
 
	tvÆue_t
;

231 
KEY
 
	gkey
;

232 
VALUE
 
	gvÆue
;

233 
key_vÆue_∑ú_t
() { }

234 
key_vÆue_∑ú_t
(c⁄° key_vÆue_∑ú_t& 
o
Ë: 
key
(o.key), 
vÆue
(o.value) { }

235 
key_vÆue_∑ú_t
(c⁄° 
KEY
& 
k
, c⁄° 
VALUE
& 
v
Ë: 
key
(k), 
vÆue
(v) { }

236 
key_vÆue_∑ú_t
(c⁄° 
KEY
& 
k
Ë: 
key
(k) { }

237 
ölöe
 
boﬁ
 
›î©‹
 < (c⁄° 
key_vÆue_∑ú_t
& 
o
) const {

238  
°ri˘ly_‹dî_ty≥
(
key
, 
o
.key);

240 
ölöe
 c⁄° 
	gKEY
& 
gëKey
() const {

241  
	gkey
;

243 
ölöe
 c⁄° 
	gVALUE
& 
gëVÆue
() const {

244  
	gvÆue
;

248 
	gãm∂©e
 <
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

249 
	gåaô_åivül_˘‹
< 
	gkey_vÆue_∑ú_t
<
	gK
, 
	gV
> >

250 {Énum { 
	gvÆue
 = 
aggªg©e_åaôs
<
K
,
	gV
>::
has_åivül_˘‹
 }; };

251 
	gãm∂©e
 <
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

252 
	gåaô_åivül_dt‹
< 
	gkey_vÆue_∑ú_t
<
	gK
, 
	gV
> >

253 {Énum { 
	gvÆue
 = 
aggªg©e_åaôs
<
K
,
	gV
>::
has_åivül_dt‹
 }; };

254 
	gãm∂©e
 <
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

255 
	gåaô_åivül_c›y
< 
	gkey_vÆue_∑ú_t
<
	gK
, 
	gV
> >

256 {Énum { 
	gvÆue
 = 
aggªg©e_åaôs
<
K
,
	gV
>::
has_åivül_c›y
 }; };

257 
	gãm∂©e
 <
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

258 
	gåaô_åivül_move
< 
	gkey_vÆue_∑ú_t
<
	gK
, 
	gV
> >

259 {Énum { 
	gvÆue
 = 
aggªg©e_åaôs
<
K
,
	gV
>::
has_åivül_move
 }; };

266 
uöt32_t
 
	thash_t
;

268 
	gãm∂©e
 <
ty≥«me
 
	gTKey
>

269 
hash_t
 
hash_ty≥
(c⁄° 
TKey
& 
key
);

273 
	#ANDROID_INT32_HASH
(
T
) \

274 
ãm∂©e
 <> 
ölöe
 
hash_t
 
	`hash_ty≥
(c⁄° 
T
& 
vÆue
Ë{  
	`hash_t
(vÆue); }

	)

275 
	#ANDROID_INT64_HASH
(
T
) \

276 
ãm∂©e
 <> 
ölöe
 
hash_t
 
	`hash_ty≥
(c⁄° 
T
& 
vÆue
) { \

277  
	`hash_t
((
vÆue
 >> 32Ë^ vÆue); }

	)

278 
	#ANDROID_REINTERPRET_HASH
(
T
, 
R
) \

279 
ãm∂©e
 <> 
ölöe
 
hash_t
 
	`hash_ty≥
(c⁄° 
T
& 
vÆue
) { \

280  
	`hash_ty≥
(*
ªöãΩªt_ˇ°
<c⁄° 
R
*>(&
vÆue
)); }

	)

282 
ANDROID_INT32_HASH
(
boﬁ
)

283 
ANDROID_INT32_HASH
(
öt8_t
)

284 
ANDROID_INT32_HASH
(
uöt8_t
)

285 
ANDROID_INT32_HASH
(
öt16_t
)

286 
ANDROID_INT32_HASH
(
uöt16_t
)

287 
ANDROID_INT32_HASH
(
öt32_t
)

288 
ANDROID_INT32_HASH
(
uöt32_t
)

289 
ANDROID_INT64_HASH
(
öt64_t
)

290 
ANDROID_INT64_HASH
(
uöt64_t
)

291 
ANDROID_REINTERPRET_HASH
(, 
uöt32_t
)

292 
ANDROID_REINTERPRET_HASH
(, 
uöt64_t
)

294 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
hash_t
 
hash_ty≥
(c⁄° 
T
*& 
vÆue
) {

295  
hash_ty≥
(
uöçå_t
(
vÆue
));

	@src/utils/Unicode.cpp

17 
	~<utûs/Unicode.h
>

19 
	~<°ddef.h
>

21 #ifde‡
HAVE_WINSOCK


22 #unde‡
nhtﬁ


23 #unde‡
ht⁄l


24 #unde‡
nhtos


25 #unde‡
ht⁄s


27 #ifde‡
HAVE_LITTLE_ENDIAN


28 
	#¡ohl
(
x
Ë–((xË<< 24Ë| (((xË>> 24Ë& 255Ë| (((xË<< 8Ë& 0xff0000Ë| (((xË>> 8Ë& 0xff00Ë)

	)

29 
	#ht⁄l
(
x
Ë
	`¡ohl
(x)

	)

30 
	#¡ohs
(
x
Ë–(((xË<< 8Ë& 0xff00Ë| (((xË>> 8Ë& 255Ë)

	)

31 
	#ht⁄s
(
x
Ë
	`¡ohs
(x)

	)

33 
	#¡ohl
(
x
Ë(x)

	)

34 
	#ht⁄l
(
x
Ë(x)

	)

35 
	#¡ohs
(
x
Ë(x)

	)

36 
	#ht⁄s
(
x
Ë(x)

	)

39 
	~<√töë/ö.h
>

44 c⁄° 
ch¨32_t
 
kByãMask
 = 0x000000BF;

45 c⁄° 
ch¨32_t
 
kByãM¨k
 = 0x00000080;

49 c⁄° 
ch¨32_t
 
kUnicodeSuºog©eHighSèπ
 = 0x0000D800;

50 c⁄° 
ch¨32_t
 
kUnicodeSuºog©eHighEnd
 = 0x0000DBFF;

51 c⁄° 
ch¨32_t
 
kUnicodeSuºog©eLowSèπ
 = 0x0000DC00;

52 c⁄° 
ch¨32_t
 
kUnicodeSuºog©eLowEnd
 = 0x0000DFFF;

53 c⁄° 
ch¨32_t
 
kUnicodeSuºog©eSèπ
 = 
kUnicodeSuºog©eHighSèπ
;

54 c⁄° 
ch¨32_t
 
kUnicodeSuºog©eEnd
 = 
kUnicodeSuºog©eLowEnd
;

55 c⁄° 
ch¨32_t
 
kUnicodeMaxCodïoöt
 = 0x0010FFFF;

67 c⁄° 
ch¨32_t
 
kFú°ByãM¨k
[] = {

79 
ölöe
 
size_t
 
utf32_codïoöt_utf8_Àngth
(
ch¨32_t
 
§cCh¨
)

82 i‡(
§cCh¨
 < 0x00000080) {

84 } i‡(
§cCh¨
 < 0x00000800) {

86 } i‡(
§cCh¨
 < 0x00010000) {

87 i‡((
§cCh¨
 < 
kUnicodeSuºog©eSèπ
Ë|| (§cCh¨ > 
kUnicodeSuºog©eEnd
)) {

95 i‡(
§cCh¨
 <
kUnicodeMaxCodïoöt
) {

105 
ölöe
 
utf32_codïoöt_to_utf8
(
uöt8_t
* 
d°P
, 
ch¨32_t
 
§cCh¨
, 
size_t
 
byãs
)

107 
d°P
 +
byãs
;

108 
byãs
)

110 4: *--
d°P
 = (
uöt8_t
)((
§cCh¨
 | 
kByãM¨k
Ë& 
kByãMask
); srcChar >>= 6;

111 3: *--
d°P
 = (
uöt8_t
)((
§cCh¨
 | 
kByãM¨k
Ë& 
kByãMask
); srcChar >>= 6;

112 2: *--
d°P
 = (
uöt8_t
)((
§cCh¨
 | 
kByãM¨k
Ë& 
kByãMask
); srcChar >>= 6;

113 1: *--
d°P
 = (
uöt8_t
)(
§cCh¨
 | 
kFú°ByãM¨k
[
byãs
]);

117 
size_t
 
°æí32
(c⁄° 
ch¨32_t
 *
s
)

119 c⁄° 
ch¨32_t
 *
ss
 = 
s
;

120  *
ss
 )

121 
ss
++;

122  
ss
-
s
;

125 
size_t
 
°∫Àn32
(c⁄° 
ch¨32_t
 *
s
, size_à
maxÀn
)

127 c⁄° 
ch¨32_t
 *
ss
 = 
s
;

128 (
maxÀn
 > 0Ë&& *
ss
) {

129 
ss
++;

130 
maxÀn
--;

132  
ss
-
s
;

135 
ölöe
 
öt32_t
 
utf32_©_öã∫Æ
(c⁄° * 
cur
, 
size_t
 *
num_ªad
)

137 c⁄° 
fú°_ch¨
 = *
cur
;

138 i‡((
fú°_ch¨
 & 0x80) == 0) {

139 *
num_ªad
 = 1;

140  *
cur
;

142 
cur
++;

143 
ch¨32_t
 
mask
, 
to_ign‹e_mask
;

144 
size_t
 
num_to_ªad
 = 0;

145 
ch¨32_t
 
utf32
 = 
fú°_ch¨
;

146 
num_to_ªad
 = 1, 
mask
 = 0x40, 
to_ign‹e_mask
 = 0xFFFFFF80;

147 (
fú°_ch¨
 & 
mask
);

148 
num_to_ªad
++, 
to_ign‹e_mask
 |
mask
, mask >>= 1) {

150 
utf32
 = (utf32 << 6Ë+ (*
cur
++ & 0x3F);

152 
to_ign‹e_mask
 |
mask
;

153 
utf32
 &~(
to_ign‹e_mask
 << (6 * (
num_to_ªad
 - 1)));

155 *
num_ªad
 = 
num_to_ªad
;

156  
°©ic_ˇ°
<
öt32_t
>(
utf32
);

159 
öt32_t
 
utf32_‰om_utf8_©
(c⁄° *
§c
, 
size_t
 
§c_Àn
, size_à
ödex
, size_à*
√xt_ödex
)

161 i‡(
ödex
 >
§c_Àn
) {

164 
size_t
 
dummy_ödex
;

165 i‡(
√xt_ödex
 =
NULL
) {

166 
√xt_ödex
 = &
dummy_ödex
;

168 
size_t
 
num_ªad
;

169 
öt32_t
 
ªt
 = 
utf32_©_öã∫Æ
(
§c
 + 
ödex
, &
num_ªad
);

170 i‡(
ªt
 >= 0) {

171 *
√xt_ödex
 = 
ödex
 + 
num_ªad
;

174  
ªt
;

177 
ssize_t
 
utf32_to_utf8_Àngth
(c⁄° 
ch¨32_t
 *
§c
, 
size_t
 
§c_Àn
)

179 i‡(
§c
 =
NULL
 || 
§c_Àn
 == 0) {

183 
size_t
 
ªt
 = 0;

184 c⁄° 
ch¨32_t
 *
íd
 = 
§c
 + 
§c_Àn
;

185 
§c
 < 
íd
) {

186 
ªt
 +
utf32_codïoöt_utf8_Àngth
(*
§c
++);

188  
ªt
;

191 
utf32_to_utf8
(c⁄° 
ch¨32_t
* 
§c
, 
size_t
 
§c_Àn
, * 
d°
)

193 i‡(
§c
 =
NULL
 || 
§c_Àn
 =0 || 
d°
 == NULL) {

197 c⁄° 
ch¨32_t
 *
cur_utf32
 = 
§c
;

198 c⁄° 
ch¨32_t
 *
íd_utf32
 = 
§c
 + 
§c_Àn
;

199 *
cur
 = 
d°
;

200 
cur_utf32
 < 
íd_utf32
) {

201 
size_t
 
Àn
 = 
utf32_codïoöt_utf8_Àngth
(*
cur_utf32
);

202 
utf32_codïoöt_to_utf8
((
uöt8_t
 *)
cur
, *
cur_utf32
++, 
Àn
);

203 
cur
 +
Àn
;

205 *
cur
 = '\0';

212 
°rcmp16
(c⁄° 
ch¨16_t
 *
s1
, c⁄° ch¨16_à*
s2
)

214 
ch¨16_t
 
ch
;

215 
d
 = 0;

218 
d
 = ()(
ch
 = *
s1
++Ë- ()*
s2
++;

219 i‡–
d
 || !
ch
 )

223  
d
;

226 
°∫cmp16
(c⁄° 
ch¨16_t
 *
s1
, c⁄° ch¨16_à*
s2
, 
size_t
 
n
)

228 
ch¨16_t
 
ch
;

229 
d
 = 0;

231  
n
-- ) {

232 
d
 = ()(
ch
 = *
s1
++Ë- ()*
s2
++;

233 i‡–
d
 || !
ch
 )

237  
d
;

240 
ch¨16_t
 *
°r˝y16
(ch¨16_à*
d°
, c⁄° ch¨16_à*
§c
)

242 
ch¨16_t
 *
q
 = 
d°
;

243 c⁄° 
ch¨16_t
 *
p
 = 
§c
;

244 
ch¨16_t
 
ch
;

247 *
q
++ = 
ch
 = *
p
++;

248 }  
ch
 );

250  
d°
;

253 
size_t
 
°æí16
(c⁄° 
ch¨16_t
 *
s
)

255 c⁄° 
ch¨16_t
 *
ss
 = 
s
;

256  *
ss
 )

257 
ss
++;

258  
ss
-
s
;

262 
ch¨16_t
 *
°∫˝y16
(ch¨16_à*
d°
, c⁄° ch¨16_à*
§c
, 
size_t
 
n
)

264 
ch¨16_t
 *
q
 = 
d°
;

265 c⁄° 
ch¨16_t
 *
p
 = 
§c
;

266 
ch
;

268 
n
) {

269 
n
--;

270 *
q
++ = 
ch
 = *
p
++;

271 i‡–!
ch
 )

275 *
q
 = 0;

277  
d°
;

280 
size_t
 
°∫Àn16
(c⁄° 
ch¨16_t
 *
s
, size_à
maxÀn
)

282 c⁄° 
ch¨16_t
 *
ss
 = 
s
;

286 (
maxÀn
 > 0Ë&& *
ss
) {

287 
ss
++;

288 
maxÀn
--;

290  
ss
-
s
;

293 
°rzcmp16
(c⁄° 
ch¨16_t
 *
s1
, 
size_t
 
n1
, c⁄° ch¨16_à*
s2
, size_à
n2
)

295 c⁄° 
ch¨16_t
* 
e1
 = 
s1
+
n1
;

296 c⁄° 
ch¨16_t
* 
e2
 = 
s2
+
n2
;

298 
s1
 < 
e1
 && 
s2
 < 
e2
) {

299 c⁄° 
d
 = ()*
s1
++ - ()*
s2
++;

300 i‡(
d
) {

301  
d
;

305  
n1
 < 
n2


306 ? (0 - ()*
s2
)

307 : (
n1
 > 
n2


308 ? (()*
s1
 - 0)

312 
°rzcmp16_h_n
(c⁄° 
ch¨16_t
 *
s1H
, 
size_t
 
n1
, c⁄° ch¨16_à*
s2N
, size_à
n2
)

314 c⁄° 
ch¨16_t
* 
e1
 = 
s1H
+
n1
;

315 c⁄° 
ch¨16_t
* 
e2
 = 
s2N
+
n2
;

317 
s1H
 < 
e1
 && 
s2N
 < 
e2
) {

318 c⁄° 
ch¨16_t
 
c2
 = 
¡ohs
(*
s2N
);

319 c⁄° 
d
 = ()*
s1H
++ - ()
c2
;

320 
s2N
++;

321 i‡(
d
) {

322  
d
;

326  
n1
 < 
n2


327 ? (0 - ()
¡ohs
(*
s2N
))

328 : (
n1
 > 
n2


329 ? (()*
s1H
 - 0)

333 
utf16_to_utf8
(c⁄° 
ch¨16_t
* 
§c
, 
size_t
 
§c_Àn
, * 
d°
)

335 i‡(
§c
 =
NULL
 || 
§c_Àn
 =0 || 
d°
 == NULL) {

339 c⁄° 
ch¨16_t
* 
cur_utf16
 = 
§c
;

340 c⁄° 
ch¨16_t
* c⁄° 
íd_utf16
 = 
§c
 + 
§c_Àn
;

341 *
cur
 = 
d°
;

342 
cur_utf16
 < 
íd_utf16
) {

343 
ch¨32_t
 
utf32
;

345 i‡((*
cur_utf16
 & 0xFC00) == 0xD800) {

346 
utf32
 = (*
cur_utf16
++ - 0xD800) << 10;

347 
utf32
 |*
cur_utf16
++ - 0xDC00;

348 
utf32
 += 0x10000;

350 
utf32
 = (
ch¨32_t
Ë*
cur_utf16
++;

352 c⁄° 
size_t
 
Àn
 = 
utf32_codïoöt_utf8_Àngth
(
utf32
);

353 
utf32_codïoöt_to_utf8
((
uöt8_t
*)
cur
, 
utf32
, 
Àn
);

354 
cur
 +
Àn
;

356 *
cur
 = '\0';

363 
ssize_t
 
utf8_Àngth
(c⁄° *
§c
)

365 c⁄° *
cur
 = 
§c
;

366 
size_t
 
ªt
 = 0;

367 *
cur
 != '\0') {

368 c⁄° 
fú°_ch¨
 = *
cur
++;

369 i‡((
fú°_ch¨
 & 0x80) == 0) {

370 
ªt
 += 1;

375 i‡((
fú°_ch¨
 & 0x40) == 0) {

379 
öt32_t
 
mask
, 
to_ign‹e_mask
;

380 
size_t
 
num_to_ªad
 = 0;

381 
ch¨32_t
 
utf32
 = 0;

382 
num_to_ªad
 = 1, 
mask
 = 0x40, 
to_ign‹e_mask
 = 0x80;

383 
num_to_ªad
 < 5 && (
fú°_ch¨
 & 
mask
);

384 
num_to_ªad
++, 
to_ign‹e_mask
 |
mask
, mask >>= 1) {

385 i‡((*
cur
 & 0xC0) != 0x80) {

389 
utf32
 = (utf32 << 6Ë+ (*
cur
++ & 0x3F);

392 i‡(
num_to_ªad
 == 5) {

395 
to_ign‹e_mask
 |
mask
;

396 
utf32
 |((~
to_ign‹e_mask
Ë& 
fú°_ch¨
Ë<< (6 * (
num_to_ªad
 - 1));

397 i‡(
utf32
 > 
kUnicodeMaxCodïoöt
) {

401 
ªt
 +
num_to_ªad
;

403  
ªt
;

406 
ssize_t
 
utf16_to_utf8_Àngth
(c⁄° 
ch¨16_t
 *
§c
, 
size_t
 
§c_Àn
)

408 i‡(
§c
 =
NULL
 || 
§c_Àn
 == 0) {

412 
size_t
 
ªt
 = 0;

413 c⁄° 
ch¨16_t
* c⁄° 
íd
 = 
§c
 + 
§c_Àn
;

414 
§c
 < 
íd
) {

415 i‡((*
§c
 & 0xFC00Ë=0xD800 && (§¯+ 1Ë< 
íd


416 && (*++
§c
 & 0xFC00) == 0xDC00) {

418 
ªt
 += 4;

419 
§c
++;

421 
ªt
 +
utf32_codïoöt_utf8_Àngth
((
ch¨32_t
Ë*
§c
++);

424  
ªt
;

436 
ölöe
 
size_t
 
utf8_codïoöt_Àn
(
uöt8_t
 
ch
)

438  ((0xe5000000 >> ((
ch
 >> 3) & 0x1e)) & 3) + 1;

441 
ölöe
 
utf8_shi·_™d_mask
(
uöt32_t
* 
codePoöt
, c⁄° 
uöt8_t
 
byã
)

443 *
codePoöt
 <<= 6;

444 *
codePoöt
 |0x3F & 
byã
;

447 
size_t
 
utf8_to_utf32_Àngth
(c⁄° *
§c
, size_à
§c_Àn
)

449 i‡(
§c
 =
NULL
 || 
§c_Àn
 == 0) {

452 
size_t
 
ªt
 = 0;

453 c⁄° * 
cur
;

454 c⁄° * 
íd
;

455 
size_t
 
num_to_skù
;

456 
cur
 = 
§c
, 
íd
 = sr¯+ 
§c_Àn
, 
num_to_skù
 = 1;

457 
cur
 < 
íd
;

458 
cur
 +
num_to_skù
, 
ªt
++) {

459 c⁄° 
fú°_ch¨
 = *
cur
;

460 
num_to_skù
 = 1;

461 i‡((
fú°_ch¨
 & 0x80) == 0) {

464 
öt32_t
 
mask
;

466 
mask
 = 0x40; (
fú°_ch¨
 & mask); 
num_to_skù
++, mask >>= 1) {

469  
ªt
;

472 
utf8_to_utf32
(c⁄° * 
§c
, 
size_t
 
§c_Àn
, 
ch¨32_t
* 
d°
)

474 i‡(
§c
 =
NULL
 || 
§c_Àn
 =0 || 
d°
 == NULL) {

478 c⁄° * 
cur
 = 
§c
;

479 c⁄° * c⁄° 
íd
 = 
§c
 + 
§c_Àn
;

480 
ch¨32_t
* 
cur_utf32
 = 
d°
;

481 
cur
 < 
íd
) {

482 
size_t
 
num_ªad
;

483 *
cur_utf32
++ = 
°©ic_ˇ°
<
ch¨32_t
>(
utf32_©_öã∫Æ
(
cur
, &
num_ªad
));

484 
cur
 +
num_ªad
;

486 *
cur_utf32
 = 0;

489 
ölöe
 
uöt32_t
 
utf8_to_utf32_codïoöt
(c⁄° 
uöt8_t
 *
§c
, 
size_t
 
Àngth
)

491 
uöt32_t
 
unicode
;

493 
Àngth
)

496  
§c
[0];

498 
unicode
 = 
§c
[0] & 0x1f;

499 
utf8_shi·_™d_mask
(&
unicode
, 
§c
[1]);

500  
unicode
;

502 
unicode
 = 
§c
[0] & 0x0f;

503 
utf8_shi·_™d_mask
(&
unicode
, 
§c
[1]);

504 
utf8_shi·_™d_mask
(&
unicode
, 
§c
[2]);

505  
unicode
;

507 
unicode
 = 
§c
[0] & 0x07;

508 
utf8_shi·_™d_mask
(&
unicode
, 
§c
[1]);

509 
utf8_shi·_™d_mask
(&
unicode
, 
§c
[2]);

510 
utf8_shi·_™d_mask
(&
unicode
, 
§c
[3]);

511  
unicode
;

519 
ssize_t
 
utf8_to_utf16_Àngth
(c⁄° 
uöt8_t
* 
u8°r
, 
size_t
 
u8Àn
)

521 c⁄° 
uöt8_t
* c⁄° 
u8íd
 = 
u8°r
 + 
u8Àn
;

522 c⁄° 
uöt8_t
* 
u8cur
 = 
u8°r
;

525 
size_t
 
u16mósuªdLí
 = 0;

526 
u8cur
 < 
u8íd
) {

527 
u16mósuªdLí
++;

528 
u8ch¨Lí
 = 
utf8_codïoöt_Àn
(*
u8cur
);

529 
uöt32_t
 
codïoöt
 = 
utf8_to_utf32_codïoöt
(
u8cur
, 
u8ch¨Lí
);

530 i‡(
codïoöt
 > 0xFFFFË
u16mósuªdLí
++;

531 
u8cur
 +
u8ch¨Lí
;

538 i‡(
u8cur
 !
u8íd
) {

542  
u16mósuªdLí
;

545 
ch¨16_t
* 
utf8_to_utf16_no_nuŒ_ãrmö©‹
(c⁄° 
uöt8_t
* 
u8°r
, 
size_t
 
u8Àn
, ch¨16_t* 
u16°r
)

547 c⁄° 
uöt8_t
* c⁄° 
u8íd
 = 
u8°r
 + 
u8Àn
;

548 c⁄° 
uöt8_t
* 
u8cur
 = 
u8°r
;

549 
ch¨16_t
* 
u16cur
 = 
u16°r
;

551 
u8cur
 < 
u8íd
) {

552 
size_t
 
u8Àn
 = 
utf8_codïoöt_Àn
(*
u8cur
);

553 
uöt32_t
 
codïoöt
 = 
utf8_to_utf32_codïoöt
(
u8cur
, 
u8Àn
);

556 i‡(
codïoöt
 <= 0xFFFF) {

558 *
u16cur
++ = (
ch¨16_t
Ë
codïoöt
;

561 
codïoöt
 = codepoint - 0x10000;

562 *
u16cur
++ = (
ch¨16_t
Ë((
codïoöt
 >> 10) + 0xD800);

563 *
u16cur
++ = (
ch¨16_t
Ë((
codïoöt
 & 0x3FF) + 0xDC00);

566 
u8cur
 +
u8Àn
;

568  
u16cur
;

571 
utf8_to_utf16
(c⁄° 
uöt8_t
* 
u8°r
, 
size_t
 
u8Àn
, 
ch¨16_t
* 
u16°r
) {

572 
ch¨16_t
* 
íd
 = 
utf8_to_utf16_no_nuŒ_ãrmö©‹
(
u8°r
, 
u8Àn
, 
u16°r
);

573 *
íd
 = 0;

	@src/utils/Unicode.h

17 #i‚de‡
ANDROID_UNICODE_H


18 
	#ANDROID_UNICODE_H


	)

20 
	~<sys/ty≥s.h
>

21 
	~<°döt.h
>

25 
uöt32_t
 
	tch¨32_t
;

26 
uöt16_t
 
	tch¨16_t
;

29 
°rcmp16
(c⁄° 
ch¨16_t
 *, const char16_t *);

30 
°∫cmp16
(c⁄° 
ch¨16_t
 *
s1
, c⁄° ch¨16_à*
s2
, 
size_t
 
n
);

31 
size_t
 
°æí16
(c⁄° 
ch¨16_t
 *);

32 
size_t
 
°∫Àn16
(c⁄° 
ch¨16_t
 *, size_t);

33 
ch¨16_t
 *
°r˝y16
(char16_t *, const char16_t *);

34 
ch¨16_t
 *
°∫˝y16
(ch¨16_à*, c⁄° ch¨16_à*, 
size_t
);

43 
°rzcmp16
(c⁄° 
ch¨16_t
 *
s1
, 
size_t
 
n1
, c⁄° ch¨16_à*
s2
, size_à
n2
);

46 
°rzcmp16_h_n
(c⁄° 
ch¨16_t
 *
s1H
, 
size_t
 
n1
, c⁄° ch¨16_à*
s2N
, size_à
n2
);

49 
size_t
 
°æí32
(c⁄° 
ch¨32_t
 *);

50 
size_t
 
°∫Àn32
(c⁄° 
ch¨32_t
 *, size_t);

56 
ssize_t
 
utf32_to_utf8_Àngth
(c⁄° 
ch¨32_t
 *
§c
, 
size_t
 
§c_Àn
);

93 
utf32_to_utf8
(c⁄° 
ch¨32_t
* 
§c
, 
size_t
 
§c_Àn
, * 
d°
);

102 
öt32_t
 
utf32_‰om_utf8_©
(c⁄° *
§c
, 
size_t
 
§c_Àn
, size_à
ödex
, size_à*
√xt_ödex
);

108 
ssize_t
 
utf16_to_utf8_Àngth
(c⁄° 
ch¨16_t
 *
§c
, 
size_t
 
§c_Àn
);

115 
utf16_to_utf8
(c⁄° 
ch¨16_t
* 
§c
, 
size_t
 
§c_Àn
, * 
d°
);

133 
ssize_t
 
utf8_Àngth
(c⁄° *
§c
);

138 
size_t
 
utf8_to_utf32_Àngth
(c⁄° *
§c
, size_à
§c_Àn
);

145 
utf8_to_utf32
(c⁄° * 
§c
, 
size_t
 
§c_Àn
, 
ch¨32_t
* 
d°
);

150 
ssize_t
 
utf8_to_utf16_Àngth
(c⁄° 
uöt8_t
* 
§c
, 
size_t
 
§cLí
);

157 
ch¨16_t
* 
utf8_to_utf16_no_nuŒ_ãrmö©‹
(c⁄° 
uöt8_t
* 
§c
, 
size_t
 
§cLí
, ch¨16_t* 
d°
);

164 
utf8_to_utf16
(c⁄° 
uöt8_t
* 
§c
, 
size_t
 
§cLí
, 
ch¨16_t
* 
d°
);

	@src/utils/UniquePtr.h

25 #i‚de‡
UNIQUE_PTR_H_ö˛uded


26 
	#UNIQUE_PTR_H_ö˛uded


	)

28 
	~<c°dlib
>

31 
	gãm∂©e
 <
ty≥«me
 
	gT
>

32 
	sDeÁu…Dñëe
 {

33 íum { 
	mty≥_mu°_be_com∂ëe
 = (
T
) };

34 
DeÁu…Dñëe
() {}

35 
›î©‹
()(
T
* 
	mp
) const {

36 
dñëe
 
	mp
;

41 
	gãm∂©e
 <
ty≥«me
 
	gT
>

42 
	gDeÁu…Dñëe
<
	gT
[]> {

43 íum { 
	gty≥_mu°_be_com∂ëe
 = (
T
) };

44 
›î©‹
()(
T
* 
	gp
) const {

45 
	gdñëe
[] 
	gp
;

57 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gD
 = 
DeÁu…Dñëe
<
T
> >

58 ˛as†
	cUniquePå
 {

59 
public
:

61 
ex∂icô
 
	$UniquePå
(
T
* 
±r
 = 
NULL
Ë: 
	$mPå
(
±r
) {

64 ~
	$UniquePå
() {

65 
	`ª£t
();

66 
	}
}

69 
	gT
& 
	g›î©‹
*(Ëc⁄° {  *
	gmPå
; }

70 
T
* 
	g›î©‹
->(Ëc⁄° {  
	gmPå
; }

71 
T
* 
	$gë
(Ëc⁄° {  
mPå
; 
	}
}

75 
T
* 
	$ªÀa£
(Ë
	`__©åibuã__
((
w¨n_unu£d_ªsu…
)) {

76 
T
* 
ªsu…
 = 
mPå
;

77 
mPå
 = 
NULL
;

78  
ªsu…
;

79 
	}
}

84 
	$ª£t
(
T
* 
±r
 = 
NULL
) {

85 i‡(
±r
 !
mPå
) {

86 
	`D
()(
mPå
);

87 
mPå
 = 
±r
;

89 
	}
}

91 
	g¥iv©e
:

93 
T
* 
mPå
;

96 
	gãm∂©e
 <
ty≥«me
 
	gT2
> 
boﬁ
 
	g›î©‹
==(c⁄° 
UniquePå
<
T2
>& 
p
) const;

97 
	gãm∂©e
 <
ty≥«me
 
	gT2
> 
boﬁ
 
	g›î©‹
!=(c⁄° 
UniquePå
<
T2
>& 
p
) const;

100 
UniquePå
(const UniquePtr&);

101 
	g›î©‹
=(c⁄° 
UniquePå
&);

106 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gD
>

107 
˛ass
 
	gUniquePå
<
	gT
[], 
	gD
> {

108 
	gpublic
:

109 
ex∂icô
 
UniquePå
(
T
* 
±r
 = 
NULL
Ë: 
mPå
(ptr) {

112 ~
UniquePå
() {

113 
ª£t
();

116 
	gT
& 
	g›î©‹
[](
size_t
 
	gi
) const {

117  
	gmPå
[
i
];

119 
T
* 
gë
(Ëc⁄° {  
	gmPå
; }

121 
T
* 
ªÀa£
(Ë
__©åibuã__
((
w¨n_unu£d_ªsu…
)) {

122 
T
* 
	gªsu…
 = 
mPå
;

123 
	gmPå
 = 
NULL
;

124  
	gªsu…
;

127 
ª£t
(
T
* 
±r
 = 
NULL
) {

128 i‡(
±r
 !
mPå
) {

129 
D
()(
mPå
);

130 
	gmPå
 = 
±r
;

134 
	g¥iv©e
:

135 
T
* 
mPå
;

138 
UniquePå
(const UniquePtr&);

139 
	g›î©‹
=(c⁄° 
UniquePå
&);

142 #i‡
UNIQUE_PTR_TESTS


147 
	~<°dio.h
>

149 
	$as£π
(
boﬁ
 
b
) {

150 i‡(!
b
) {

151 
	`Ârötf
(
°dîr
, "FAIL\n");

152 
	`ab‹t
();

154 
	`Ârötf
(
°dîr
, "OK\n");

155 
	}
}

156 
	gcCou¡
 = 0;

157 
	sC
 {

158 
C
(Ë{ ++
	mcCou¡
; }

159 ~
C
(Ë{ --
	mcCou¡
; }

161 
boﬁ
 
	g‰ìd
 = 
Ál£
;

162 
	sFªî
 {

163 
›î©‹
()(* 
	mp
) {

164 
as£π
(*
p
 == 123);

165 
‰ì
(
p
);

166 
	m‰ìd
 = 
åue
;

170 
	$maö
(
¨gc
, * 
¨gv
[]) {

177 
UniquePå
<
C
> 
	`c
(
√w
 C);

178 
	`as£π
(
cCou¡
 == 1);

180 
	`as£π
(
cCou¡
 == 0);

182 
C
* 
øwC
;

184 
UniquePå
<
C
> 
	`c
(
√w
 C);

185 
	`as£π
(
cCou¡
 == 1);

186 
øwC
 = 
c
.
	`ªÀa£
();

188 
	`as£π
(
cCou¡
 == 1);

189 
dñëe
 
øwC
;

192 
UniquePå
<
C
> 
	`c
(
√w
 C);

193 
	`as£π
(
cCou¡
 == 1);

194 
c
.
	`ª£t
(
√w
 
C
);

195 
	`as£π
(
cCou¡
 == 1);

197 
	`as£π
(
cCou¡
 == 0);

205 
UniquePå
<
C
[]> 
	`cs
(
√w
 C[4]);

206 
	`as£π
(
cCou¡
 == 4);

208 
	`as£π
(
cCou¡
 == 0);

211 
UniquePå
<
C
[]> 
	`c
(
√w
 C[4]);

212 
	`as£π
(
cCou¡
 == 4);

213 
øwC
 = 
c
.
	`ªÀa£
();

215 
	`as£π
(
cCou¡
 == 4);

216 
dñëe
[] 
øwC
;

219 
UniquePå
<
C
[]> 
	`c
(
√w
 C[4]);

220 
	`as£π
(
cCou¡
 == 4);

221 
c
.
	`ª£t
(
√w
 
C
[2]);

222 
	`as£π
(
cCou¡
 == 2);

224 
	`as£π
(
cCou¡
 == 0);

229 
	`as£π
(!
‰ìd
);

231 
UniquePå
<, 
Fªî
> 
	`i
(
ªöãΩªt_ˇ°
<*>(
	`mÆloc
(())));

232 *
i
 = 123;

234 
	`as£π
(
‰ìd
);

236 
	}
}

	@src/utils/Vector.h

17 #i‚de‡
ANDROID_VECTOR_H


18 
	#ANDROID_VECTOR_H


	)

20 
	~<√w
>

21 
	~<°döt.h
>

22 
	~<sys/ty≥s.h
>

26 
	~<utûs/Ve˘‹Im∂.h
>

27 
	~<utûs/Ty≥Hñ≥rs.h
>

31 
«me•a˚
 
	g™droid
 {

33 
	gãm∂©e
 <
ty≥«me
 
	gTYPE
>

34 
˛ass
 
	gS‹ãdVe˘‹
;

42 
	gãm∂©e
 <
˛ass
 
	gTYPE
>

43 ˛as†
	cVe˘‹
 : 
¥iv©e
 
Ve˘‹Im∂


45 
public
:

46 
TYPE
 
	tvÆue_ty≥
;

52 
Ve˘‹
();

53 
Ve˘‹
(c⁄° Ve˘‹<
TYPE
>& 
rhs
);

54 
ex∂icô
 
Ve˘‹
(c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
rhs
);

55 
	gvútuÆ
 ~
Ve˘‹
();

58 c⁄° 
	gVe˘‹
<
	gTYPE
>& 
	g›î©‹
 = (c⁄° 
Ve˘‹
<
TYPE
>& 
rhs
) const;

59 
	gVe˘‹
<
	gTYPE
>& 
	g›î©‹
 = (c⁄° 
Ve˘‹
<
TYPE
>& 
rhs
);

61 c⁄° 
	gVe˘‹
<
	gTYPE
>& 
	g›î©‹
 = (c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
rhs
) const;

62 
	gVe˘‹
<
	gTYPE
>& 
	g›î©‹
 = (c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
rhs
);

68 
ölöe
 
˛ór
(Ë{ 
	gVe˘‹Im∂
::clear(); }

75 
ölöe
 
size_t
 
size
(Ëc⁄° {  
	gVe˘‹Im∂
::size(); }

77 
ölöe
 
boﬁ
 
isEm±y
(Ëc⁄° {  
	gVe˘‹Im∂
::isEmpty(); }

79 
ölöe
 
size_t
 
ˇ∑côy
(Ëc⁄° {  
	gVe˘‹Im∂
::capacity(); }

81 
ölöe
 
ssize_t
 
£tC≠acôy
(
size_t
 
size
Ë{  
	gVe˘‹Im∂
::setCapacity(size); }

88 
ölöe
 c⁄° 
TYPE
* 
¨øy
() const;

90 
TYPE
* 
edôAºay
();

97 
ölöe
 c⁄° 
	gTYPE
& 
	g›î©‹
 [] (
size_t
 
	gödex
) const;

99 
ölöe
 c⁄° 
	gTYPE
& 
ôemAt
(
size_t
 
ödex
) const;

101 c⁄° 
	gTYPE
& 
t›
() const;

108 
	gTYPE
& 
edôIãmAt
(
size_t
 
ödex
);

110 
	gTYPE
& 
edôT›
();

117 
ssize_t
 
ö£πVe˘‹At
(c⁄° 
Ve˘‹
<
TYPE
>& 
ve˘‹
, 
size_t
 
ödex
);

120 
ssize_t
 
≠≥ndVe˘‹
(c⁄° 
Ve˘‹
<
TYPE
>& 
ve˘‹
);

124 
ssize_t
 
ö£πAºayAt
(c⁄° 
TYPE
* 
¨øy
, 
size_t
 
ödex
, size_à
Àngth
);

127 
ssize_t
 
≠≥ndAºay
(c⁄° 
TYPE
* 
¨øy
, 
size_t
 
Àngth
);

134 
ölöe
 
ssize_t
 
ö£πAt
(
size_t
 
ödex
, size_à
numIãms
 = 1);

136 
ssize_t
 
ö£πAt
(c⁄° 
TYPE
& 
¥ŸŸy≥_ôem
, 
size_t
 
ödex
, size_à
numIãms
 = 1);

138 
ölöe
 
p›
();

140 
ölöe
 
push
();

142 
push
(c⁄° 
TYPE
& 
ôem
);

144 
ölöe
 
ssize_t
 
add
();

146 
ssize_t
 
add
(c⁄° 
TYPE
& 
ôem
);

148 
ölöe
 
ssize_t
 
ª∂a˚At
(
size_t
 
ödex
);

150 
ssize_t
 
ª∂a˚At
(c⁄° 
TYPE
& 
ôem
, 
size_t
 
ödex
);

157 
ölöe
 
ssize_t
 
ªmoveIãmsAt
(
size_t
 
ödex
, size_à
cou¡
 = 1);

159 
ölöe
 
ssize_t
 
ªmoveAt
(
size_t
 
ödex
Ë{  
ªmoveIãmsAt
(index); }

165 (*
	gcom∑r_t
)(c⁄° 
	tTYPE
* 
	tlhs
, c⁄° TYPE* 
	trhs
);

166 (*
	gcom∑r_r_t
)(c⁄° 
	tTYPE
* 
	tlhs
, c⁄° TYPE* 
	trhs
, * 
	t°©e
);

168 
ölöe
 
°©us_t
 
s‹t
(
com∑r_t
 
cmp
);

169 
ölöe
 
°©us_t
 
s‹t
(
com∑r_r_t
 
cmp
, * 
°©e
);

172 
ölöe
 
size_t
 
gëIãmSize
(Ëc⁄° {  
ôemSize
(); }

179 
TYPE
* 
	tôî©‹
;

180 
TYPE
 c⁄°* 
	tc⁄°_ôî©‹
;

182 
ölöe
 
ôî©‹
 
begö
(Ë{  
edôAºay
(); }

183 
ölöe
 
ôî©‹
 
íd
(Ë{  
edôAºay
(Ë+ 
size
(); }

184 
ölöe
 
c⁄°_ôî©‹
 
begö
(Ëc⁄° {  
¨øy
(); }

185 
ölöe
 
c⁄°_ôî©‹
 
íd
(Ëc⁄° {  
¨øy
(Ë+ 
size
(); }

186 
ölöe
 
ª£rve
(
size_t
 
n
Ë{ 
£tC≠acôy
(n); }

187 
ölöe
 
boﬁ
 
em±y
(Ëc⁄°{  
isEm±y
(); }

188 
ölöe
 
push_back
(c⁄° 
TYPE
& 
ôem
Ë{ 
ö£πAt
(ôem, 
size
(), 1); }

189 
ölöe
 
push_‰⁄t
(c⁄° 
TYPE
& 
ôem
Ë{ 
ö£πAt
(item, 0, 1); }

190 
ölöe
 
ôî©‹
 
îa£
(ôî©‹ 
pos
) {

191 
ssize_t
 
	gödex
 = 
ªmoveIãmsAt
(
pos
-
¨øy
());

192  
begö
(Ë+ 
	gödex
;

195 
	g¥Ÿe˘ed
:

196 
vútuÆ
 
do_c⁄°ru˘
(* 
°‹age
, 
size_t
 
num
) const;

197 
vútuÆ
 
do_de°roy
(* 
°‹age
, 
size_t
 
num
) const;

198 
vútuÆ
 
do_c›y
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const;

199 
vútuÆ
 
do_•œt
(* 
de°
, c⁄° * 
ôem
, 
size_t
 
num
) const;

200 
vútuÆ
 
do_move_f‹w¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const;

201 
vútuÆ
 
do_move_backw¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const;

206 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gåaô_åivül_move
<
	gVe˘‹
<T> > {Énum { 
	gvÆue
 = 
åue
 }; };

212 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


213 
	gVe˘‹
<
	gTYPE
>::
	$Ve˘‹
()

214 : 
	`Ve˘‹Im∂
((
TYPE
),

215 ((
åaôs
<
TYPE
>::
has_åivül_˘‹
 ? 
HAS_TRIVIAL_CTOR
 : 0)

216 |(
åaôs
<
TYPE
>::
has_åivül_dt‹
 ? 
HAS_TRIVIAL_DTOR
 : 0)

217 |(
åaôs
<
TYPE
>::
has_åivül_c›y
 ? 
HAS_TRIVIAL_COPY
 : 0))

220 
	}
}

222 
ãm∂©e
<
˛ass
 
TYPE
> 
ölöe


223 
Ve˘‹
<
TYPE
>::Ve˘‹(c⁄° Ve˘‹<TYPE>& 
rhs
)

224 : 
	$Ve˘‹Im∂
(
rhs
) {

225 
	}
}

227 
ãm∂©e
<
˛ass
 
TYPE
> 
ölöe


228 
Ve˘‹
<
TYPE
>::Ve˘‹(c⁄° 
S‹ãdVe˘‹
<TYPE>& 
rhs
)

229 : 
Ve˘‹Im∂
(
°©ic_ˇ°
<c⁄° Ve˘‹Im∂&>(
rhs
)) {

232 
ãm∂©e
<
˛ass
 
TYPE
> 
ölöe


233 
Ve˘‹
<
TYPE
>::~
	$Ve˘‹
() {

234 
	`föish_ve˘‹
();

235 
	}
}

237 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


238 
	gVe˘‹
<
	gTYPE
>& Ve˘‹<TYPE>::
›î©‹
 = (c⁄° 
Ve˘‹
<
TYPE
>& 
rhs
) {

239 
Ve˘‹Im∂
::
›î©‹
 = (
rhs
);

240  *
	gthis
;

243 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


244 c⁄° 
	gVe˘‹
<
	gTYPE
>& Ve˘‹<TYPE>::
›î©‹
 = (c⁄° 
Ve˘‹
<
TYPE
>& 
rhs
) const {

245 
Ve˘‹Im∂
::
›î©‹
 = (
°©ic_ˇ°
<c⁄° Ve˘‹Im∂&>(
rhs
));

246  *
	gthis
;

249 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


250 
	gVe˘‹
<
	gTYPE
>& Ve˘‹<TYPE>::
›î©‹
 = (c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
rhs
) {

251 
Ve˘‹Im∂
::
›î©‹
 = (
°©ic_ˇ°
<c⁄° Ve˘‹Im∂&>(
rhs
));

252  *
	gthis
;

255 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


256 c⁄° 
	gVe˘‹
<
	gTYPE
>& Ve˘‹<TYPE>::
›î©‹
 = (c⁄° 
S‹ãdVe˘‹
<
TYPE
>& 
rhs
) const {

257 
Ve˘‹Im∂
::
›î©‹
 = (
rhs
);

258  *
	gthis
;

261 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


262 c⁄° 
TYPE
* 
	gVe˘‹
<
	gTYPE
>::
	$¨øy
() const {

263  
°©ic_ˇ°
<c⁄° 
TYPE
 *>(
	`¨øyIm∂
());

264 
	}
}

266 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


267 
TYPE
* 
	gVe˘‹
<
	gTYPE
>::
	$edôAºay
() {

268  
°©ic_ˇ°
<
TYPE
 *>(
	`edôAºayIm∂
());

269 
	}
}

272 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


273 c⁄° 
	gTYPE
& 
	gVe˘‹
<TYPE>::
›î©‹
[](
size_t
 
ödex
) const {

278  *(
¨øy
(Ë+ 
ödex
);

281 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


282 c⁄° 
	gTYPE
& 
	gVe˘‹
<TYPE>::
	$ôemAt
(
size_t
 
ödex
) const {

283  
›î©‹
[](
ödex
);

284 
	}
}

286 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


287 c⁄° 
	gTYPE
& 
	gVe˘‹
<TYPE>::
	$t›
() const {

288  *(
	`¨øy
(Ë+ 
	`size
() - 1);

289 
	}
}

291 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


292 
	gTYPE
& 
	gVe˘‹
<TYPE>::
	$edôIãmAt
(
size_t
 
ödex
) {

293  *–
°©ic_ˇ°
<
TYPE
 *>(
	`edôIãmLoˇti⁄
(
ödex
)) );

294 
	}
}

296 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


297 
	gTYPE
& 
	gVe˘‹
<TYPE>::
	$edôT›
() {

298  *–
°©ic_ˇ°
<
TYPE
 *>(
	`edôIãmLoˇti⁄
(
	`size
()-1)) );

299 
	}
}

301 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


302 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
ö£πVe˘‹At
(c⁄° 
Ve˘‹
<
TYPE
>& 
ve˘‹
, 
size_t
 
ödex
) {

303  
	gVe˘‹Im∂
::
ö£πVe˘‹At
(
ªöãΩªt_ˇ°
<c⁄° 
Ve˘‹Im∂
&>(
ve˘‹
), 
ödex
);

306 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


307 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
≠≥ndVe˘‹
(c⁄° 
Ve˘‹
<
TYPE
>& 
ve˘‹
) {

308  
Ve˘‹Im∂
::
≠≥ndVe˘‹
(
ªöãΩªt_ˇ°
<c⁄° Ve˘‹Im∂&>(
ve˘‹
));

311 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


312 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
	$ö£πAºayAt
(c⁄° 
TYPE
* 
¨øy
, 
size_t
 
ödex
, size_à
Àngth
) {

313  
Ve˘‹Im∂
::
	`ö£πAºayAt
(
¨øy
, 
ödex
, 
Àngth
);

314 
	}
}

316 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


317 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
	$≠≥ndAºay
(c⁄° 
TYPE
* 
¨øy
, 
size_t
 
Àngth
) {

318  
Ve˘‹Im∂
::
	`≠≥ndAºay
(
¨øy
, 
Àngth
);

319 
	}
}

321 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


322 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
	$ö£πAt
(c⁄° 
TYPE
& 
ôem
, 
size_t
 
ödex
, size_à
numIãms
) {

323  
Ve˘‹Im∂
::
	`ö£πAt
(&
ôem
, 
ödex
, 
numIãms
);

324 
	}
}

326 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


327 
	gVe˘‹
<
	gTYPE
>::
	$push
(c⁄° 
TYPE
& 
ôem
) {

328  
Ve˘‹Im∂
::
	`push
(&
ôem
);

329 
	}
}

331 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


332 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
	$add
(c⁄° 
TYPE
& 
ôem
) {

333  
Ve˘‹Im∂
::
	`add
(&
ôem
);

334 
	}
}

336 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


337 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
	$ª∂a˚At
(c⁄° 
TYPE
& 
ôem
, 
size_t
 
ödex
) {

338  
Ve˘‹Im∂
::
	`ª∂a˚At
(&
ôem
, 
ödex
);

339 
	}
}

341 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


342 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
	$ö£πAt
(
size_t
 
ödex
, size_à
numIãms
) {

343  
Ve˘‹Im∂
::
	`ö£πAt
(
ödex
, 
numIãms
);

344 
	}
}

346 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


347 
	gVe˘‹
<
	gTYPE
>::
	$p›
() {

348 
Ve˘‹Im∂
::
	`p›
();

349 
	}
}

351 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


352 
	gVe˘‹
<
	gTYPE
>::
	$push
() {

353 
Ve˘‹Im∂
::
	`push
();

354 
	}
}

356 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


357 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
	$add
() {

358  
Ve˘‹Im∂
::
	`add
();

359 
	}
}

361 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


362 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
	$ª∂a˚At
(
size_t
 
ödex
) {

363  
Ve˘‹Im∂
::
	`ª∂a˚At
(
ödex
);

364 
	}
}

366 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


367 
ssize_t
 
	gVe˘‹
<
	gTYPE
>::
	$ªmoveIãmsAt
(
size_t
 
ödex
, size_à
cou¡
) {

368  
Ve˘‹Im∂
::
	`ªmoveIãmsAt
(
ödex
, 
cou¡
);

369 
	}
}

371 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


372 
°©us_t
 
	gVe˘‹
<
	gTYPE
>::
s‹t
(
Ve˘‹
<
TYPE
>::
com∑r_t
 
cmp
) {

373  
Ve˘‹Im∂
::
s‹t
((Ve˘‹Im∂::
com∑r_t
)
cmp
);

376 
	gãm∂©e
<
˛ass
 
	gTYPE
> 
ölöe


377 
°©us_t
 
	gVe˘‹
<
	gTYPE
>::
s‹t
(
Ve˘‹
<
TYPE
>::
com∑r_r_t
 
cmp
, * 
°©e
) {

378  
	gVe˘‹Im∂
::
s‹t
((
Ve˘‹Im∂
::
com∑r_r_t
)
cmp
, 
°©e
);

383 
	gãm∂©e
<
˛ass
 
	gTYPE
>

384 
	gVe˘‹
<
	gTYPE
>::
	$do_c⁄°ru˘
(* 
°‹age
, 
size_t
 
num
) const {

385 
	`c⁄°ru˘_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
°‹age
), 
num
 );

386 
	}
}

388 
	gãm∂©e
<
˛ass
 
	gTYPE
>

389 
	gVe˘‹
<
	gTYPE
>::
	$do_de°roy
(* 
°‹age
, 
size_t
 
num
) const {

390 
	`de°roy_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
°‹age
), 
num
 );

391 
	}
}

393 
	gãm∂©e
<
˛ass
 
	gTYPE
>

394 
	gVe˘‹
<
	gTYPE
>::
	$do_c›y
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const {

395 
	`c›y_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
de°
),ÑeöãΩªt_ˇ°<c⁄° TYPE*>(
‰om
), 
num
 );

396 
	}
}

398 
	gãm∂©e
<
˛ass
 
	gTYPE
>

399 
	gVe˘‹
<
	gTYPE
>::
	$do_•œt
(* 
de°
, c⁄° * 
ôem
, 
size_t
 
num
) const {

400 
	`•œt_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
de°
),ÑeöãΩªt_ˇ°<c⁄° TYPE*>(
ôem
), 
num
 );

401 
	}
}

403 
	gãm∂©e
<
˛ass
 
	gTYPE
>

404 
	gVe˘‹
<
	gTYPE
>::
	$do_move_f‹w¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const {

405 
	`move_f‹w¨d_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
de°
),ÑeöãΩªt_ˇ°<c⁄° TYPE*>(
‰om
), 
num
 );

406 
	}
}

408 
	gãm∂©e
<
˛ass
 
	gTYPE
>

409 
	gVe˘‹
<
	gTYPE
>::
	$do_move_backw¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const {

410 
	`move_backw¨d_ty≥
–
ªöãΩªt_ˇ°
<
TYPE
*>(
de°
),ÑeöãΩªt_ˇ°<c⁄° TYPE*>(
‰om
), 
num
 );

411 
	}
}

	@src/utils/VectorImpl.cpp

17 
	#LOG_TAG
 "Ve˘‹"

	)

19 
	~<°rög.h
>

20 
	~<°dlib.h
>

21 
	~<°dio.h
>

25 
	~<utûs/Eº‹s.h
>

26 
	~<utûs/Sh¨edBuf„r.h
>

27 
	~<utûs/Ve˘‹Im∂.h
>

32 
«me•a˚
 
	g™droid
 {

36 c⁄° 
size_t
 
	gkMöVe˘‹C≠acôy
 = 4;

38 
ölöe
 
size_t
 
max
(size_à
a
, size_à
b
) {

39  
	ga
>
	gb
 ?á : 
b
;

44 
	gVe˘‹Im∂
::
Ve˘‹Im∂
(
size_t
 
ôemSize
, 
uöt32_t
 
Êags
)

45 : 
mSt‹age
(0), 
mCou¡
(0), 
mFœgs
(
Êags
), 
mIãmSize
(
ôemSize
)

49 
	gVe˘‹Im∂
::
Ve˘‹Im∂
(c⁄° Ve˘‹Im∂& 
rhs
)

50 : 
mSt‹age
(
rhs
.mSt‹age), 
mCou¡
(rhs.mCount),

51 
mFœgs
(
rhs
.mFœgs), 
mIãmSize
(rhs.mItemSize)

53 i‡(
	gmSt‹age
) {

54 
	gSh¨edBuf„r
::
buf„rFromD©a
(
mSt‹age
)->
acquúe
();

58 
	gVe˘‹Im∂
::~
Ve˘‹Im∂
()

69 
Ve˘‹Im∂
& Ve˘‹Im∂::
›î©‹
 = (c⁄° Ve˘‹Im∂& 
rhs
)

75 i‡(
this
 !&
rhs
) {

76 
ªÀa£_°‹age
();

77 i‡(
	grhs
.
	gmCou¡
) {

78 
	gmSt‹age
 = 
rhs
.
mSt‹age
;

79 
	gmCou¡
 = 
rhs
.
mCou¡
;

80 
	gSh¨edBuf„r
::
buf„rFromD©a
(
mSt‹age
)->
acquúe
();

82 
	gmSt‹age
 = 0;

83 
	gmCou¡
 = 0;

86  *
	gthis
;

89 * 
	gVe˘‹Im∂
::
edôAºayIm∂
()

91 i‡(
mSt‹age
) {

92 
Sh¨edBuf„r
* 
sb
 = Sh¨edBuf„r::
buf„rFromD©a
(
mSt‹age
)->
©ãm±Edô
();

93 i‡(
	gsb
 == 0) {

94 
sb
 = 
Sh¨edBuf„r
::
Æloc
(
ˇ∑côy
(Ë* 
mIãmSize
);

95 i‡(
	gsb
) {

96 
_do_c›y
(
sb
->
d©a
(), 
mSt‹age
, 
mCou¡
);

97 
ªÀa£_°‹age
();

98 
	gmSt‹age
 = 
sb
->
d©a
();

102  
	gmSt‹age
;

105 
size_t
 
	gVe˘‹Im∂
::
ˇ∑côy
() const

107 i‡(
mSt‹age
) {

108  
Sh¨edBuf„r
::
buf„rFromD©a
(
mSt‹age
)->
size
(Ë/ 
mIãmSize
;

113 
ssize_t
 
	gVe˘‹Im∂
::
ö£πVe˘‹At
(c⁄° 
Ve˘‹Im∂
& 
ve˘‹
, 
size_t
 
ödex
)

115  
ö£πAºayAt
(
ve˘‹
.
¨øyIm∂
(), 
ödex
, ve˘‹.
size
());

118 
ssize_t
 
	gVe˘‹Im∂
::
≠≥ndVe˘‹
(c⁄° 
Ve˘‹Im∂
& 
ve˘‹
)

120  
ö£πVe˘‹At
(
ve˘‹
, 
size
());

123 
ssize_t
 
	gVe˘‹Im∂
::
ö£πAºayAt
(c⁄° * 
¨øy
, 
size_t
 
ödex
, size_à
Àngth
)

125 i‡(
	gödex
 > 
size
())

126  
	gBAD_INDEX
;

127 * 
	gwhîe
 = 
_grow
(
ödex
, 
Àngth
);

128 i‡(
	gwhîe
) {

129 
_do_c›y
(
whîe
, 
¨øy
, 
Àngth
);

131  
	gwhîe
 ? 
	gödex
 : (
ssize_t
)
NO_MEMORY
;

134 
ssize_t
 
	gVe˘‹Im∂
::
≠≥ndAºay
(c⁄° * 
¨øy
, 
size_t
 
Àngth
)

136  
ö£πAºayAt
(
¨øy
, 
size
(), 
Àngth
);

139 
ssize_t
 
	gVe˘‹Im∂
::
ö£πAt
(
size_t
 
ödex
, size_à
numIãms
)

141  
ö£πAt
(0, 
ödex
, 
numIãms
);

144 
ssize_t
 
	gVe˘‹Im∂
::
ö£πAt
(c⁄° * 
ôem
, 
size_t
 
ödex
, size_à
numIãms
)

146 i‡(
	gödex
 > 
size
())

147  
	gBAD_INDEX
;

148 * 
	gwhîe
 = 
_grow
(
ödex
, 
numIãms
);

149 i‡(
	gwhîe
) {

150 i‡(
	gôem
) {

151 
_do_•œt
(
whîe
, 
ôem
, 
numIãms
);

153 
_do_c⁄°ru˘
(
whîe
, 
numIãms
);

156  
	gwhîe
 ? 
	gödex
 : (
ssize_t
)
NO_MEMORY
;

159 
s‹tProxy
(c⁄° * 
lhs
, c⁄° * 
rhs
, * 
func
)

161  (*(
	gVe˘‹Im∂
::
com∑r_t
)
func
)(
lhs
, 
	grhs
);

164 
°©us_t
 
	gVe˘‹Im∂
::
s‹t
(
Ve˘‹Im∂
::
com∑r_t
 
cmp
)

166  
s‹t
(
s‹tProxy
, (*)
cmp
);

169 
°©us_t
 
	gVe˘‹Im∂
::
s‹t
(
Ve˘‹Im∂
::
com∑r_r_t
 
cmp
, * 
°©e
)

174 c⁄° 
ssize_t
 
	gcou¡
 = 
size
();

175 i‡(
	gcou¡
 > 1) {

176 * 
	g¨øy
 = 
c⁄°_ˇ°
<*>(
¨øyIm∂
());

177 * 
	gãmp
 = 0;

178 
ssize_t
 
	gi
 = 1;

179 
	gi
 < 
	gcou¡
) {

180 * 
	gôem
 = 
ªöãΩªt_ˇ°
<*>(
¨øy
Ë+ 
mIãmSize
*(
i
);

181 * 
	gcuº
 = 
ªöãΩªt_ˇ°
<*>(
¨øy
Ë+ 
mIãmSize
*(
i
-1);

182 i‡(
cmp
(
cuº
, 
ôem
, 
°©e
) > 0) {

184 i‡(!
	gãmp
) {

186 
	g¨øy
 = 
edôAºayIm∂
();

187 i‡(!
	g¨øy
Ë 
	gNO_MEMORY
;

188 
	gãmp
 = 
mÆloc
(
mIãmSize
);

189 i‡(!
	gãmp
Ë 
	gNO_MEMORY
;

190 
	gôem
 = 
ªöãΩªt_ˇ°
<*>(
¨øy
Ë+ 
mIãmSize
*(
i
);

191 
	gcuº
 = 
ªöãΩªt_ˇ°
<*>(
¨øy
Ë+ 
mIãmSize
*(
i
-1);

193 
_do_de°roy
(
ãmp
, 1);

196 
_do_c›y
(
ãmp
, 
ôem
, 1);

198 
ssize_t
 
	gj
 = 
i
-1;

199 * 
	g√xt
 = 
ªöãΩªt_ˇ°
<*>(
¨øy
Ë+ 
mIãmSize
*(
i
);

201 
_do_de°roy
(
√xt
, 1);

202 
_do_c›y
(
√xt
, 
cuº
, 1);

203 
	g√xt
 = 
cuº
;

204 --
	gj
;

205 
	gcuº
 = 
ªöãΩªt_ˇ°
<*>(
¨øy
Ë+ 
mIãmSize
*(
j
);

206 } 
	gj
>=0 && (
cmp
(
cuº
, 
ãmp
, 
°©e
) > 0));

208 
_do_de°roy
(
√xt
, 1);

209 
_do_c›y
(
√xt
, 
ãmp
, 1);

211 
	gi
++;

214 i‡(
	gãmp
) {

215 
_do_de°roy
(
ãmp
, 1);

216 
‰ì
(
ãmp
);

219  
	gNO_ERROR
;

222 
	gVe˘‹Im∂
::
p›
()

224 i‡(
size
())

225 
ªmoveIãmsAt
(
size
()-1, 1);

228 
	gVe˘‹Im∂
::
push
()

230 
push
(0);

233 
	gVe˘‹Im∂
::
push
(c⁄° * 
ôem
)

235 
ö£πAt
(
ôem
, 
size
());

238 
ssize_t
 
	gVe˘‹Im∂
::
add
()

240  
add
(0);

243 
ssize_t
 
	gVe˘‹Im∂
::
add
(c⁄° * 
ôem
)

245  
ö£πAt
(
ôem
, 
size
());

248 
ssize_t
 
	gVe˘‹Im∂
::
ª∂a˚At
(
size_t
 
ödex
)

250  
ª∂a˚At
(0, 
ödex
);

253 
ssize_t
 
	gVe˘‹Im∂
::
ª∂a˚At
(c⁄° * 
¥ŸŸy≥
, 
size_t
 
ödex
)

260 i‡(
	gödex
 >
size
()) {

261  
BAD_INDEX
;

264 * 
	gôem
 = 
edôIãmLoˇti⁄
(
ödex
);

265 i‡(
	gôem
 !
¥ŸŸy≥
) {

266 i‡(
ôem
 == 0)

267  
NO_MEMORY
;

268 
_do_de°roy
(
ôem
, 1);

269 i‡(
	g¥ŸŸy≥
 == 0) {

270 
_do_c⁄°ru˘
(
ôem
, 1);

272 
_do_c›y
(
ôem
, 
¥ŸŸy≥
, 1);

275  
ssize_t
(
ödex
);

278 
ssize_t
 
	gVe˘‹Im∂
::
ªmoveIãmsAt
(
size_t
 
ödex
, size_à
cou¡
)

285 i‡((
	gödex
+
	gcou¡
Ë> 
size
())

286  
	gBAD_VALUE
;

287 
_shrök
(
ödex
, 
cou¡
);

288  
	gödex
;

291 
	gVe˘‹Im∂
::
föish_ve˘‹
()

293 
ªÀa£_°‹age
();

294 
	gmSt‹age
 = 0;

295 
	gmCou¡
 = 0;

298 
	gVe˘‹Im∂
::
˛ór
()

300 
_shrök
(0, 
mCou¡
);

303 * 
	gVe˘‹Im∂
::
edôIãmLoˇti⁄
(
size_t
 
ödex
)

310 i‡(
ödex
 < 
ˇ∑côy
()) {

311 * 
buf„r
 = 
edôAºayIm∂
();

312 i‡(
	gbuf„r
) {

313  
	gªöãΩªt_ˇ°
<*>(
	gbuf„r
Ë+ 
ödex
*
	gmIãmSize
;

319 c⁄° * 
	gVe˘‹Im∂
::
ôemLoˇti⁄
(
size_t
 
ödex
) const

326 i‡(
ödex
 < 
ˇ∑côy
()) {

327 c⁄° * 
buf„r
 = 
¨øyIm∂
();

328 i‡(
	gbuf„r
) {

329  
	gªöãΩªt_ˇ°
<c⁄° *>(
	gbuf„r
Ë+ 
ödex
*
	gmIãmSize
;

335 
ssize_t
 
	gVe˘‹Im∂
::
£tC≠acôy
(
size_t
 
√w_ˇ∑côy
)

337 
size_t
 
cuºít_ˇ∑côy
 = 
ˇ∑côy
();

338 
ssize_t
 
	gamou¡
 = 
√w_ˇ∑côy
 - 
size
();

339 i‡(
	gamou¡
 <= 0) {

341  
cuºít_ˇ∑côy
;

343 
Sh¨edBuf„r
* 
	gsb
 = Sh¨edBuf„r::
Æloc
(
√w_ˇ∑côy
 * 
mIãmSize
);

344 i‡(
	gsb
) {

345 * 
	g¨øy
 = 
sb
->
d©a
();

346 
_do_c›y
(
¨øy
, 
mSt‹age
, 
size
());

347 
ªÀa£_°‹age
();

348 
	gmSt‹age
 = 
c⁄°_ˇ°
<*>(
¨øy
);

350  
	gNO_MEMORY
;

352  
	g√w_ˇ∑côy
;

355 
	gVe˘‹Im∂
::
ªÀa£_°‹age
()

357 i‡(
mSt‹age
) {

358 c⁄° 
Sh¨edBuf„r
* 
sb
 = Sh¨edBuf„r::
buf„rFromD©a
(
mSt‹age
);

359 i‡(
	gsb
->
ªÀa£
(
Sh¨edBuf„r
::
eKìpSt‹age
) == 1) {

360 
_do_de°roy
(
mSt‹age
, 
mCou¡
);

361 
	gSh¨edBuf„r
::
dóŒoc
(
sb
);

366 * 
	gVe˘‹Im∂
::
_grow
(
size_t
 
whîe
, size_à
amou¡
)

376 c⁄° 
size_t
 
	g√w_size
 = 
mCou¡
 + 
amou¡
;

377 i‡(
ˇ∑côy
(Ë< 
	g√w_size
) {

378 c⁄° 
size_t
 
	g√w_ˇ∑côy
 = 
max
(
kMöVe˘‹C≠acôy
, ((
√w_size
*3)+1)/2);

380 i‡((
	gmSt‹age
) &&

381 (
	gmCou¡
==
whîe
) &&

382 (
mFœgs
 & 
HAS_TRIVIAL_COPY
) &&

383 (
mFœgs
 & 
HAS_TRIVIAL_DTOR
))

385 c⁄° 
Sh¨edBuf„r
* 
cur_sb
 = Sh¨edBuf„r::
buf„rFromD©a
(
mSt‹age
);

386 
Sh¨edBuf„r
* 
	gsb
 = 
cur_sb
->
edôResize
(
√w_ˇ∑côy
 * 
mIãmSize
);

387 
	gmSt‹age
 = 
sb
->
d©a
();

389 
Sh¨edBuf„r
* 
	gsb
 = Sh¨edBuf„r::
Æloc
(
√w_ˇ∑côy
 * 
mIãmSize
);

390 i‡(
	gsb
) {

391 * 
	g¨øy
 = 
sb
->
d©a
();

392 i‡(
	gwhîe
 != 0) {

393 
_do_c›y
(
¨øy
, 
mSt‹age
, 
whîe
);

395 i‡(
	gwhîe
 !
mCou¡
) {

396 c⁄° * 
‰om
 = 
ªöãΩªt_ˇ°
<c⁄° 
uöt8_t
 *>(
mSt‹age
Ë+ 
whîe
*
mIãmSize
;

397 * 
	gde°
 = 
ªöãΩªt_ˇ°
<
uöt8_t
 *>(
¨øy
Ë+ (
whîe
+
amou¡
)*
mIãmSize
;

398 
_do_c›y
(
de°
, 
‰om
, 
mCou¡
-
whîe
);

400 
ªÀa£_°‹age
();

401 
	gmSt‹age
 = 
c⁄°_ˇ°
<*>(
¨øy
);

405 * 
	g¨øy
 = 
edôAºayIm∂
();

406 i‡(
	gwhîe
 !
mCou¡
) {

407 c⁄° * 
‰om
 = 
ªöãΩªt_ˇ°
<c⁄° 
uöt8_t
 *>(
¨øy
Ë+ 
whîe
*
mIãmSize
;

408 * 
	gto
 = 
ªöãΩªt_ˇ°
<
uöt8_t
 *>(
¨øy
Ë+ (
whîe
+
amou¡
)*
mIãmSize
;

409 
_do_move_f‹w¨d
(
to
, 
‰om
, 
mCou¡
 - 
whîe
);

412 
	gmCou¡
 = 
√w_size
;

413 * 
	g‰ì_•a˚
 = 
c⁄°_ˇ°
<*>(
ôemLoˇti⁄
(
whîe
));

414  
	g‰ì_•a˚
;

417 
	gVe˘‹Im∂
::
_shrök
(
size_t
 
whîe
, size_à
amou¡
)

419 i‡(!
	gmSt‹age
)

430 c⁄° 
size_t
 
	g√w_size
 = 
mCou¡
 - 
amou¡
;

431 i‡(
	g√w_size
*3 < 
ˇ∑côy
()) {

432 c⁄° 
size_t
 
	g√w_ˇ∑côy
 = 
max
(
kMöVe˘‹C≠acôy
, 
√w_size
*2);

434 i‡((
	gwhîe
 =
√w_size
) &&

435 (
mFœgs
 & 
HAS_TRIVIAL_COPY
) &&

436 (
mFœgs
 & 
HAS_TRIVIAL_DTOR
))

438 c⁄° 
Sh¨edBuf„r
* 
cur_sb
 = Sh¨edBuf„r::
buf„rFromD©a
(
mSt‹age
);

439 
Sh¨edBuf„r
* 
	gsb
 = 
cur_sb
->
edôResize
(
√w_ˇ∑côy
 * 
mIãmSize
);

440 
	gmSt‹age
 = 
sb
->
d©a
();

442 
Sh¨edBuf„r
* 
	gsb
 = Sh¨edBuf„r::
Æloc
(
√w_ˇ∑côy
 * 
mIãmSize
);

443 i‡(
	gsb
) {

444 * 
	g¨øy
 = 
sb
->
d©a
();

445 i‡(
	gwhîe
 != 0) {

446 
_do_c›y
(
¨øy
, 
mSt‹age
, 
whîe
);

448 i‡(
	gwhîe
 !
√w_size
) {

449 c⁄° * 
‰om
 = 
ªöãΩªt_ˇ°
<c⁄° 
uöt8_t
 *>(
mSt‹age
Ë+ (
whîe
+
amou¡
)*
mIãmSize
;

450 * 
	gde°
 = 
ªöãΩªt_ˇ°
<
uöt8_t
 *>(
¨øy
Ë+ 
whîe
*
mIãmSize
;

451 
_do_c›y
(
de°
, 
‰om
, 
√w_size
 - 
whîe
);

453 
ªÀa£_°‹age
();

454 
	gmSt‹age
 = 
c⁄°_ˇ°
<*>(
¨øy
);

458 * 
	g¨øy
 = 
edôAºayIm∂
();

459 * 
	gto
 = 
ªöãΩªt_ˇ°
<
uöt8_t
 *>(
¨øy
Ë+ 
whîe
*
mIãmSize
;

460 
_do_de°roy
(
to
, 
amou¡
);

461 i‡(
	gwhîe
 !
√w_size
) {

462 c⁄° * 
‰om
 = 
ªöãΩªt_ˇ°
<
uöt8_t
 *>(
¨øy
Ë+ (
whîe
+
amou¡
)*
mIãmSize
;

463 
_do_move_backw¨d
(
to
, 
‰om
, 
√w_size
 - 
whîe
);

466 
	gmCou¡
 = 
√w_size
;

469 
size_t
 
	gVe˘‹Im∂
::
ôemSize
() const {

470  
mIãmSize
;

473 
	gVe˘‹Im∂
::
_do_c⁄°ru˘
(* 
°‹age
, 
size_t
 
num
) const

475 i‡(!(
	gmFœgs
 & 
	gHAS_TRIVIAL_CTOR
)) {

476 
do_c⁄°ru˘
(
°‹age
, 
num
);

480 
	gVe˘‹Im∂
::
_do_de°roy
(* 
°‹age
, 
size_t
 
num
) const

482 i‡(!(
	gmFœgs
 & 
	gHAS_TRIVIAL_DTOR
)) {

483 
do_de°roy
(
°‹age
, 
num
);

487 
	gVe˘‹Im∂
::
_do_c›y
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const

489 i‡(!(
	gmFœgs
 & 
	gHAS_TRIVIAL_COPY
)) {

490 
do_c›y
(
de°
, 
‰om
, 
num
);

492 
mem˝y
(
de°
, 
‰om
, 
num
*
ôemSize
());

496 
	gVe˘‹Im∂
::
_do_•œt
(* 
de°
, c⁄° * 
ôem
, 
size_t
 
num
) const {

497 
do_•œt
(
de°
, 
ôem
, 
num
);

500 
	gVe˘‹Im∂
::
_do_move_f‹w¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const {

501 
do_move_f‹w¨d
(
de°
, 
‰om
, 
num
);

504 
	gVe˘‹Im∂
::
_do_move_backw¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const {

505 
do_move_backw¨d
(
de°
, 
‰om
, 
num
);

508 
	gVe˘‹Im∂
::
ª£rvedVe˘‹Im∂1
() { }

509 
Ve˘‹Im∂
::
ª£rvedVe˘‹Im∂2
() { }

510 
Ve˘‹Im∂
::
ª£rvedVe˘‹Im∂3
() { }

511 
Ve˘‹Im∂
::
ª£rvedVe˘‹Im∂4
() { }

512 
Ve˘‹Im∂
::
ª£rvedVe˘‹Im∂5
() { }

513 
Ve˘‹Im∂
::
ª£rvedVe˘‹Im∂6
() { }

514 
Ve˘‹Im∂
::
ª£rvedVe˘‹Im∂7
() { }

515 
Ve˘‹Im∂
::
ª£rvedVe˘‹Im∂8
() { }

519 
S‹ãdVe˘‹Im∂
::S‹ãdVe˘‹Im∂(
size_t
 
ôemSize
, 
uöt32_t
 
Êags
)

520 : 
Ve˘‹Im∂
(
ôemSize
, 
Êags
)

524 
	gS‹ãdVe˘‹Im∂
::
S‹ãdVe˘‹Im∂
(c⁄° 
Ve˘‹Im∂
& 
rhs
)

525 : 
Ve˘‹Im∂
(
rhs
)

529 
S‹ãdVe˘‹Im∂
::~SortedVectorImpl()

533 
S‹ãdVe˘‹Im∂
& S‹ãdVe˘‹Im∂::
›î©‹
 = (c⁄° S‹ãdVe˘‹Im∂& 
rhs
)

535  
°©ic_ˇ°
<
S‹ãdVe˘‹Im∂
&>–
Ve˘‹Im∂
::
›î©‹
 = (°©ic_ˇ°<c⁄° Ve˘‹Im∂&>(
rhs
)) );

538 
ssize_t
 
	gS‹ãdVe˘‹Im∂
::
ödexOf
(c⁄° * 
ôem
) const

540  
_ödexOrdîOf
(
ôem
);

543 
size_t
 
	gS‹ãdVe˘‹Im∂
::
‹dîOf
(c⁄° * 
ôem
) const

545 
size_t
 
o
;

546 
_ödexOrdîOf
(
ôem
, &
o
);

547  
	go
;

550 
ssize_t
 
	gS‹ãdVe˘‹Im∂
::
_ödexOrdîOf
(c⁄° * 
ôem
, 
size_t
* 
‹dî
) const

553 
ssize_t
 
	gîr
 = 
NAME_NOT_FOUND
;

554 
ssize_t
 
	gl
 = 0;

555 
ssize_t
 
	gh
 = 
size
()-1;

556 
ssize_t
 
	gmid
;

557 c⁄° * 
	ga
 = 
¨øyIm∂
();

558 c⁄° 
size_t
 
	gs
 = 
ôemSize
();

559 
	gl
 <
h
) {

560 
mid
 = 
l
 + (
h
 -Ü)/2;

561 c⁄° * c⁄° 
	gcuº
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
a
Ë+ (
mid
*
s
);

562 c⁄° 
	gc
 = 
do_com∑ª
(
cuº
, 
ôem
);

563 i‡(
	gc
 == 0) {

564 
îr
 = 
l
 = 
mid
;

566 } i‡(
	gc
 < 0) {

567 
	gl
 = 
mid
 + 1;

569 
	gh
 = 
mid
 - 1;

572 i‡(
	g‹dî
Ë*‹dî = 
l
;

573  
	gîr
;

576 
ssize_t
 
	gS‹ãdVe˘‹Im∂
::
add
(c⁄° * 
ôem
)

578 
size_t
 
‹dî
;

579 
ssize_t
 
	gödex
 = 
_ödexOrdîOf
(
ôem
, &
‹dî
);

580 i‡(
	gödex
 < 0) {

581 
	gödex
 = 
Ve˘‹Im∂
::
ö£πAt
(
ôem
, 
‹dî
, 1);

583 
	gödex
 = 
Ve˘‹Im∂
::
ª∂a˚At
(
ôem
, 
ödex
);

585  
	gödex
;

588 
ssize_t
 
	gS‹ãdVe˘‹Im∂
::
mîge
(c⁄° 
Ve˘‹Im∂
& 
ve˘‹
)

591 i‡(!
ve˘‹
.
isEm±y
()) {

592 c⁄° * 
buf„r
 = 
ve˘‹
.
¨øyIm∂
();

593 c⁄° 
size_t
 
	gis
 = 
ôemSize
();

594 
size_t
 
	gs
 = 
ve˘‹
.
size
();

595 
size_t
 
	gi
=0 ; i<
	gs
 ; i++) {

596 
ssize_t
 
	gîr
 = 
add
–
ªöãΩªt_ˇ°
<c⁄° *>(
buf„r
Ë+ 
i
*
is
 );

597 i‡(
	gîr
<0) {

598  
	gîr
;

602  
	gNO_ERROR
;

605 
ssize_t
 
	gS‹ãdVe˘‹Im∂
::
mîge
(c⁄° 
S‹ãdVe˘‹Im∂
& 
ve˘‹
)

608 
ssize_t
 
îr
 = 
NO_ERROR
;

609 i‡(!
	gve˘‹
.
isEm±y
()) {

611 i‡(
do_com∑ª
(
ve˘‹
.
ôemLoˇti⁄
(ve˘‹.
size
()-1), 
¨øyIm∂
()) <= 0) {

612 
îr
 = 
Ve˘‹Im∂
::
ö£πVe˘‹At
(
°©ic_ˇ°
<c⁄° Ve˘‹Im∂&>(
ve˘‹
), 0);

613 } i‡(
do_com∑ª
(
ve˘‹
.
¨øyIm∂
(), 
ôemLoˇti⁄
(
size
()-1)) >= 0) {

614 
îr
 = 
Ve˘‹Im∂
::
≠≥ndVe˘‹
(
°©ic_ˇ°
<c⁄° Ve˘‹Im∂&>(
ve˘‹
));

617 
	gîr
 = 
mîge
(
°©ic_ˇ°
<c⁄° 
Ve˘‹Im∂
&>(
ve˘‹
));

620  
	gîr
;

623 
ssize_t
 
	gS‹ãdVe˘‹Im∂
::
ªmove
(c⁄° * 
ôem
)

625 
ssize_t
 
i
 = 
ödexOf
(
ôem
);

626 i‡(
	gi
>=0) {

627 
Ve˘‹Im∂
::
ªmoveIãmsAt
(
i
, 1);

629  
	gi
;

632 
	gS‹ãdVe˘‹Im∂
::
ª£rvedS‹ãdVe˘‹Im∂1
() { };

633 
	gS‹ãdVe˘‹Im∂
::
ª£rvedS‹ãdVe˘‹Im∂2
() { };

634 
	gS‹ãdVe˘‹Im∂
::
ª£rvedS‹ãdVe˘‹Im∂3
() { };

635 
	gS‹ãdVe˘‹Im∂
::
ª£rvedS‹ãdVe˘‹Im∂4
() { };

636 
	gS‹ãdVe˘‹Im∂
::
ª£rvedS‹ãdVe˘‹Im∂5
() { };

637 
	gS‹ãdVe˘‹Im∂
::
ª£rvedS‹ãdVe˘‹Im∂6
() { };

638 
	gS‹ãdVe˘‹Im∂
::
ª£rvedS‹ãdVe˘‹Im∂7
() { };

639 
	gS‹ãdVe˘‹Im∂
::
ª£rvedS‹ãdVe˘‹Im∂8
() { };

	@src/utils/VectorImpl.h

17 #i‚de‡
ANDROID_VECTOR_IMPL_H


18 
	#ANDROID_VECTOR_IMPL_H


	)

20 
	~<as£π.h
>

21 
	~<°döt.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<utûs/Eº‹s.h
>

29 
«me•a˚
 
	g™droid
 {

40 ˛as†
	cVe˘‹Im∂


42 
	gpublic
:

44 
HAS_TRIVIAL_CTOR
 = 0x00000001,

45 
	gHAS_TRIVIAL_DTOR
 = 0x00000002,

46 
	gHAS_TRIVIAL_COPY
 = 0x00000004,

49 
Ve˘‹Im∂
(
size_t
 
ôemSize
, 
uöt32_t
 
Êags
);

50 
Ve˘‹Im∂
(c⁄° Ve˘‹Im∂& 
rhs
);

51 
	gvútuÆ
 ~
Ve˘‹Im∂
();

54 
föish_ve˘‹
();

56 
	gVe˘‹Im∂
& 
	g›î©‹
 = (c⁄° 
Ve˘‹Im∂
& 
rhs
);

59 
ölöe
 c⁄° * 
¨øyIm∂
(Ëc⁄° {  
	gmSt‹age
; }

60 * 
edôAºayIm∂
();

63 
ölöe
 
size_t
 
size
(Ëc⁄° {  
	gmCou¡
; }

64 
ölöe
 
boﬁ
 
isEm±y
(Ëc⁄° {  
	gmCou¡
 == 0; }

65 
size_t
 
ˇ∑côy
() const;

66 
ssize_t
 
£tC≠acôy
(
size_t
 
size
);

69 
ssize_t
 
ö£πVe˘‹At
(c⁄° 
Ve˘‹Im∂
& 
ve˘‹
, 
size_t
 
ödex
);

70 
ssize_t
 
≠≥ndVe˘‹
(c⁄° 
Ve˘‹Im∂
& 
ve˘‹
);

71 
ssize_t
 
ö£πAºayAt
(c⁄° * 
¨øy
, 
size_t
 
ödex
, size_à
Àngth
);

72 
ssize_t
 
≠≥ndAºay
(c⁄° * 
¨øy
, 
size_t
 
Àngth
);

75 
ssize_t
 
ö£πAt
(
size_t
 
whîe
, size_à
numIãms
 = 1);

76 
ssize_t
 
ö£πAt
(c⁄° * 
ôem
, 
size_t
 
whîe
, size_à
numIãms
 = 1);

77 
p›
();

78 
push
();

79 
push
(c⁄° * 
ôem
);

80 
ssize_t
 
add
();

81 
ssize_t
 
add
(c⁄° * 
ôem
);

82 
ssize_t
 
ª∂a˚At
(
size_t
 
ödex
);

83 
ssize_t
 
ª∂a˚At
(c⁄° * 
ôem
, 
size_t
 
ödex
);

86 
ssize_t
 
ªmoveIãmsAt
(
size_t
 
ödex
, size_à
cou¡
 = 1);

87 
˛ór
();

89 c⁄° * 
ôemLoˇti⁄
(
size_t
 
ödex
) const;

90 * 
edôIãmLoˇti⁄
(
size_t
 
ödex
);

92 (*
	gcom∑r_t
)(c⁄° * 
	tlhs
, c⁄° * 
	trhs
);

93 (*
	gcom∑r_r_t
)(c⁄° * 
	tlhs
, c⁄° * 
	trhs
, * 
	t°©e
);

94 
°©us_t
 
s‹t
(
com∑r_t
 
cmp
);

95 
°©us_t
 
s‹t
(
com∑r_r_t
 
cmp
, * 
°©e
);

97 
	g¥Ÿe˘ed
:

98 
size_t
 
ôemSize
() const;

99 
ªÀa£_°‹age
();

101 
vútuÆ
 
do_c⁄°ru˘
(* 
°‹age
, 
size_t
 
num
) const = 0;

102 
vútuÆ
 
do_de°roy
(* 
°‹age
, 
size_t
 
num
) const = 0;

103 
vútuÆ
 
do_c›y
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const = 0;

104 
vútuÆ
 
do_•œt
(* 
de°
, c⁄° * 
ôem
, 
size_t
 
num
) const = 0;

105 
vútuÆ
 
do_move_f‹w¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const = 0;

106 
vútuÆ
 
do_move_backw¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const = 0;

109 
vútuÆ
 
ª£rvedVe˘‹Im∂1
();

110 
vútuÆ
 
ª£rvedVe˘‹Im∂2
();

111 
vútuÆ
 
ª£rvedVe˘‹Im∂3
();

112 
vútuÆ
 
ª£rvedVe˘‹Im∂4
();

113 
vútuÆ
 
ª£rvedVe˘‹Im∂5
();

114 
vútuÆ
 
ª£rvedVe˘‹Im∂6
();

115 
vútuÆ
 
ª£rvedVe˘‹Im∂7
();

116 
vútuÆ
 
ª£rvedVe˘‹Im∂8
();

118 
	g¥iv©e
:

119 * 
_grow
(
size_t
 
whîe
, size_à
amou¡
);

120 
_shrök
(
size_t
 
whîe
, size_à
amou¡
);

122 
ölöe
 
_do_c⁄°ru˘
(* 
°‹age
, 
size_t
 
num
) const;

123 
ölöe
 
_do_de°roy
(* 
°‹age
, 
size_t
 
num
) const;

124 
ölöe
 
_do_c›y
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const;

125 
ölöe
 
_do_•œt
(* 
de°
, c⁄° * 
ôem
, 
size_t
 
num
) const;

126 
ölöe
 
_do_move_f‹w¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const;

127 
ölöe
 
_do_move_backw¨d
(* 
de°
, c⁄° * 
‰om
, 
size_t
 
num
) const;

131 * 
	gmSt‹age
;

132 
size_t
 
	gmCou¡
;

134 c⁄° 
uöt32_t
 
	gmFœgs
;

135 c⁄° 
size_t
 
	gmIãmSize
;

140 ˛as†
	cS‹ãdVe˘‹Im∂
 : 
public
 
Ve˘‹Im∂


142 
public
:

143 
S‹ãdVe˘‹Im∂
(
size_t
 
ôemSize
, 
uöt32_t
 
Êags
);

144 
S‹ãdVe˘‹Im∂
(c⁄° 
Ve˘‹Im∂
& 
rhs
);

145 
	gvútuÆ
 ~
S‹ãdVe˘‹Im∂
();

147 
	gS‹ãdVe˘‹Im∂
& 
	g›î©‹
 = (c⁄° 
S‹ãdVe˘‹Im∂
& 
rhs
);

150 
ssize_t
 
ödexOf
(c⁄° * 
ôem
) const;

153 
size_t
 
‹dîOf
(c⁄° * 
ôem
) const;

156 
ssize_t
 
add
(c⁄° * 
ôem
);

159 
ssize_t
 
mîge
(c⁄° 
Ve˘‹Im∂
& 
ve˘‹
);

160 
ssize_t
 
mîge
(c⁄° 
S‹ãdVe˘‹Im∂
& 
ve˘‹
);

163 
ssize_t
 
ªmove
(c⁄° * 
ôem
);

165 
	g¥Ÿe˘ed
:

166 
vútuÆ
 
do_com∑ª
(c⁄° * 
lhs
, c⁄° * 
rhs
) const = 0;

169 
vútuÆ
 
ª£rvedS‹ãdVe˘‹Im∂1
();

170 
vútuÆ
 
ª£rvedS‹ãdVe˘‹Im∂2
();

171 
vútuÆ
 
ª£rvedS‹ãdVe˘‹Im∂3
();

172 
vútuÆ
 
ª£rvedS‹ãdVe˘‹Im∂4
();

173 
vútuÆ
 
ª£rvedS‹ãdVe˘‹Im∂5
();

174 
vútuÆ
 
ª£rvedS‹ãdVe˘‹Im∂6
();

175 
vútuÆ
 
ª£rvedS‹ãdVe˘‹Im∂7
();

176 
vútuÆ
 
ª£rvedS‹ãdVe˘‹Im∂8
();

178 
	g¥iv©e
:

179 
ssize_t
 
_ödexOrdîOf
(c⁄° * 
ôem
, 
size_t
* 
‹dî
 = 0) const;

183 
ssize_t
 
add
();

184 
p›
();

185 
push
();

186 
push
(c⁄° * 
ôem
);

187 
ssize_t
 
ö£πVe˘‹At
(c⁄° 
Ve˘‹Im∂
& 
ve˘‹
, 
size_t
 
ödex
);

188 
ssize_t
 
≠≥ndVe˘‹
(c⁄° 
Ve˘‹Im∂
& 
ve˘‹
);

189 
ssize_t
 
ö£πAºayAt
(c⁄° * 
¨øy
, 
size_t
 
ödex
, size_à
Àngth
);

190 
ssize_t
 
≠≥ndAºay
(c⁄° * 
¨øy
, 
size_t
 
Àngth
);

191 
ssize_t
 
ö£πAt
(
size_t
 
whîe
, size_à
numIãms
 = 1);

192 
ssize_t
 
ö£πAt
(c⁄° * 
ôem
, 
size_t
 
whîe
, size_à
numIãms
 = 1);

193 
ssize_t
 
ª∂a˚At
(
size_t
 
ödex
);

194 
ssize_t
 
ª∂a˚At
(c⁄° * 
ôem
, 
size_t
 
ödex
);

	@src/utils/WorkQueue.h

17 #i‚de‡
_LIBS_UTILS_WORK_QUEUE_H


18 
	#_LIBS_UTILS_WORK_QUEUE_H


	)

20 
	~<utûs/Eº‹s.h
>

21 
	~<utûs/Ve˘‹.h
>

22 
	~<utûs/thªads.h
>

24 
«me•a˚
 
	g™droid
 {

34 ˛as†
	cW‹kQueue
 {

35 
	gpublic
:

36 ˛as†
	cW‹kUnô
 {

37 
public
:

38 
W‹kUnô
() { }

39 
vútuÆ
 ~
W‹kUnô
() { }

46 
vútuÆ
 
boﬁ
 
run
() = 0;

50 
W‹kQueue
(
size_t
 
maxThªads
, 
boﬁ
 
ˇnCÆlJava
 = 
åue
);

55 ~
W‹kQueue
();

70 
°©us_t
 
scheduÀ
(
W‹kUnô
* 
w‹kUnô
, 
size_t
 
backlog
 = 2);

80 
°©us_t
 
ˇn˚l
();

86 
°©us_t
 
föish
();

88 
	g¥iv©e
:

89 ˛as†
	cW‹kThªad
 : 
public
 
Thªad
 {

90 
public
:

91 
W‹kThªad
(
W‹kQueue
* 
w‹kQueue
, 
boﬁ
 
ˇnCÆlJava
);

92 
	gvútuÆ
 ~
W‹kThªad
();

94 
	g¥iv©e
:

95 
vútuÆ
 
boﬁ
 
thªadLo›
();

97 
W‹kQueue
* c⁄° 
	gmW‹kQueue
;

100 
°©us_t
 
ˇn˚lLocked
();

101 
boﬁ
 
thªadLo›
();

103 c⁄° 
size_t
 
	gmMaxThªads
;

104 c⁄° 
boﬁ
 
	gmC™CÆlJava
;

106 
Muãx
 
	gmLock
;

107 
C⁄dôi⁄
 
	gmW‹kCh™gedC⁄dôi⁄
;

108 
C⁄dôi⁄
 
	gmW‹kDequeuedC⁄dôi⁄
;

110 
boﬁ
 
	gmC™˚Àd
;

111 
boﬁ
 
	gmFöished
;

112 
size_t
 
	gmIdÀThªads
;

113 
	gVe˘‹
<
	g•
<
	gW‹kThªad
> > 
	gmW‹kThªads
;

114 
	gVe˘‹
<
	gW‹kUnô
*> 
	gmW‹kUnôs
;

	@src/utils/ZipFileCRO.h

20 #i‚de‡
__LIBS_ZIPFILECRO_H


21 
	#__LIBS_ZIPFILECRO_H


	)

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<uni°d.h
>

27 
	~<utûs/Com∑t.h
>

29 #ifde‡
__˝lu•lus


36 * 
	tZùFûeCRO
;

42 * 
	tZùE¡ryCRO
;

44 
ZùFûeCRO
 
ZùFûeXRO_›í
(c⁄° * 
∑th
);

46 
ZùFûeCRO_de°roy
(
ZùFûeCRO
 
zù
);

48 
ZùE¡ryCRO
 
ZùFûeCRO_födE¡ryByName
(
ZùFûeCRO
 
zù
,

49 c⁄° * 
fûeName
);

51 
boﬁ
 
ZùFûeCRO_gëE¡ryInfo
(
ZùFûeCRO
 
zù
, 
ZùE¡ryCRO
 
íåy
,

52 * 
pMëhod
, 
size_t
* 
pUncompLí
,

53 
size_t
* 
pCompLí
, 
off64_t
* 
pOff£t
, * 
pModWhí
, * 
pCrc32
);

55 
boﬁ
 
ZùFûeCRO_uncom¥essE¡ry
(
ZùFûeCRO
 
zù
, 
ZùE¡ryCRO
 
íåy
, 
fd
);

57 #ifde‡
__˝lu•lus


	@src/utils/ZipFileRO.h

30 #i‚de‡
__LIBS_ZIPFILERO_H


31 
	#__LIBS_ZIPFILERO_H


	)

33 
	~<utûs/Com∑t.h
>

34 
	~<utûs/Eº‹s.h
>

35 
	~<utûs/FûeM≠.h
>

36 
	~<utûs/thªads.h
>

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<uni°d.h
>

41 
	~<time.h
>

43 
«me•a˚
 
	g™droid
 {

49 * 
	tZùE¡ryRO
;

71 ˛as†
	cZùFûeRO
 {

72 
	gpublic
:

73 
ZùFûeRO
()

74 : 
mFd
(-1), 
mFûeName
(
NULL
), 
mFûeLígth
(-1),

75 
mDúe˘‹yM≠
(
NULL
),

76 
mNumE¡rõs
(-1), 
mDúe˘‹yOff£t
(-1),

77 
mHashTabÀSize
(-1), 
mHashTabÀ
(
NULL
)

80 ~
ZùFûeRO
();

85 
°©us_t
 
›í
(c⁄° * 
zùFûeName
);

93 
ZùE¡ryRO
 
födE¡ryByName
(c⁄° * 
fûeName
) const;

98 
gëNumE¡rõs
() const {

99  
	gmNumE¡rõs
;

114 
ZùE¡ryRO
 
födE¡ryByIndex
(
idx
) const;

121 
gëE¡ryFûeName
(
ZùE¡ryRO
 
íåy
, * 
buf„r
, 
bufLí
) const;

132 
boﬁ
 
gëE¡ryInfo
(
ZùE¡ryRO
 
íåy
, * 
pMëhod
, 
size_t
* 
pUncompLí
,

133 
size_t
* 
pCompLí
, 
off64_t
* 
pOff£t
, * 
pModWhí
, * 
pCrc32
) const;

141 
FûeM≠
* 
¸óãE¡ryFûeM≠
(
ZùE¡ryRO
 
íåy
) const;

152 
boﬁ
 
uncom¥essE¡ry
(
ZùE¡ryRO
 
íåy
, * 
buf„r
) const;

157 
boﬁ
 
uncom¥essE¡ry
(
ZùE¡ryRO
 
íåy
, 
fd
) const;

161 
	gkCom¥essSt‹ed
 = 0,

162 
	gkCom¥essDeÊ©ed
 = 8,

168 
boﬁ
 
öÊ©eBuf„r
(* 
outBuf
, c⁄° * 
öBuf
,

169 
size_t
 
uncompLí
, size_à
compLí
);

174 
boﬁ
 
öÊ©eBuf„r
(
fd
, c⁄° * 
öBuf
,

175 
size_t
 
uncompLí
, size_à
compLí
);

180 
ölöe
 
zùTimeToTime•ec
(
whí
, 
tm
* 
time•ec
) {

181 c⁄° 
	gd©e
 = 
whí
 >> 16;

182 
	gtime•ec
->
	gtm_yór
 = ((
d©e
 >> 9) & 0x7F) + 80;

183 
	gtime•ec
->
	gtm_m⁄
 = (
d©e
 >> 5) & 0x0F;

184 
	gtime•ec
->
	gtm_mday
 = 
d©e
 & 0x1F;

186 
	gtime•ec
->
	gtm_hour
 = (
whí
 >> 11) & 0x1F;

187 
	gtime•ec
->
	gtm_mö
 = (
whí
 >> 5) & 0x3F;

188 
	gtime•ec
->
	gtm_£c
 = (
whí
 & 0x1F) << 1;

195 
ölöe
 
gë2LE
(c⁄° * 
buf
) {

196  
	gbuf
[0] | (buf[1] << 8);

198 
ölöe
 
gë4LE
(c⁄° * 
buf
) {

199  
	gbuf
[0] | (buf[1] << 8) | (buf[2] << 16) | (buf[3] << 24);

202 
	g¥iv©e
:

204 
ZùFûeRO
(c⁄° ZùFûeRO& 
§c
);

205 
	gZùFûeRO
& 
	g›î©‹
=(c⁄° 
ZùFûeRO
& 
§c
);

208 
boﬁ
 
m≠CíåÆDúe˘‹y
();

211 
boﬁ
 
∑r£ZùArchive
();

214 
addToHash
(c⁄° * 
°r
, 
°rLí
, 
hash
);

217 
compuãHash
(c⁄° * 
°r
, 
Àn
);

220 
íåyToIndex
(c⁄° 
ZùE¡ryRO
 
íåy
) const;

225 
	sHashE¡ry
 {

226 c⁄° * 
	g«me
;

227 
	g«meLí
;

229 } 
	tHashE¡ry
;

232 
	gmFd
;

235 
muèbÀ
 
Muãx
 
	gmFdLock
;

238 * 
	gmFûeName
;

241 
size_t
 
	gmFûeLígth
;

244 
FûeM≠
* 
	gmDúe˘‹yM≠
;

247 
	gmNumE¡rõs
;

250 
off64_t
 
	gmDúe˘‹yOff£t
;

256 
	gmHashTabÀSize
;

257 
HashE¡ry
* 
	gmHashTabÀ
;

	@src/utils/ZipUtils.h

20 #i‚de‡
__LIBS_ZIPUTILS_H


21 
	#__LIBS_ZIPUTILS_H


	)

23 
	~<°dio.h
>

25 
«me•a˚
 
	g™droid
 {

30 ˛as†
	cZùUtûs
 {

31 
	gpublic
:

36 
boﬁ
 
öÊ©eToBuf„r
(
fd
, * 
buf
, 
uncom¥es£dLí
,

37 
com¥es£dLí
);

38 
boﬁ
 
öÊ©eToBuf„r
(
FILE
* 
Â
, * 
buf
, 
uncom¥es£dLí
,

39 
com¥es£dLí
);

57 
boﬁ
 
examöeGzù
(
FILE
* 
Â
, * 
pCom¥essi⁄Mëhod
,

58 * 
pUncom¥es£dLí
, * 
pCom¥es£dLí
, * 
pCRC32
);

60 
	g¥iv©e
:

61 
ZùUtûs
() {}

62 ~
ZùUtûs
() {}

	@src/utils/ashmem.h

10 #i‚de‡
_UTILS_ASHMEM_H


11 
	#_UTILS_ASHMEM_H


	)

13 
	~<löux/limôs.h
>

14 
	~<löux/io˘l.h
>

16 
	#ASHMEM_NAME_LEN
 256

	)

18 
	#ASHMEM_NAME_DEF
 "dev/ashmem"

	)

21 
	#ASHMEM_NOT_REAPED
 0

	)

22 
	#ASHMEM_WAS_REAPED
 1

	)

25 
	#ASHMEM_NOW_UNPINNED
 0

	)

26 
	#ASHMEM_NOW_PINNED
 1

	)

28 
	#__ASHMEMIOC
 0x77

	)

30 
	#ASHMEM_SET_NAME
 
	`_IOW
(
__ASHMEMIOC
, 1, [
ASHMEM_NAME_LEN
])

	)

31 
	#ASHMEM_GET_NAME
 
	`_IOR
(
__ASHMEMIOC
, 2, [
ASHMEM_NAME_LEN
])

	)

32 
	#ASHMEM_SET_SIZE
 
	`_IOW
(
__ASHMEMIOC
, 3, 
size_t
)

	)

33 
	#ASHMEM_GET_SIZE
 
	`_IO
(
__ASHMEMIOC
, 4)

	)

34 
	#ASHMEM_SET_PROT_MASK
 
	`_IOW
(
__ASHMEMIOC
, 5, )

	)

35 
	#ASHMEM_GET_PROT_MASK
 
	`_IO
(
__ASHMEMIOC
, 6)

	)

36 
	#ASHMEM_PIN
 
	`_IO
(
__ASHMEMIOC
, 7)

	)

37 
	#ASHMEM_UNPIN
 
	`_IO
(
__ASHMEMIOC
, 8)

	)

38 
	#ASHMEM_ISPINNED
 
	`_IO
(
__ASHMEMIOC
, 9)

	)

39 
	#ASHMEM_PURGE_ALL_CACHES
 
	`_IO
(
__ASHMEMIOC
, 10)

	)

	@src/utils/misc.h

20 #i‚de‡
_LIBS_UTILS_MISC_H


21 
	#_LIBS_UTILS_MISC_H


	)

23 
	~<sys/time.h
>

24 
	~<utûs/Endün.h
>

27 #i‚de‡
NELEM


28 
	#NELEM
(
x
Ë((Ë((xË/ ((x)[0])))

	)

31 
«me•a˚
 
	g™droid
 {

37 
	eFûeTy≥
 {

38 
	gkFûeTy≥Unknown
 = 0,

39 
	gkFûeTy≥N⁄exi°ít
,

40 
	gkFûeTy≥Reguœr
,

41 
	gkFûeTy≥Dúe˘‹y
,

42 
	gkFûeTy≥Ch¨Dev
,

43 
	gkFûeTy≥BlockDev
,

44 
	gkFûeTy≥Fifo
,

45 
	gkFûeTy≥Symlök
,

46 
	gkFûeTy≥Sockë
,

47 } 
	tFûeTy≥
;

49 
FûeTy≥
 
gëFûeTy≥
(c⁄° * 
fûeName
);

51 
time_t
 
gëFûeModD©e
(c⁄° * 
fûeName
);

53 (*
	gsy•r›_ch™ge_ˇŒback
)();

54 
add_sy•r›_ch™ge_ˇŒback
(
sy•r›_ch™ge_ˇŒback
 
cb
, 
¥i‹ôy
);

55 
ªp‹t_sy•r›_ch™ge
();

	@src/utils/threads.h

17 #i‚de‡
_LIBS_UTILS_THREADS_H


18 
	#_LIBS_UTILS_THREADS_H


	)

28 
	~<utûs/AndroidThªads.h
>

30 #ifde‡
__˝lu•lus


31 
	~<utûs/C⁄dôi⁄.h
>

32 
	~<utûs/Eº‹s.h
>

33 
	~<utûs/Muãx.h
>

34 
	~<utûs/RWLock.h
>

35 
	~<utûs/Thªad.h
>

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/dirent.h

24 #i‚def 
_DIRENT_H


25 
	#_DIRENT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifde‡
__USE_XOPEN


34 #i‚de‡
__öo_t_deföed


35 #i‚de‡
__USE_FILE_OFFSET64


36 
__öo_t
 
	töo_t
;

38 
__öo64_t
 
	töo_t
;

40 
	#__öo_t_deföed


	)

42 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


43 
__öo64_t
 
	töo64_t
;

44 
	#__öo64_t_deföed


	)

63 
	~<bôs/dúít.h
>

65 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


66 
	#d_öo
 
d_fûío


	)

83 #ifde‡
_DIRENT_HAVE_D_NAMLEN


84 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

85 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

87 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

88 #ifde‡
_DIRENT_HAVE_D_RECLEN


89 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

91 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

92 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

97 #ifde‡
__USE_BSD


101 
	mDT_UNKNOWN
 = 0,

102 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

103 
	mDT_FIFO
 = 1,

104 
	#DT_FIFO
 
DT_FIFO


	)

105 
	mDT_CHR
 = 2,

106 
	#DT_CHR
 
DT_CHR


	)

107 
	mDT_DIR
 = 4,

108 
	#DT_DIR
 
DT_DIR


	)

109 
	mDT_BLK
 = 6,

110 
	#DT_BLK
 
DT_BLK


	)

111 
	mDT_REG
 = 8,

112 
	#DT_REG
 
DT_REG


	)

113 
	mDT_LNK
 = 10,

114 
	#DT_LNK
 
DT_LNK


	)

115 
	mDT_SOCK
 = 12,

116 
	#DT_SOCK
 
DT_SOCK


	)

117 
	mDT_WHT
 = 14

118 
	#DT_WHT
 
DT_WHT


	)

122 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

123 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

129 
__dú°ªam
 
	tDIR
;

136 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

138 #ifde‡
__USE_XOPEN2K8


143 
DIR
 *
	`fd›ídú
 (
__fd
);

151 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

163 #i‚de‡
__USE_FILE_OFFSET64


164 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__REDIRECT


167 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

168 
	`__n⁄nuŒ
 ((1));

170 
	#ªaddú
 
ªaddú64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


184 #i‚de‡
__USE_FILE_OFFSET64


185 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

186 
dúít
 *
__ª°ri˘
 
__íåy
,

187 
dúít
 **
__ª°ri˘
 
__ªsu…
)

188 
	`__n⁄nuŒ
 ((1, 2, 3));

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
ªaddú_r
,

192 (
DIR
 *
__ª°ri˘
 
__dúp
,

193 
dúít
 *
__ª°ri˘
 
__íåy
,

194 
dúít
 **
__ª°ri˘
 
__ªsu…
),

195 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

197 
	#ªaddú_r
 
ªaddú64_r


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

203 
dúít64
 *
__ª°ri˘
 
__íåy
,

204 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

205 
	`__n⁄nuŒ
 ((1, 2, 3));

210 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


213 
	~<bôs/ty≥s.h
>

216 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


225 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


228 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

231 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


232 #i‚de‡
MAXNAMLEN


234 
	~<bôs/posix1_lim.h
>

237 #ifde‡
NAME_MAX


238 
	#MAXNAMLEN
 
NAME_MAX


	)

240 
	#MAXNAMLEN
 255

	)

245 
	#__√ed_size_t


	)

246 
	~<°ddef.h
>

255 #i‚de‡
__USE_FILE_OFFSET64


256 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

257 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

258 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

259 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

260 
__c⁄°
 
dúít
 **))

261 
	`__n⁄nuŒ
 ((1, 2));

263 #ifde‡
__REDIRECT


264 
	`__REDIRECT
 (
sˇndú
,

265 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

266 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

267 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

268 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

269 
__c⁄°
 
dúít
 **)),

270 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

272 
	#sˇndú
 
sˇndú64


	)

276 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


279 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

280 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

281 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

282 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

283 
__c⁄°
 
dúít64
 **))

284 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__USE_GNU


293 #i‚de‡
__USE_FILE_OFFSET64


294 
	`sˇndú©
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

295 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

296 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

297 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

298 
__c⁄°
 
dúít
 **))

299 
	`__n⁄nuŒ
 ((2, 3));

301 #ifde‡
__REDIRECT


302 
	`__REDIRECT
 (
sˇndú©
,

303 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

304 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

305 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

306 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

307 
__c⁄°
 
dúít
 **)),

308 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

310 
	#sˇndú©
 
sˇndú©64


	)

316 
	`sˇndú©64
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

317 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

318 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

319 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

320 
__c⁄°
 
dúít64
 **))

321 
	`__n⁄nuŒ
 ((2, 3));

325 #i‚de‡
__USE_FILE_OFFSET64


326 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

327 
__c⁄°
 
dúít
 **
__e2
)

328 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

330 #ifde‡
__REDIRECT


331 
	`__REDIRECT_NTH
 (
Æphas‹t
,

332 (
__c⁄°
 
dúít
 **
__e1
,

333 
__c⁄°
 
dúít
 **
__e2
),

334 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 
	#Æphas‹t
 
Æphas‹t64


	)

340 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


341 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

342 
__c⁄°
 
dúít64
 **
__e2
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


353 #i‚de‡
__USE_FILE_OFFSET64


354 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

355 
size_t
 
__nbyãs
,

356 
__off_t
 *
__ª°ri˘
 
__ba£p
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

359 #ifde‡
__REDIRECT


360 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

361 (
__fd
, *
__ª°ri˘
 
__buf
,

362 
size_t
 
__nbyãs
,

363 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

364 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

366 
	#gëdúíåõs
 
gëdúíåõs64


	)

370 #ifde‡
__USE_LARGEFILE64


371 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

372 
size_t
 
__nbyãs
,

373 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

374 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

378 #ifde‡
__USE_GNU


380 #i‚de‡
__USE_FILE_OFFSET64


381 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

382 
__c⁄°
 
dúít
 **
__e2
)

383 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__REDIRECT


386 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

387 (
__c⁄°
 
dúít
 **
__e1
,

388 
__c⁄°
 
dúít
 **
__e2
),

389 
vîsi⁄s‹t64
)

390 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

392 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

396 #ifde‡
__USE_LARGEFILE64


397 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

398 
__c⁄°
 
dúít64
 **
__e2
)

399 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

403 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 #ifde‡
__GNUC__


400 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

401 (
__exãnsi⁄__
 \

402 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

403 
__a
->
s6_addr32
[0] == 0 \

404 && 
__a
->
s6_addr32
[1] == 0 \

405 && 
__a
->
s6_addr32
[2] == 0 \

406 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

408 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

409 (
__exãnsi⁄__
 \

410 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

411 
__a
->
s6_addr32
[0] == 0 \

412 && 
__a
->
s6_addr32
[1] == 0 \

413 && 
__a
->
s6_addr32
[2] == 0 \

414 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

416 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

417 (
__exãnsi⁄__
 \

418 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

419 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

421 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

422 (
__exãnsi⁄__
 \

423 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

424 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

426 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

427 (
__exãnsi⁄__
 \

428 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

429 
__a
->
s6_addr32
[0] == 0 \

430 && 
__a
->
s6_addr32
[1] == 0 \

431 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

433 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

434 (
__exãnsi⁄__
 \

435 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

436 
__a
->
s6_addr32
[0] == 0 \

437 && 
__a
->
s6_addr32
[1] == 0 \

438 && 
__a
->
s6_addr32
[2] == 0 \

439 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

441 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

442 (
__exãnsi⁄__
 \

443 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

444 
__c⁄°
 
ö6_addr
 *
__b
 = (__c⁄° ö6_add∏*Ë(
b
); \

445 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

446 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

447 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

448 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

450 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

451 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

452 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

453 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

454 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

456 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

457 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

458 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

459 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

460 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

462 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

463 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

464 =
	`ht⁄l
 (0x„800000))

	)

466 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

467 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

468 =
	`ht⁄l
 (0x„c00000))

	)

470 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

471 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

472 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

473 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

475 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

476 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

477 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

478 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

479 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

481 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

482 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

483 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

484 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

485 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

488 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

490 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


492 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

495 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

496 
__THROW
;

500 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

501 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

502 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

504 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

505 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

506 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

508 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

509 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

510 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

512 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

513 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

514 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

516 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

517 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

518 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

521 #ifde‡
__USE_GNU


523 
	sö6_pktöfo


525 
ö6_addr
 
ùi6_addr
;

526 
ùi6_ifödex
;

530 
	sù6_mtuöfo


532 
sockaddr_ö6
 
ù6m_addr
;

533 
uöt32_t
 
ù6m_mtu
;

538 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

539 
__THROW
 
__©åibuã_dïªˇãd__
;

540 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

541 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

542 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

543 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

544 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

545 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

546 
__mu…x
, 
__∂usy
)

547 
__THROW
 
__©åibuã_dïªˇãd__
;

548 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

549 
uöt8_t
 **
__çåp
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

552 
uöt8_t
 **
__çåp
, 
__ty≥
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

557 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

558 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

559 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

560 **
__d©abuÂ
Ë
__THROW
;

561 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

562 
__THROW
;

563 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

564 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

565 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

566 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

567 **
__d©abuÂ
Ë
__THROW
;

568 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

569 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

570 **
__d©abuÂ
Ë
__THROW
;

571 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

572 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

577 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

578 
__£gmíts
Ë
__THROW
;

579 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

580 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

581 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

582 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

583 
__THROW
;

589 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

590 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

591 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

592 
__THROW
;

595 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

596 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

597 
uöt32_t
 
__num§c
,

598 
__c⁄°
 
ö_addr
 *
__¶i°
)

599 
__THROW
;

603 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

604 
__c⁄°
 
sockaddr
 *
__group
,

605 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

606 
uöt32_t
 *
__num§c
,

607 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

610 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

611 
__c⁄°
 
sockaddr
 *
__group
,

612 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

613 
uöt32_t
 
__num§c
,

614 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

617 
__END_DECLS


	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/epoll.h

19 #i‚def 
_SYS_EPOLL_H


20 
	#_SYS_EPOLL_H
 1

	)

22 
	~<°döt.h
>

23 
	~<sys/ty≥s.h
>

26 
	~<bôs/sig£t.h
>

28 #i‚de‡
__sig£t_t_deföed


29 
	#__sig£t_t_deföed


	)

30 
__sig£t_t
 
	tsig£t_t
;

37 
	mEPOLL_CLOEXEC
 = 02000000,

38 
	#EPOLL_CLOEXEC
 
EPOLL_CLOEXEC


	)

39 
	mEPOLL_NONBLOCK
 = 04000

40 
	#EPOLL_NONBLOCK
 
EPOLL_NONBLOCK


	)

44 
	eEPOLL_EVENTS


46 
	mEPOLLIN
 = 0x001,

47 
	#EPOLLIN
 
EPOLLIN


	)

48 
	mEPOLLPRI
 = 0x002,

49 
	#EPOLLPRI
 
EPOLLPRI


	)

50 
	mEPOLLOUT
 = 0x004,

51 
	#EPOLLOUT
 
EPOLLOUT


	)

52 
	mEPOLLRDNORM
 = 0x040,

53 
	#EPOLLRDNORM
 
EPOLLRDNORM


	)

54 
	mEPOLLRDBAND
 = 0x080,

55 
	#EPOLLRDBAND
 
EPOLLRDBAND


	)

56 
	mEPOLLWRNORM
 = 0x100,

57 
	#EPOLLWRNORM
 
EPOLLWRNORM


	)

58 
	mEPOLLWRBAND
 = 0x200,

59 
	#EPOLLWRBAND
 
EPOLLWRBAND


	)

60 
	mEPOLLMSG
 = 0x400,

61 
	#EPOLLMSG
 
EPOLLMSG


	)

62 
	mEPOLLERR
 = 0x008,

63 
	#EPOLLERR
 
EPOLLERR


	)

64 
	mEPOLLHUP
 = 0x010,

65 
	#EPOLLHUP
 
EPOLLHUP


	)

66 
	mEPOLLRDHUP
 = 0x2000,

67 
	#EPOLLRDHUP
 
EPOLLRDHUP


	)

68 
	mEPOLLONESHOT
 = 1u << 30,

69 
	#EPOLLONESHOT
 
EPOLLONESHOT


	)

70 
	mEPOLLET
 = 1u << 31

71 
	#EPOLLET
 
EPOLLET


	)

76 
	#EPOLL_CTL_ADD
 1

	)

77 
	#EPOLL_CTL_DEL
 2

	)

78 
	#EPOLL_CTL_MOD
 3

	)

81 
	uïﬁl_d©a


83 *
	m±r
;

84 
	mfd
;

85 
uöt32_t
 
	mu32
;

86 
uöt64_t
 
	mu64
;

87 } 
	tïﬁl_d©a_t
;

89 
	sïﬁl_evít


91 
uöt32_t
 
	mevíts
;

92 
ïﬁl_d©a_t
 
	md©a
;

93 } 
__©åibuã__
 ((
__∑cked__
));

96 
__BEGIN_DECLS


102 
	$ïﬁl_¸óã
 (
__size
Ë
__THROW
;

106 
	$ïﬁl_¸óã1
 (
__Êags
Ë
__THROW
;

115 
	$ïﬁl_˘l
 (
__ïfd
, 
__›
, 
__fd
,

116 
ïﬁl_evít
 *
__evít
Ë
__THROW
;

129 
	`ïﬁl_waô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

130 
__maxevíts
, 
__timeout
);

138 
	`ïﬁl_pwaô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

139 
__maxevíts
, 
__timeout
,

140 
__c⁄°
 
__sig£t_t
 *
__ss
);

142 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/statfs.h

20 #i‚def 
_SYS_STATFS_H


21 
	#_SYS_STATFS_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/°©fs.h
>

28 
	g__BEGIN_DECLS


31 #i‚de‡
__USE_FILE_OFFSET64


32 
	$°©fs
 (
__c⁄°
 *
__fûe
, 
°©fs
 *
__buf
)

33 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

35 #ifde‡
__REDIRECT_NTH


36 
	`__REDIRECT_NTH
 (
°©fs
,

37 (
__c⁄°
 *
__fûe
, 
°©fs
 *
__buf
),

38 
°©fs64
Ë
	`__n⁄nuŒ
 ((1, 2));

40 
	#°©fs
 
°©fs64


	)

43 #ifde‡
__USE_LARGEFILE64


44 
	$°©fs64
 (
__c⁄°
 *
__fûe
, 
°©fs64
 *
__buf
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$f°©fs
 (
__fûdes
, 
°©fs
 *
__buf
)

52 
__THROW
 
	`__n⁄nuŒ
 ((2));

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
f°©fs
, (
__fûdes
, 
°©fs
 *
__buf
),

56 
f°©fs64
Ë
	`__n⁄nuŒ
 ((2));

58 
	#f°©fs
 
f°©fs64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$f°©fs64
 (
__fûdes
, 
°©fs64
 *
__buf
)

63 
__THROW
 
	`__n⁄nuŒ
 ((2));

66 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 
	~<bôs/w‹dsize.h
>

27 #ifde‡
__USE_GNU


28 
	~<bôs/uio.h
>

34 
	#O_ACCMODE
 0003

	)

35 
	#O_RDONLY
 00

	)

36 
	#O_WRONLY
 01

	)

37 
	#O_RDWR
 02

	)

38 
	#O_CREAT
 0100

	)

39 
	#O_EXCL
 0200

	)

40 
	#O_NOCTTY
 0400

	)

41 
	#O_TRUNC
 01000

	)

42 
	#O_APPEND
 02000

	)

43 
	#O_NONBLOCK
 04000

	)

44 
	#O_NDELAY
 
O_NONBLOCK


	)

45 
	#O_SYNC
 04010000

	)

46 
	#O_FSYNC
 
O_SYNC


	)

47 
	#O_ASYNC
 020000

	)

49 #ifde‡
__USE_XOPEN2K8


50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_CLOEXEC
 02000000

	)

54 #ifde‡
__USE_GNU


55 
	#O_DIRECT
 040000

	)

56 
	#O_NOATIME
 01000000

	)

57 
	#O_PATH
 010000000

	)

63 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


64 
	#O_DSYNC
 010000

	)

65 
	#O_RSYNC
 
O_SYNC


	)

68 #ifde‡
__USE_LARGEFILE64


69 #i‡
__WORDSIZE
 == 64

70 
	#O_LARGEFILE
 0

	)

72 
	#O_LARGEFILE
 0100000

	)

77 
	#F_DUPFD
 0

	)

78 
	#F_GETFD
 1

	)

79 
	#F_SETFD
 2

	)

80 
	#F_GETFL
 3

	)

81 
	#F_SETFL
 4

	)

82 #i‡
__WORDSIZE
 == 64

83 
	#F_GETLK
 5

	)

84 
	#F_SETLK
 6

	)

85 
	#F_SETLKW
 7

	)

87 
	#F_GETLK64
 5

	)

88 
	#F_SETLK64
 6

	)

89 
	#F_SETLKW64
 7

	)

91 #i‚de‡
__USE_FILE_OFFSET64


92 
	#F_GETLK
 5

	)

93 
	#F_SETLK
 6

	)

94 
	#F_SETLKW
 7

	)

96 
	#F_GETLK
 
F_GETLK64


	)

97 
	#F_SETLK
 
F_SETLK64


	)

98 
	#F_SETLKW
 
F_SETLKW64


	)

100 
	#F_GETLK64
 12

	)

101 
	#F_SETLK64
 13

	)

102 
	#F_SETLKW64
 14

	)

105 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


106 
	#F_SETOWN
 8

	)

107 
	#F_GETOWN
 9

	)

110 #ifde‡
__USE_GNU


111 
	#F_SETSIG
 10

	)

112 
	#F_GETSIG
 11

	)

113 
	#F_SETOWN_EX
 15

	)

114 
	#F_GETOWN_EX
 16

	)

117 #ifde‡
__USE_GNU


118 
	#F_SETLEASE
 1024

	)

119 
	#F_GETLEASE
 1025

	)

120 
	#F_NOTIFY
 1026

	)

121 
	#F_SETPIPE_SZ
 1031

	)

122 
	#F_GETPIPE_SZ
 1032

	)

124 #ifde‡
__USE_XOPEN2K8


125 
	#F_DUPFD_CLOEXEC
 1030

	)

130 
	#FD_CLOEXEC
 1

	)

133 
	#F_RDLCK
 0

	)

134 
	#F_WRLCK
 1

	)

135 
	#F_UNLCK
 2

	)

138 
	#F_EXLCK
 4

	)

139 
	#F_SHLCK
 8

	)

141 #ifde‡
__USE_BSD


143 
	#LOCK_SH
 1

	)

144 
	#LOCK_EX
 2

	)

145 
	#LOCK_NB
 4

	)

147 
	#LOCK_UN
 8

	)

150 #ifde‡
__USE_GNU


151 
	#LOCK_MAND
 32

	)

152 
	#LOCK_READ
 64

	)

153 
	#LOCK_WRITE
 128

	)

154 
	#LOCK_RW
 192

	)

157 #ifde‡
__USE_GNU


159 
	#DN_ACCESS
 0x00000001

	)

160 
	#DN_MODIFY
 0x00000002

	)

161 
	#DN_CREATE
 0x00000004

	)

162 
	#DN_DELETE
 0x00000008

	)

163 
	#DN_RENAME
 0x00000010

	)

164 
	#DN_ATTRIB
 0x00000020

	)

165 
	#DN_MULTISHOT
 0x80000000

	)

168 
	sÊock


170 
	ml_ty≥
;

171 
	ml_whí˚
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
__off_t
 
	ml_°¨t
;

174 
__off_t
 
	ml_Àn
;

176 
__off64_t
 
	ml_°¨t
;

177 
__off64_t
 
	ml_Àn
;

179 
__pid_t
 
	ml_pid
;

182 #ifde‡
__USE_LARGEFILE64


183 
	sÊock64


185 
	ml_ty≥
;

186 
	ml_whí˚
;

187 
__off64_t
 
	ml_°¨t
;

188 
__off64_t
 
	ml_Àn
;

189 
__pid_t
 
	ml_pid
;

193 #ifde‡
__USE_GNU


195 
	e__pid_ty≥


197 
	mF_OWNER_TID
 = 0,

198 
	mF_OWNER_PID
,

199 
	mF_OWNER_PGRP
,

200 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


204 
	sf_ow√r_ex


206 
__pid_ty≥
 
	mty≥
;

207 
__pid_t
 
	mpid
;

213 #ifdef 
__USE_BSD


214 
	#FAPPEND
 
O_APPEND


	)

215 
	#FFSYNC
 
O_FSYNC


	)

216 
	#FASYNC
 
O_ASYNC


	)

217 
	#FNONBLOCK
 
O_NONBLOCK


	)

218 
	#FNDELAY
 
O_NDELAY


	)

222 #ifde‡
__USE_XOPEN2K


223 
	#POSIX_FADV_NORMAL
 0

	)

224 
	#POSIX_FADV_RANDOM
 1

	)

225 
	#POSIX_FADV_SEQUENTIAL
 2

	)

226 
	#POSIX_FADV_WILLNEED
 3

	)

227 
	#POSIX_FADV_DONTNEED
 4

	)

228 
	#POSIX_FADV_NOREUSE
 5

	)

232 #ifde‡
__USE_GNU


234 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

237 
	#SYNC_FILE_RANGE_WRITE
 2

	)

240 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

245 
	#SPLICE_F_MOVE
 1

	)

246 
	#SPLICE_F_NONBLOCK
 2

	)

249 
	#SPLICE_F_MORE
 4

	)

250 
	#SPLICE_F_GIFT
 8

	)

254 
	sfûe_h™dÀ


256 
	mh™dÀ_byãs
;

257 
	mh™dÀ_ty≥
;

259 
	mf_h™dÀ
[0];

263 
	#MAX_HANDLE_SZ
 128

	)

267 #ifde‡
__USE_ATFILE


268 
	#AT_FDCWD
 -100

	)

271 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

272 
	#AT_REMOVEDIR
 0x200

	)

274 
	#AT_SYMLINK_FOLLOW
 0x400

	)

275 
	#AT_NO_AUTOMOUNT
 0x800

	)

277 
	#AT_EMPTY_PATH
 0x1000

	)

278 
	#AT_EACCESS
 0x200

	)

282 
	g__BEGIN_DECLS


284 #ifde‡
__USE_GNU


287 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

288 
__THROW
;

295 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

296 
__Êags
);

303 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

304 
size_t
 
__cou¡
, 
__Êags
);

310 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

311 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

312 
__Êags
);

318 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

319 
__Êags
);

325 #i‚de‡
__USE_FILE_OFFSET64


326 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

330 
__off64_t
 
__Àn
),

331 
ÁŒoˇã64
);

333 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

336 #ifde‡
__USE_LARGEFILE64


337 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

338 
__off64_t
 
__Àn
);

343 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

344 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

345 
__Êags
Ë
__THROW
;

351 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

352 
__Êags
);

356 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

67 
	#IP_MTU
 14

	)

68 
	#IP_FREEBIND
 15

	)

69 
	#IP_IPSEC_POLICY
 16

	)

70 
	#IP_XFRM_POLICY
 17

	)

71 
	#IP_PASSSEC
 18

	)

72 
	#IP_TRANSPARENT
 19

	)

73 
	#IP_MULTICAST_ALL
 49

	)

76 
	#IP_ORIGDSTADDR
 20

	)

77 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

79 
	#IP_MINTTL
 21

	)

83 
	#IP_PMTUDISC_DONT
 0

	)

84 
	#IP_PMTUDISC_WANT
 1

	)

85 
	#IP_PMTUDISC_DO
 2

	)

86 
	#IP_PMTUDISC_PROBE
 3

	)

89 
	#SOL_IP
 0

	)

91 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

92 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

93 
	#IP_MAX_MEMBERSHIPS
 20

	)

95 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


99 
	sù_›ts


101 
ö_addr
 
	mù_d°
;

102 
	mù_›ts
[40];

106 
	sù_mªqn


108 
ö_addr
 
	mimr_mu…üddr
;

109 
ö_addr
 
	mimr_addªss
;

110 
	mimr_ifödex
;

114 
	sö_pktöfo


116 
	mùi_ifödex
;

117 
ö_addr
 
	mùi_•ec_d°
;

118 
ö_addr
 
	mùi_addr
;

125 
	#IPV6_ADDRFORM
 1

	)

126 
	#IPV6_2292PKTINFO
 2

	)

127 
	#IPV6_2292HOPOPTS
 3

	)

128 
	#IPV6_2292DSTOPTS
 4

	)

129 
	#IPV6_2292RTHDR
 5

	)

130 
	#IPV6_2292PKTOPTIONS
 6

	)

131 
	#IPV6_CHECKSUM
 7

	)

132 
	#IPV6_2292HOPLIMIT
 8

	)

134 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

136 
	#IPV6_NEXTHOP
 9

	)

137 
	#IPV6_AUTHHDR
 10

	)

138 
	#IPV6_UNICAST_HOPS
 16

	)

139 
	#IPV6_MULTICAST_IF
 17

	)

140 
	#IPV6_MULTICAST_HOPS
 18

	)

141 
	#IPV6_MULTICAST_LOOP
 19

	)

142 
	#IPV6_JOIN_GROUP
 20

	)

143 
	#IPV6_LEAVE_GROUP
 21

	)

144 
	#IPV6_ROUTER_ALERT
 22

	)

145 
	#IPV6_MTU_DISCOVER
 23

	)

146 
	#IPV6_MTU
 24

	)

147 
	#IPV6_RECVERR
 25

	)

148 
	#IPV6_V6ONLY
 26

	)

149 
	#IPV6_JOIN_ANYCAST
 27

	)

150 
	#IPV6_LEAVE_ANYCAST
 28

	)

151 
	#IPV6_IPSEC_POLICY
 34

	)

152 
	#IPV6_XFRM_POLICY
 35

	)

154 
	#IPV6_RECVPKTINFO
 49

	)

155 
	#IPV6_PKTINFO
 50

	)

156 
	#IPV6_RECVHOPLIMIT
 51

	)

157 
	#IPV6_HOPLIMIT
 52

	)

158 
	#IPV6_RECVHOPOPTS
 53

	)

159 
	#IPV6_HOPOPTS
 54

	)

160 
	#IPV6_RTHDRDSTOPTS
 55

	)

161 
	#IPV6_RECVRTHDR
 56

	)

162 
	#IPV6_RTHDR
 57

	)

163 
	#IPV6_RECVDSTOPTS
 58

	)

164 
	#IPV6_DSTOPTS
 59

	)

166 
	#IPV6_RECVTCLASS
 66

	)

167 
	#IPV6_TCLASS
 67

	)

170 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

171 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

172 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

173 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

176 
	#IPV6_PMTUDISC_DONT
 0

	)

177 
	#IPV6_PMTUDISC_WANT
 1

	)

178 
	#IPV6_PMTUDISC_DO
 2

	)

179 
	#IPV6_PMTUDISC_PROBE
 3

	)

182 
	#SOL_IPV6
 41

	)

183 
	#SOL_ICMPV6
 58

	)

186 
	#IPV6_RTHDR_LOOSE
 0

	)

187 
	#IPV6_RTHDR_STRICT
 1

	)

189 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statfs.h

19 #i‚de‡
_SYS_STATFS_H


23 
	~<bôs/ty≥s.h
>

25 
	s°©fs


27 
__SWORD_TYPE
 
	mf_ty≥
;

28 
__SWORD_TYPE
 
	mf_bsize
;

29 #i‚de‡
__USE_FILE_OFFSET64


30 
__fsblk˙t_t
 
	mf_blocks
;

31 
__fsblk˙t_t
 
	mf_b‰ì
;

32 
__fsblk˙t_t
 
	mf_bavaû
;

33 
__fsfû˙t_t
 
	mf_fûes
;

34 
__fsfû˙t_t
 
	mf_f‰ì
;

36 
__fsblk˙t64_t
 
	mf_blocks
;

37 
__fsblk˙t64_t
 
	mf_b‰ì
;

38 
__fsblk˙t64_t
 
	mf_bavaû
;

39 
__fsfû˙t64_t
 
	mf_fûes
;

40 
__fsfû˙t64_t
 
	mf_f‰ì
;

42 
__fsid_t
 
	mf_fsid
;

43 
__SWORD_TYPE
 
	mf_«mñí
;

44 
__SWORD_TYPE
 
	mf_‰size
;

45 
__SWORD_TYPE
 
	mf_Êags
;

46 
__SWORD_TYPE
 
	mf_•¨e
[4];

49 #ifde‡
__USE_LARGEFILE64


50 
	s°©fs64


52 
__SWORD_TYPE
 
	mf_ty≥
;

53 
__SWORD_TYPE
 
	mf_bsize
;

54 
__fsblk˙t64_t
 
	mf_blocks
;

55 
__fsblk˙t64_t
 
	mf_b‰ì
;

56 
__fsblk˙t64_t
 
	mf_bavaû
;

57 
__fsfû˙t64_t
 
	mf_fûes
;

58 
__fsfû˙t64_t
 
	mf_f‰ì
;

59 
__fsid_t
 
	mf_fsid
;

60 
__SWORD_TYPE
 
	mf_«mñí
;

61 
__SWORD_TYPE
 
	mf_‰size
;

62 
__SWORD_TYPE
 
	mf_Êags
;

63 
__SWORD_TYPE
 
	mf_•¨e
[4];

68 
	#_STATFS_F_NAMELEN


	)

69 
	#_STATFS_F_FRSIZE


	)

70 
	#_STATFS_F_FLAGS


	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


60 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

61 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

62 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

69 #ifde‡
__USE_XOPEN


70 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

71 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

73 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

74 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

76 } 
	tfd_£t
;

79 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

81 #ifde‡
__USE_MISC


83 
__fd_mask
 
	tfd_mask
;

86 
	#NFDBITS
 
__NFDBITS


	)

91 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

92 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

93 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

94 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

97 
__BEGIN_DECLS


107 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

108 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

109 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

110 
timevÆ
 *
__ª°ri˘
 
__timeout
);

112 #ifde‡
__USE_XOPEN2K


119 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

120 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

121 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

122 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

123 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


129 
	~<bôs/£À˘2.h
>

132 
	g__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__BEGIN_DECLS


32 
__exãnsi⁄__


33 
	$gnu_dev_maj‹
 (
__dev
)

34 
__THROW
 
__©åibuã_c⁄°__
;

35 
__exãnsi⁄__


36 
	$gnu_dev_mö‹
 (
__dev
)

37 
__THROW
 
__©åibuã_c⁄°__
;

38 
__exãnsi⁄__


39 
	$gnu_dev_makedev
 (
__maj‹
,

40 
__mö‹
)

41 
__THROW
 
__©åibuã_c⁄°__
;

43 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

47  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

53  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

54 
	}
}

56 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

57 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

59  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

60 | (((Ë(
__mö‹
 & ~0xff)) << 12)

61 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

62 
	}
}

64 
	g__END_DECLS


67 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

68 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

69 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 1024

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
) \

60 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

61 
	#__FD_CLR
(
d
, 
£t
) \

62 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

63 
	#__FD_ISSET
(
d
, 
£t
) \

64 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

20 #i‚de‡
_SYS_SELECT_H


25 
__fdñt_chk
 (
__d
);

26 
	$__fdñt_w¨n
 (
__d
)

27 
	`__w¨«âr
 ("bit outside of fd_set selected");

28 #unde‡
__FD_ELT


29 
	#__FD_ELT
(
d
) \

30 
__exãnsi⁄__
 \

31 ({ 
__d
 = (
d
); \

32 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

33 ? (
__d
 >
__FD_SETSIZE
 \

34 ? 
	`__fdñt_w¨n
 (
__d
Ë: (__d / 
__NFDBITS
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_CAIF
 37

	)

113 
	#PF_ALG
 38

	)

114 
	#PF_NFC
 39

	)

115 
	#PF_MAX
 40

	)

118 
	#AF_UNSPEC
 
PF_UNSPEC


	)

119 
	#AF_LOCAL
 
PF_LOCAL


	)

120 
	#AF_UNIX
 
PF_UNIX


	)

121 
	#AF_FILE
 
PF_FILE


	)

122 
	#AF_INET
 
PF_INET


	)

123 
	#AF_AX25
 
PF_AX25


	)

124 
	#AF_IPX
 
PF_IPX


	)

125 
	#AF_APPLETALK
 
PF_APPLETALK


	)

126 
	#AF_NETROM
 
PF_NETROM


	)

127 
	#AF_BRIDGE
 
PF_BRIDGE


	)

128 
	#AF_ATMPVC
 
PF_ATMPVC


	)

129 
	#AF_X25
 
PF_X25


	)

130 
	#AF_INET6
 
PF_INET6


	)

131 
	#AF_ROSE
 
PF_ROSE


	)

132 
	#AF_DEC√t
 
PF_DEC√t


	)

133 
	#AF_NETBEUI
 
PF_NETBEUI


	)

134 
	#AF_SECURITY
 
PF_SECURITY


	)

135 
	#AF_KEY
 
PF_KEY


	)

136 
	#AF_NETLINK
 
PF_NETLINK


	)

137 
	#AF_ROUTE
 
PF_ROUTE


	)

138 
	#AF_PACKET
 
PF_PACKET


	)

139 
	#AF_ASH
 
PF_ASH


	)

140 
	#AF_ECONET
 
PF_ECONET


	)

141 
	#AF_ATMSVC
 
PF_ATMSVC


	)

142 
	#AF_RDS
 
PF_RDS


	)

143 
	#AF_SNA
 
PF_SNA


	)

144 
	#AF_IRDA
 
PF_IRDA


	)

145 
	#AF_PPPOX
 
PF_PPPOX


	)

146 
	#AF_WANPIPE
 
PF_WANPIPE


	)

147 
	#AF_LLC
 
PF_LLC


	)

148 
	#AF_CAN
 
PF_CAN


	)

149 
	#AF_TIPC
 
PF_TIPC


	)

150 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

151 
	#AF_IUCV
 
PF_IUCV


	)

152 
	#AF_RXRPC
 
PF_RXRPC


	)

153 
	#AF_ISDN
 
PF_ISDN


	)

154 
	#AF_PHONET
 
PF_PHONET


	)

155 
	#AF_IEEE802154
 
PF_IEEE802154


	)

156 
	#AF_CAIF
 
PF_CAIF


	)

157 
	#AF_ALG
 
PF_ALG


	)

158 
	#AF_NFC
 
PF_NFC


	)

159 
	#AF_MAX
 
PF_MAX


	)

165 
	#SOL_RAW
 255

	)

166 
	#SOL_DECNET
 261

	)

167 
	#SOL_X25
 262

	)

168 
	#SOL_PACKET
 263

	)

169 
	#SOL_ATM
 264

	)

170 
	#SOL_AAL
 265

	)

171 
	#SOL_IRDA
 266

	)

174 
	#SOMAXCONN
 128

	)

177 
	~<bôs/sockaddr.h
>

180 
	ssockaddr


182 
__SOCKADDR_COMMON
 (
ß_
);

183 
	mß_d©a
[14];

189 
	#__ss_Æig¡y≥
 

	)

190 
	#_SS_SIZE
 128

	)

191 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

193 
	ssockaddr_°‹age


195 
__SOCKADDR_COMMON
 (
ss_
);

196 
__ss_Æig¡y≥
 
	m__ss_Æign
;

197 
	m__ss_∑ddög
[
_SS_PADSIZE
];

204 
	mMSG_OOB
 = 0x01,

205 
	#MSG_OOB
 
MSG_OOB


	)

206 
	mMSG_PEEK
 = 0x02,

207 
	#MSG_PEEK
 
MSG_PEEK


	)

208 
	mMSG_DONTROUTE
 = 0x04,

209 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

210 #ifde‡
__USE_GNU


212 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

213 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

215 
	mMSG_CTRUNC
 = 0x08,

216 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

217 
	mMSG_PROXY
 = 0x10,

218 
	#MSG_PROXY
 
MSG_PROXY


	)

219 
	mMSG_TRUNC
 = 0x20,

220 
	#MSG_TRUNC
 
MSG_TRUNC


	)

221 
	mMSG_DONTWAIT
 = 0x40,

222 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

223 
	mMSG_EOR
 = 0x80,

224 
	#MSG_EOR
 
MSG_EOR


	)

225 
	mMSG_WAITALL
 = 0x100,

226 
	#MSG_WAITALL
 
MSG_WAITALL


	)

227 
	mMSG_FIN
 = 0x200,

228 
	#MSG_FIN
 
MSG_FIN


	)

229 
	mMSG_SYN
 = 0x400,

230 
	#MSG_SYN
 
MSG_SYN


	)

231 
	mMSG_CONFIRM
 = 0x800,

232 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

233 
	mMSG_RST
 = 0x1000,

234 
	#MSG_RST
 
MSG_RST


	)

235 
	mMSG_ERRQUEUE
 = 0x2000,

236 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

237 
	mMSG_NOSIGNAL
 = 0x4000,

238 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

239 
	mMSG_MORE
 = 0x8000,

240 
	#MSG_MORE
 
MSG_MORE


	)

241 
	mMSG_WAITFORONE
 = 0x10000,

242 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

244 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

247 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

253 
	smsghdr


255 *
	mmsg_«me
;

256 
sockÀn_t
 
	mmsg_«mñí
;

258 
iovec
 *
	mmsg_iov
;

259 
size_t
 
	mmsg_iovÀn
;

261 *
	mmsg_c⁄åﬁ
;

262 
size_t
 
	mmsg_c⁄åﬁÀn
;

267 
	mmsg_Êags
;

270 #ifde‡
__USE_GNU


272 
	smmsghdr


274 
msghdr
 
	mmsg_hdr
;

275 
	mmsg_Àn
;

280 
	scmsghdr


282 
size_t
 
	mcmsg_Àn
;

287 
	mcmsg_Àvñ
;

288 
	mcmsg_ty≥
;

289 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

290 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

295 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

296 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

298 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

300 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

301 
	#CMSG_FIRSTHDR
(
mhdr
) \

302 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

303 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

304 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

305 & (
size_t
Ë~( (size_tË- 1))

	)

306 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

307 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

308 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

310 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

311 
cmsghdr
 *
__cmsg
Ë
__THROW
;

312 #ifde‡
__USE_EXTERN_INLINES


313 #i‚de‡
_EXTERN_INLINE


314 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

316 
_EXTERN_INLINE
 
cmsghdr
 *

317 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

319 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

321  (
cmsghdr
 *) 0;

323 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

324 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

325 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


326 + 
__mhdr
->
msg_c⁄åﬁÀn
)

327 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

328 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

330  (
cmsghdr
 *) 0;

331  
__cmsg
;

332 
	}
}

339 
	mSCM_RIGHTS
 = 0x01

340 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

341 #ifde‡
__USE_GNU


342 , 
	mSCM_CREDENTIALS
 = 0x02

343 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

347 #ifde‡
__USE_GNU


349 
	su¸ed


351 
pid_t
 
	mpid
;

352 
uid_t
 
	muid
;

353 
gid_t
 
	mgid
;

358 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


359 #i‚de‡
FIOGETOWN


360 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

362 #i‚de‡
FIOSETOWN


363 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

365 #i‚de‡
SIOCATMARK


366 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

368 #i‚de‡
SIOCGPGRP


369 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

371 #i‚de‡
SIOCGSTAMP


372 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

374 #i‚de‡
SIOCGSTAMPNS


375 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

377 #i‚de‡
SIOCSPGRP


378 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

383 
	~<asm/sockë.h
>

385 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


386 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


387 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


388 #unde‡
FIOGETOWN


390 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


391 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


392 #unde‡
FIOSETOWN


394 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


395 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


396 #unde‡
SIOCATMARK


398 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


399 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


400 #unde‡
SIOCGPGRP


402 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


403 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


404 #unde‡
SIOCGSTAMP


406 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


407 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


408 #unde‡
SIOCGSTAMPNS


410 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


411 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


412 #unde‡
SIOCSPGRP


417 
	slögî


419 
	ml_⁄off
;

420 
	ml_lögî
;

424 
__BEGIN_DECLS


431 
ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

432 
__vÀn
, 
__Êags
,

433 
__c⁄°
 
time•ec
 *
__tmo
);

439 
£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

440 
__vÀn
, 
__Êags
);

442 
	g__END_DECLS


	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

52 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


53 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

55 
__BEGIN_DECLS


58 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

59 
__liov˙t
,

60 
__c⁄°
 
iovec
 *
__rvec
,

61 
__riov˙t
,

62 
__Êags
)

63 
__THROW
;

66 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

67 
__liov˙t
,

68 
__c⁄°
 
iovec
 *
__rvec
,

69 
__riov˙t
,

70 
__Êags
)

71 
__THROW
;

73 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


44 
	#__LEAF
 , 
__Àaf__


	)

45 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

47 
	#__LEAF


	)

48 
	#__LEAF_ATTR


	)

56 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

57 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

58 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

59 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

61 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

62 
	#__THROW
 
	`throw
 ()

	)

63 
	#__THROWNL
 
	`throw
 ()

	)

64 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

74 
	#__ölöe


	)

76 
	#__THROW


	)

77 
	#__THROWNL


	)

78 
	#__NTH
(
f˘
Ë
	)
fct

80 
	#__c⁄°
 c⁄°

	)

81 
	#__sig√d
 sig√d

	)

82 
	#__vﬁ©ûe
 vﬁ©ûe

	)

88 
	#__P
(
¨gs
Ë
	)
args

89 
	#__PMT
(
¨gs
Ë
	)
args

94 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

95 
	#__STRING
(
x
Ë#x

	)

98 
	#__±r_t
 *

	)

99 
	#__l⁄g_doubÀ_t
 

	)

103 #ifdef 
__˝lu•lus


104 
	#__BEGIN_DECLS
 "C" {

	)

105 
	#__END_DECLS
 }

	)

107 
	#__BEGIN_DECLS


	)

108 
	#__END_DECLS


	)

117 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


118 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

119 
	#__END_NAMESPACE_STD
 }

	)

120 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

121 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

122 
	#__END_NAMESPACE_C99
 }

	)

123 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

128 
	#__BEGIN_NAMESPACE_STD


	)

129 
	#__END_NAMESPACE_STD


	)

130 
	#__USING_NAMESPACE_STD
(
«me
)

	)

131 
	#__BEGIN_NAMESPACE_C99


	)

132 
	#__END_NAMESPACE_C99


	)

133 
	#__USING_NAMESPACE_C99
(
«me
)

	)

138 #i‚de‡
__BOUNDED_POINTERS__


139 
	#__bounded


	)

140 
	#__unbounded


	)

141 
	#__±rvÆue


	)

146 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

147 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

149 #i‡
__GNUC_PREREQ
 (4,3)

150 
	#__w¨nde˛
(
«me
, 
msg
) \

151 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

152 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

153 
	#__îr‹de˛
(
«me
, 
msg
) \

154 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

156 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 
	#__w¨«âr
(
msg
)

	)

158 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

162 #i‡
__GNUC_PREREQ
 (2,97)

164 
	#__Êex¨r
 []

	)

166 #ifde‡
__GNUC__


167 
	#__Êex¨r
 [0]

	)

169 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

170 
	#__Êex¨r
 []

	)

173 
	#__Êex¨r
 [1]

	)

189 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

191 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

192 #ifde‡
__˝lu•lus


193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

198 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

199 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

200 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

201 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

203 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

204 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

217 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

218 
	#__©åibuã__
(
xyz
Ë

	)

224 #i‡
__GNUC_PREREQ
 (2,96)

225 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

227 
	#__©åibuã_mÆloc__


	)

233 #i‡
__GNUC_PREREQ
 (2,96)

234 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

236 
	#__©åibuã_puª__


	)

240 #i‡
__GNUC_PREREQ
 (2,5)

241 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

243 
	#__©åibuã_c⁄°__


	)

249 #i‡
__GNUC_PREREQ
 (3,1)

250 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

251 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

253 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

254 
	#__©åibuã_noölöe__


	)

258 #i‡
__GNUC_PREREQ
 (3,2)

259 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

261 
	#__©åibuã_dïªˇãd__


	)

270 #i‡
__GNUC_PREREQ
 (2,8)

271 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

273 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

280 #i‡
__GNUC_PREREQ
 (2,97)

281 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

282 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

289 #i‡
__GNUC_PREREQ
 (3,3)

290 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

292 
	#__n⁄nuŒ
(
∑øms
)

	)

297 #i‡
__GNUC_PREREQ
 (3,4)

298 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

299 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

300 #i‡
__USE_FORTIFY_LEVEL
 > 0

301 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

304 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

306 #i‚de‡
__wur


307 
	#__wur


	)

311 #i‡
__GNUC_PREREQ
 (3,2)

312 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

320 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


321 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

322 #i‡
__GNUC_PREREQ
 (4,3)

323 
	#__exã∫_Æways_ölöe
 \

324 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

326 
	#__exã∫_Æways_ölöe
 \

327 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

330 
	#__exã∫_ölöe
 
__ölöe


	)

331 #i‡
__GNUC_PREREQ
 (4,3)

332 
	#__exã∫_Æways_ölöe
 \

333 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

335 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #i‡
__GNUC_PREREQ
 (4,3)

343 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

344 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

351 #i‡!
__GNUC_PREREQ
 (2,8)

352 
	#__exãnsi⁄__


	)

356 #i‡!
__GNUC_PREREQ
 (2,92)

357 
	#__ª°ri˘


	)

363 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


364 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

366 #ifde‡
__GNUC__


367 
	#__ª°ri˘_¨r


	)

369 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

370 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

373 
	#__ª°ri˘_¨r


	)

378 
	~<bôs/w‹dsize.h
>

380 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


381 
	#__LDBL_COMPAT
 1

	)

382 #ifde‡
__REDIRECT


383 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

384 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

385 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

386 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

387 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

388 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

389 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

390 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

391 
	#__LDBL_REDIR_DECL
(
«me
) \

392 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

394 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

395 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

396 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

399 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


400 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

401 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

402 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

403 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

404 
	#__LDBL_REDIR_DECL
(
«me
)

	)

405 #ifde‡
__REDIRECT


406 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

407 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

78 
	#FIONCLEX
 0x5450

	)

79 
	#FIOCLEX
 0x5451

	)

80 
	#FIOASYNC
 0x5452

	)

81 
	#TIOCSERCONFIG
 0x5453

	)

82 
	#TIOCSERGWILD
 0x5454

	)

83 
	#TIOCSERSWILD
 0x5455

	)

84 
	#TIOCGLCKTRMIOS
 0x5456

	)

85 
	#TIOCSLCKTRMIOS
 0x5457

	)

86 
	#TIOCSERGSTRUCT
 0x5458

	)

87 
	#TIOCSERGETLSR
 0x5459

	)

88 
	#TIOCSERGETMULTI
 0x545A

	)

89 
	#TIOCSERSETMULTI
 0x545B

	)

91 
	#TIOCMIWAIT
 0x545C

	)

92 
	#TIOCGICOUNT
 0x545D

	)

98 #i‚de‡
FIOQSIZE


99 
	#FIOQSIZE
 0x5460

	)

103 
	#TIOCPKT_DATA
 0

	)

104 
	#TIOCPKT_FLUSHREAD
 1

	)

105 
	#TIOCPKT_FLUSHWRITE
 2

	)

106 
	#TIOCPKT_STOP
 4

	)

107 
	#TIOCPKT_START
 8

	)

108 
	#TIOCPKT_NOSTOP
 16

	)

109 
	#TIOCPKT_DOSTOP
 32

	)

110 
	#TIOCPKT_IOCTL
 64

	)

112 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

68 
	#SO_WIFI_STATUS
 41

	)

69 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

70 
	#SO_PEEK_OFF
 42

	)

73 
	#SO_NOFCS
 43

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LIBM_BIG
 1

	)

34 
	#__OPTION_EGLIBC_LOCALES
 1

	)

35 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

36 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

37 
	#__OPTION_EGLIBC_NIS
 1

	)

38 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

39 
	#__OPTION_EGLIBC_RCMD
 1

	)

40 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

41 
	#__OPTION_EGLIBC_SPAWN
 1

	)

42 
	#__OPTION_EGLIBC_STREAMS
 1

	)

43 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

44 
	#__OPTION_EGLIBC_UTMP
 1

	)

45 
	#__OPTION_EGLIBC_UTMPX
 1

	)

46 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

47 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

48 
	#__OPTION_POSIX_REGEXP
 1

	)

49 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

50 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@
1
.
1
/usr/include
201
4842
src/Main.cpp
src/MtpDataPacket.cpp
src/MtpDataPacket.h
src/MtpDatabase.h
src/MtpDebug.cpp
src/MtpDebug.h
src/MtpDevice.cpp
src/MtpDevice.h
src/MtpDeviceInfo.cpp
src/MtpDeviceInfo.h
src/MtpEventPacket.cpp
src/MtpEventPacket.h
src/MtpObjectInfo.cpp
src/MtpObjectInfo.h
src/MtpPacket.cpp
src/MtpPacket.h
src/MtpProperty.cpp
src/MtpProperty.h
src/MtpRequestPacket.cpp
src/MtpRequestPacket.h
src/MtpResponsePacket.cpp
src/MtpResponsePacket.h
src/MtpServer.cpp
src/MtpServer.h
src/MtpStorage.cpp
src/MtpStorage.h
src/MtpStorageInfo.cpp
src/MtpStorageInfo.h
src/MtpStringBuffer.cpp
src/MtpStringBuffer.h
src/MtpTypes.h
src/MtpUtils.cpp
src/MtpUtils.h
src/linux/usb/f_mtp.h
src/mtp.h
src/utils/AndroidThreads.h
src/utils/Atomic.h
src/utils/BasicHashtable.h
src/utils/BitSet.h
src/utils/BlobCache.h
src/utils/BufferedTextOutput.h
src/utils/ByteOrder.h
src/utils/CallStack.h
src/utils/Compat.h
src/utils/Condition.h
src/utils/Debug.h
src/utils/Endian.h
src/utils/Errors.h
src/utils/FileMap.h
src/utils/Flattenable.h
src/utils/Functor.h
src/utils/GenerationCache.h
src/utils/KeyedVector.h
src/utils/LinearAllocator.h
src/utils/LinearTransform.h
src/utils/List.h
src/utils/Log.h
src/utils/Looper.h
src/utils/Mutex.h
src/utils/PropertyMap.h
src/utils/RWLock.h
src/utils/RefBase.h
src/utils/SharedBuffer.cpp
src/utils/SharedBuffer.h
src/utils/Singleton.h
src/utils/SortedVector.h
src/utils/StopWatch.h
src/utils/String16.h
src/utils/String8.cpp
src/utils/String8.h
src/utils/StringArray.h
src/utils/StrongPointer.h
src/utils/SystemClock.h
src/utils/TextOutput.h
src/utils/Thread.h
src/utils/ThreadDefs.h
src/utils/Timers.h
src/utils/Tokenizer.h
src/utils/Trace.h
src/utils/TypeHelpers.h
src/utils/Unicode.cpp
src/utils/Unicode.h
src/utils/UniquePtr.h
src/utils/Vector.h
src/utils/VectorImpl.cpp
src/utils/VectorImpl.h
src/utils/WorkQueue.h
src/utils/ZipFileCRO.h
src/utils/ZipFileRO.h
src/utils/ZipUtils.h
src/utils/ashmem.h
src/utils/misc.h
src/utils/threads.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/endian.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/limits.h
/usr/include/linux/ioctl.h
/usr/include/linux/limits.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/epoll.h
/usr/include/sys/ioctl.h
/usr/include/sys/stat.h
/usr/include/sys/statfs.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/asm/ioctl.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/endian.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/in.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigset.h
/usr/include/bits/stat.h
/usr/include/bits/statfs.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sched.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm/ioctls.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/sys/uio.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm/errno.h
/usr/include/asm/socket.h
/usr/include/bits/libc-lock.h
/usr/include/bits/sockaddr.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/socket.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm/sockios.h
/usr/include/asm-generic/sockios.h
